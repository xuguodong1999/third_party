Index: rdkit-src/rdkit/Code/GraphMol/Descriptors/PMI.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/Descriptors/PMI.h b/rdkit-src/rdkit/Code/GraphMol/Descriptors/PMI.h
--- a/rdkit-src/rdkit/Code/GraphMol/Descriptors/PMI.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/Descriptors/PMI.h	(date 1693030079502)
@@ -37,7 +37,7 @@
                                      bool force = false);
 const std::string PMI1Version = "1.0.0";
 //! second principal moment of inertia
-RDKIT_DESCRIPTORS_EXPORT RDKIT_DESCRIPTORS_EXPORT double PMI2(
+RDKIT_DESCRIPTORS_EXPORT double PMI2(
     const ROMol&, int confId = -1, bool useAtomicMasses = true,
     bool force = false);
 const std::string PMI2Version = "1.0.0";
Index: openbabel-src/openbabel/src/ops/sort.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/ops/sort.cpp b/openbabel-src/openbabel/src/ops/sort.cpp
--- a/openbabel-src/openbabel/src/ops/sort.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/ops/sort.cpp	(date 1693030078983)
@@ -29,7 +29,7 @@
 {
 
 template<class T>
-struct Order : public std::binary_function<std::pair<OBBase*,T>, std::pair<OBBase*,T>, bool>
+struct Order
 {
   Order(OBDescriptor* pDesc, bool rev) : _pDesc(pDesc), _rev(rev){}
   bool operator()(std::pair<OBBase*,T> p1, std::pair<OBBase*,T> p2) const
Index: rdkit-src/rdkit/Code/GraphMol/Descriptors/MORSE.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/Descriptors/MORSE.cpp b/rdkit-src/rdkit/Code/GraphMol/Descriptors/MORSE.cpp
--- a/rdkit-src/rdkit/Code/GraphMol/Descriptors/MORSE.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/Descriptors/MORSE.cpp	(date 1693030079502)
@@ -115,6 +115,7 @@
     R7[i] = std::round(1000 * res7) / 1000;
   }
 
+  R1.reserve(R1.size() + R2.size() + R3.size() + R4.size() + R5.size() + R6.size() + R7.size());
   R1.insert(R1.end(), R2.begin(), R2.end());
   R1.insert(R1.end(), R3.begin(), R3.end());
   R1.insert(R1.end(), R4.begin(), R4.end());
Index: openbabel-src/openbabel/src/math/matrix3x3.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/math/matrix3x3.cpp b/openbabel-src/openbabel/src/math/matrix3x3.cpp
--- a/openbabel-src/openbabel/src/math/matrix3x3.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/math/matrix3x3.cpp	(date 1693030078920)
@@ -545,7 +545,7 @@
     eigenvectors. The eigenvectors are normalized and mutually
     orthogonal.
   */
-  void matrix3x3::jacobi(unsigned int n, double *a, double *d, double *v)
+  void matrix3x3::jacobi(int n, double *a, double *d, double *v)
   {
     double onorm, dnorm;
     double b, dma, q, t, c, s;
@@ -557,9 +557,9 @@
 
     // Set v to the identity matrix, set the vector d to contain the
     // diagonal elements of the matrix a
-    for (j = 0; j < static_cast<int>(n); j++)
+    for (j = 0; j < n; j++)
       {
-        for (i = 0; i < static_cast<int>(n); i++)
+        for (i = 0; i < n; i++)
           v[n*i+j] = 0.0;
         v[n*j+j] = 1.0;
         d[j] = a[n*j+j];
@@ -572,7 +572,7 @@
         // onorm to the maximum norm of the off-diagonal elements
         dnorm = 0.0;
         onorm = 0.0;
-        for (j = 0; j < static_cast<int>(n); j++)
+        for (j = 0; j < n; j++)
           {
             dnorm += (double)fabs(d[j]);
             for (i = 0; i < j; i++)
@@ -582,7 +582,7 @@
         if((onorm/dnorm) <= 1.0e-12)
           goto Exit_now;
 
-        for (j = 1; j < static_cast<int>(n); j++)
+        for (j = 1; j < n; j++)
           {
             for (i = 0; i <= j - 1; i++)
               {
@@ -619,14 +619,14 @@
                         a[n*i+k] = atemp;
                       }
 
-                    for (k = j+1; k < static_cast<int>(n); k++)
+                    for (k = j+1; k < n; k++)
                       {
                         atemp = c * a[n*i+k] - s * a[n*j+k];
                         a[n*j+k] = s * a[n*i+k] + c * a[n*j+k];
                         a[n*i+k] = atemp;
                       }
 
-                    for (k = 0; k < static_cast<int>(n); k++)
+                    for (k = 0; k < n; k++)
                       {
                         vtemp = c * v[n*k+i] - s * v[n*k+j];
                         v[n*k+j] = s * v[n*k+i] + c * v[n*k+j];
@@ -647,11 +647,11 @@
     // smallest eigenvalues come first.
     nrot = l;
 
-    for (j = 0; j < static_cast<int>(n)-1; j++)
+    for (j = 0; j < n-1; j++)
       {
         k = j;
         dtemp = d[k];
-        for (i = j+1; i < static_cast<int>(n); i++)
+        for (i = j+1; i < n; i++)
           if(d[i] < dtemp)
             {
               k = i;
@@ -662,7 +662,7 @@
           {
             d[k] = d[j];
             d[j] = dtemp;
-            for (i = 0; i < static_cast<int>(n); i++)
+            for (i = 0; i < n; i++)
               {
                 dtemp = v[n*i+k];
                 v[n*i+k] = v[n*i+j];
Index: rdkit-src/rdkit/Code/GraphMol/MolStandardize/TautomerCatalog/TautomerCatalogParams.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/MolStandardize/TautomerCatalog/TautomerCatalogParams.cpp b/rdkit-src/rdkit/Code/GraphMol/MolStandardize/TautomerCatalog/TautomerCatalogParams.cpp
--- a/rdkit-src/rdkit/Code/GraphMol/MolStandardize/TautomerCatalog/TautomerCatalogParams.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/MolStandardize/TautomerCatalog/TautomerCatalogParams.cpp	(date 1693030079565)
@@ -45,6 +45,11 @@
 
 TautomerCatalogParams::~TautomerCatalogParams() {}
 
+TautomerCatalogParams::TautomerCatalogParams() {
+    d_typeStr = "Tautomer Catalog Parameters";
+    d_transforms.clear();
+}
+
 const std::vector<TautomerTransform> &TautomerCatalogParams::getTransforms()
     const {
   return d_transforms;
Index: openbabel-src/openbabel/src/stereo/perception.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/stereo/perception.cpp b/openbabel-src/openbabel/src/stereo/perception.cpp
--- a/openbabel-src/openbabel/src/stereo/perception.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/stereo/perception.cpp	(date 1693030078998)
@@ -2969,9 +2969,6 @@
   }
 
   void StereoRefToImplicit(OBMol& mol, OBStereo::Ref atomId) {
-    // The following is for use in replace_if(...) below
-    const std::binder1st<std::equal_to<OBStereo::Ref> > equal_to_atomId = std::bind1st (equal_to<OBStereo::Ref>(), atomId);
-
     std::vector<OBGenericData*> vdata = mol.GetAllData(OBGenericDataType::StereoData);
     for (std::vector<OBGenericData*>::iterator data = vdata.begin(); data != vdata.end(); ++data) {
       OBStereo::Type datatype = ((OBStereoBase*)*data)->GetType();
@@ -2987,23 +2984,20 @@
       if (datatype == OBStereo::CisTrans) {
         OBCisTransStereo *ct = dynamic_cast<OBCisTransStereo*>(*data);
         OBCisTransStereo::Config ct_cfg = ct->GetConfig();
-        replace_if(ct_cfg.refs.begin(), ct_cfg.refs.end(), equal_to_atomId, (OBStereo::Ref) OBStereo::ImplicitRef);
+        replace(ct_cfg.refs.begin(), ct_cfg.refs.end(), atomId, (OBStereo::Ref) OBStereo::ImplicitRef);
         ct->SetConfig(ct_cfg);
       }
       else if (datatype == OBStereo::Tetrahedral) {
         OBTetrahedralStereo *ts = dynamic_cast<OBTetrahedralStereo*>(*data);
         OBTetrahedralStereo::Config ts_cfg = ts->GetConfig();
         if (ts_cfg.from == atomId) ts_cfg.from = OBStereo::ImplicitRef;
-        replace_if(ts_cfg.refs.begin(), ts_cfg.refs.end(), equal_to_atomId, (OBStereo::Ref) OBStereo::ImplicitRef);
+        replace(ts_cfg.refs.begin(), ts_cfg.refs.end(), atomId, (OBStereo::Ref) OBStereo::ImplicitRef);
         ts->SetConfig(ts_cfg);
       }
     }
   }
 
   void ImplicitRefToStereo(OBMol& mol, OBStereo::Ref centerId, OBStereo::Ref newId) {
-    // The following is for use in replace_if(...) below
-    const std::binder1st<std::equal_to<OBStereo::Ref> > equal_to_implicitRef = std::bind1st (equal_to<OBStereo::Ref>(), (OBStereo::Ref) OBStereo::ImplicitRef);
-
     std::vector<OBGenericData*> vdata = mol.GetAllData(OBGenericDataType::StereoData);
     for (std::vector<OBGenericData*>::iterator data = vdata.begin(); data != vdata.end(); ++data) {
       OBStereo::Type datatype = ((OBStereoBase*)*data)->GetType();
@@ -3022,9 +3016,9 @@
         if (ct_cfg.begin == centerId || ct_cfg.end == centerId) {
           // Assumption: the first two refs are on the begin atom, the last two on the end atom
           if (ct_cfg.begin == centerId)
-            replace_if(ct_cfg.refs.begin(), ct_cfg.refs.begin()+2, equal_to_implicitRef, (OBStereo::Ref) newId);
+            replace(ct_cfg.refs.begin(), ct_cfg.refs.begin()+2, (OBStereo::Ref) OBStereo::ImplicitRef, (OBStereo::Ref) newId);
           if (ct_cfg.end == centerId)
-            replace_if(ct_cfg.refs.begin()+2, ct_cfg.refs.end(), equal_to_implicitRef, (OBStereo::Ref) newId);
+            replace(ct_cfg.refs.begin()+2, ct_cfg.refs.end(), (OBStereo::Ref) OBStereo::ImplicitRef, (OBStereo::Ref) newId);
           ct->SetConfig(ct_cfg);
         }
       }
@@ -3033,7 +3027,7 @@
         OBTetrahedralStereo::Config ts_cfg = ts->GetConfig();
         if (ts_cfg.center == centerId) {
           if (ts_cfg.from == OBStereo::ImplicitRef) ts_cfg.from = newId;
-          replace_if(ts_cfg.refs.begin(), ts_cfg.refs.end(), equal_to_implicitRef, (OBStereo::Ref) newId);
+          replace(ts_cfg.refs.begin(), ts_cfg.refs.end(), (OBStereo::Ref) OBStereo::ImplicitRef, (OBStereo::Ref) newId);
           ts->SetConfig(ts_cfg);
         }
       }
Index: rdkit-src/rdkit/Code/GraphMol/MolStandardize/TautomerCatalog/TautomerCatalogParams.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/MolStandardize/TautomerCatalog/TautomerCatalogParams.h b/rdkit-src/rdkit/Code/GraphMol/MolStandardize/TautomerCatalog/TautomerCatalogParams.h
--- a/rdkit-src/rdkit/Code/GraphMol/MolStandardize/TautomerCatalog/TautomerCatalogParams.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/MolStandardize/TautomerCatalog/TautomerCatalogParams.h	(date 1693030079643)
@@ -36,10 +36,7 @@
 class RDKIT_MOLSTANDARDIZE_EXPORT TautomerCatalogParams
     : public RDCatalog::CatalogParams {
  public:
-  TautomerCatalogParams() {
-    d_typeStr = "Tautomer Catalog Parameters";
-    d_transforms.clear();
-  }
+  TautomerCatalogParams();
 
   TautomerCatalogParams(const std::string &tautomerFile);
   TautomerCatalogParams(const TautomerTransformDefs &data);
Index: rdkit-src/rdkit/Code/GraphMol/Descriptors/RDF.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/Descriptors/RDF.cpp b/rdkit-src/rdkit/Code/GraphMol/Descriptors/RDF.cpp
--- a/rdkit-src/rdkit/Code/GraphMol/Descriptors/RDF.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/Descriptors/RDF.cpp	(date 1693030079518)
@@ -112,6 +112,7 @@
     R7[i] = std::round(1000 * res7) / 1000;
   }
 
+  R1.reserve(R1.size() + R2.size() + R3.size() + R4.size() + R5.size() + R6.size() + R7.size());
   R1.insert(R1.end(), R2.begin(), R2.end());
   R1.insert(R1.end(), R3.begin(), R3.end());
   R1.insert(R1.end(), R4.begin(), R4.end());
Index: openbabel-src/openbabel/src/depict/depict.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/depict/depict.cpp b/openbabel-src/openbabel/src/depict/depict.cpp
--- a/openbabel-src/openbabel/src/depict/depict.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/depict/depict.cpp	(date 1693030078717)
@@ -1235,7 +1235,7 @@
                       end.x() - offset.x(), end.y() - offset.y());
 
     static const float dashpattern[] = {5., 5.};
-    static const vector<double> pat = vector<double>(dashpattern,dashpattern + sizeof(dashpattern)/sizeof(double));
+    static const vector<double> pat = vector<double>(dashpattern, dashpattern + sizeof(dashpattern)/sizeof(float));
     painter->DrawLine(begin.x() + offset.x(), begin.y() + offset.y(),
                       end.x() + offset.x(), end.y() + offset.y(), pat);
   }
Index: rdkit-src/rdkit/Code/GraphMol/SmilesParse/lex.yysmarts.cpp.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/SmilesParse/lex.yysmarts.cpp.cmake b/rdkit-src/rdkit/Code/GraphMol/SmilesParse/lex.yysmarts.cpp.cmake
--- a/rdkit-src/rdkit/Code/GraphMol/SmilesParse/lex.yysmarts.cpp.cmake	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/SmilesParse/lex.yysmarts.cpp.cmake	(date 1693030079690)
@@ -809,7 +809,7 @@
 #endif
 
 #include <cstdio>
-#ifdef WIN32
+#if defined(WIN32) || defined(__MINGW32__)
 #include <io.h>
 #endif
 
Index: rdkit-src/rdkit/Code/GraphMol/SmilesParse/lex.yysmiles.cpp.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/SmilesParse/lex.yysmiles.cpp.cmake b/rdkit-src/rdkit/Code/GraphMol/SmilesParse/lex.yysmiles.cpp.cmake
--- a/rdkit-src/rdkit/Code/GraphMol/SmilesParse/lex.yysmiles.cpp.cmake	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/SmilesParse/lex.yysmiles.cpp.cmake	(date 1693030079705)
@@ -816,7 +816,7 @@
 #endif
 
 #include <cstdio>
-#ifdef WIN32
+#if defined(WIN32) || defined(__MINGW32__)
 #include <io.h>
 #endif
 
Index: cairo-src/cairo/src/cairo-ps-surface.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cairo-src/cairo/src/cairo-ps-surface.c b/cairo-src/cairo/src/cairo-ps-surface.c
--- a/cairo-src/cairo/src/cairo-ps-surface.c	(revision c3b672634f0635af1ad0ffa8c15b34fc7c1035cf)
+++ b/cairo-src/cairo/src/cairo-ps-surface.c	(date 1693030076921)
@@ -102,7 +102,7 @@
 #define DEBUG_FALLBACK(s)
 #endif
 
-#ifndef HAVE_CTIME_R
+#if !defined(HAVE_CTIME_R) && !defined(unix)
 static char *ctime_r(const time_t *timep, char *buf)
 {
     (void)buf;
Index: boost-src/boost/libs/serialization/src/basic_text_woprimitive.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/serialization/src/basic_text_woprimitive.cpp b/boost-src/boost/libs/serialization/src/basic_text_woprimitive.cpp
--- a/boost-src/boost/libs/serialization/src/basic_text_woprimitive.cpp	(revision 0ca603daf99888bf059c01ae1bab1b27dbc35ebe)
+++ b/boost-src/boost/libs/serialization/src/basic_text_woprimitive.cpp	(date 1693030076890)
@@ -20,6 +20,7 @@
 #  pragma warning (disable : 4786) // too long name, harmless warning
 #endif
 
+#define BOOST_ARCHIVE_SOURCE
 #define BOOST_WARCHIVE_SOURCE
 #include <boost/serialization/config.hpp>
 #include <boost/archive/detail/auto_link_warchive.hpp>
Index: boost-src/boost/libs/serialization/src/codecvt_null.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/serialization/src/codecvt_null.cpp b/boost-src/boost/libs/serialization/src/codecvt_null.cpp
--- a/boost-src/boost/libs/serialization/src/codecvt_null.cpp	(revision 0ca603daf99888bf059c01ae1bab1b27dbc35ebe)
+++ b/boost-src/boost/libs/serialization/src/codecvt_null.cpp	(date 1693030076890)
@@ -7,6 +7,7 @@
 // License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
 // http://www.boost.org/LICENSE_1_0.txt)
 
+#define BOOST_ARCHIVE_SOURCE
 #define BOOST_WARCHIVE_SOURCE
 #include <boost/serialization/config.hpp>
 #include <boost/archive/codecvt_null.hpp>
Index: openbabel-src/openbabel/src/charges/eem.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/charges/eem.cpp b/openbabel-src/openbabel/src/charges/eem.cpp
--- a/openbabel-src/openbabel/src/charges/eem.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/charges/eem.cpp	(date 1693030078702)
@@ -92,7 +92,7 @@
 
   void EEMCharges::_loadParameters()
   {
-    std::ifstream ifs;
+    std::istringstream ifs;
     if (!OpenDatafile(ifs, _parameters_file).length()) {
       obErrorLog.ThrowError(__FUNCTION__, std::string("Cannot open file with parameters: ").append(_parameters_file), obError);
       return;
Index: openbabel-src/openbabel/src/charges/qeq.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/charges/qeq.cpp b/openbabel-src/openbabel/src/charges/qeq.cpp
--- a/openbabel-src/openbabel/src/charges/qeq.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/charges/qeq.cpp	(date 1693030078717)
@@ -15,7 +15,7 @@
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 ***********************************************************************/
-
+#include <openbabel/babelconfig.h>
 #ifdef HAVE_EIGEN
 
 #include "qeq.h"
@@ -125,7 +125,7 @@
     char buffer[BUFF_SIZE];
 
     // open data/qeq.txt
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "qeq.txt").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open qeq.txt", obError);
       return;
Index: boost-src/boost/libs/serialization/src/text_wiarchive.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/serialization/src/text_wiarchive.cpp b/boost-src/boost/libs/serialization/src/text_wiarchive.cpp
--- a/boost-src/boost/libs/serialization/src/text_wiarchive.cpp	(revision 0ca603daf99888bf059c01ae1bab1b27dbc35ebe)
+++ b/boost-src/boost/libs/serialization/src/text_wiarchive.cpp	(date 1693030076890)
@@ -14,6 +14,7 @@
 #error "wide char i/o not supported on this platform"
 #else
 
+#define BOOST_ARCHIVE_SOURCE
 #define BOOST_WARCHIVE_SOURCE
 #include <boost/serialization/config.hpp>
 #include <boost/archive/text_wiarchive.hpp>
Index: openbabel-src/openbabel/src/charges/eqeq.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/charges/eqeq.cpp b/openbabel-src/openbabel/src/charges/eqeq.cpp
--- a/openbabel-src/openbabel/src/charges/eqeq.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/charges/eqeq.cpp	(date 1693030078702)
@@ -15,7 +15,7 @@
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 ***********************************************************************/
-
+#include <openbabel/babelconfig.h>
 #ifdef HAVE_EIGEN3
 
 #include "eqeq.h"
@@ -52,7 +52,7 @@
     char buffer[BUFF_SIZE];
 
     // open data/eqeqIonizations.txt
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "eqeqIonizations.txt").length() == 0)
     {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open eqeqIonizations.txt", obError);
Index: boost-src/boost/libs/serialization/src/binary_woarchive.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/serialization/src/binary_woarchive.cpp b/boost-src/boost/libs/serialization/src/binary_woarchive.cpp
--- a/boost-src/boost/libs/serialization/src/binary_woarchive.cpp	(revision 0ca603daf99888bf059c01ae1bab1b27dbc35ebe)
+++ b/boost-src/boost/libs/serialization/src/binary_woarchive.cpp	(date 1693030076890)
@@ -14,6 +14,7 @@
 #error "wide char i/o not supported on this platform"
 #else
 
+#define BOOST_ARCHIVE_SOURCE
 #define BOOST_WARCHIVE_SOURCE
 #include <boost/archive/binary_woarchive.hpp>
 
Index: openbabel-src/openbabel/src/charges/qtpie.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/charges/qtpie.cpp b/openbabel-src/openbabel/src/charges/qtpie.cpp
--- a/openbabel-src/openbabel/src/charges/qtpie.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/charges/qtpie.cpp	(date 1693030078717)
@@ -15,7 +15,7 @@
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 ***********************************************************************/
-
+#include <openbabel/babelconfig.h>
 #ifdef HAVE_EIGEN
 
 #include "qtpie.h"
@@ -117,7 +117,7 @@
     char buffer[BUFF_SIZE];
 
     // open data/qeq.txt
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "qeq.txt").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open qeq.txt", obError);
       return;
Index: taskflow-src/taskflow/taskflow/taskflow.hpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/taskflow-src/taskflow/taskflow/taskflow.hpp b/taskflow-src/taskflow/taskflow/taskflow.hpp
--- a/taskflow-src/taskflow/taskflow/taskflow.hpp	(revision 12f8bd4e970ab27fd3dee3bffa24b5b48b54ba39)
+++ b/taskflow-src/taskflow/taskflow/taskflow.hpp	(date 1693030079768)
@@ -3,6 +3,7 @@
 #include "core/executor.hpp"
 #include "core/async.hpp"
 #include "algorithm/critical.hpp"
+#include "algorithm/for_each.hpp"
 
 /**
 @dir taskflow
Index: boost-src/boost/libs/serialization/src/basic_text_wiprimitive.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/serialization/src/basic_text_wiprimitive.cpp b/boost-src/boost/libs/serialization/src/basic_text_wiprimitive.cpp
--- a/boost-src/boost/libs/serialization/src/basic_text_wiprimitive.cpp	(revision 0ca603daf99888bf059c01ae1bab1b27dbc35ebe)
+++ b/boost-src/boost/libs/serialization/src/basic_text_wiprimitive.cpp	(date 1693030076890)
@@ -20,6 +20,7 @@
 #  pragma warning (disable : 4786) // too long name, harmless warning
 #endif
 
+#define BOOST_ARCHIVE_SOURCE
 #define BOOST_WARCHIVE_SOURCE
 #include <boost/serialization/config.hpp>
 #include <boost/archive/detail/auto_link_warchive.hpp>
Index: openbabel-src/openbabel/src/formats/exampleformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/exampleformat.cpp b/openbabel-src/openbabel/src/formats/exampleformat.cpp
--- a/openbabel-src/openbabel/src/formats/exampleformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/exampleformat.cpp	(date 1693030078842)
@@ -32,6 +32,7 @@
 
 #include <openbabel/babelconfig.h>
 #include <openbabel/obmolecformat.h>
+#include <openbabel/mol.h>
 
 using namespace std;
 namespace OpenBabel
Index: fluentui-src/fluentui/src/Screenshot.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fluentui-src/fluentui/src/Screenshot.cpp b/fluentui-src/fluentui/src/Screenshot.cpp
--- a/fluentui-src/fluentui/src/Screenshot.cpp	(revision 2818b84860697f60bf1cf49f58cba7ff0dc6070e)
+++ b/fluentui-src/fluentui/src/Screenshot.cpp	(date 1693031199511)
@@ -35,7 +35,7 @@
     _desktopPixmap = qApp->primaryScreen()->grabWindow(0, _desktopGeometry.x(), _desktopGeometry.y(), _desktopGeometry.width(), _desktopGeometry.height());
     int w = qApp->primaryScreen()->geometry().width();
     int h = qApp->primaryScreen()->geometry().height();
-    foreach (auto item, qApp->screens()) {
+    Q_FOREACH (auto item, qApp->screens()) {
         if(item != qApp->primaryScreen()){
             w = w + item->geometry().width()/qApp->primaryScreen()->devicePixelRatio();
         }
Index: boost-src/boost/libs/serialization/src/xml_woarchive.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/serialization/src/xml_woarchive.cpp b/boost-src/boost/libs/serialization/src/xml_woarchive.cpp
--- a/boost-src/boost/libs/serialization/src/xml_woarchive.cpp	(revision 0ca603daf99888bf059c01ae1bab1b27dbc35ebe)
+++ b/boost-src/boost/libs/serialization/src/xml_woarchive.cpp	(date 1693030076905)
@@ -17,6 +17,7 @@
 #error "wide char i/o not supported on this platform"
 #else
 
+#define BOOST_ARCHIVE_SOURCE
 #define BOOST_WARCHIVE_SOURCE
 #include <boost/serialization/config.hpp>
 #include <boost/archive/xml_woarchive.hpp>
Index: rdkit-src/rdkit/Code/GraphMol/Basement/FeatTrees/FeatTreeUtils.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/Basement/FeatTrees/FeatTreeUtils.cpp b/rdkit-src/rdkit/Code/GraphMol/Basement/FeatTrees/FeatTreeUtils.cpp
--- a/rdkit-src/rdkit/Code/GraphMol/Basement/FeatTrees/FeatTreeUtils.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/Basement/FeatTrees/FeatTreeUtils.cpp	(date 1693030079486)
@@ -16,7 +16,7 @@
 #include "FeatTree.h"
 
 #include <boost/graph/biconnected_components.hpp>
-#include <boost/property_map.hpp>
+#include <boost/property_map/property_map.hpp>
 #include <map>
 #include <set>
 
Index: boost-src/boost/libs/gil/include/boost/gil/extension/rasterization/ellipse.hpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/gil/include/boost/gil/extension/rasterization/ellipse.hpp b/boost-src/boost/libs/gil/include/boost/gil/extension/rasterization/ellipse.hpp
--- a/boost-src/boost/libs/gil/include/boost/gil/extension/rasterization/ellipse.hpp	(revision 8994c2ff8ed8b88e0ffef9658a4c603c4a001fad)
+++ b/boost-src/boost/libs/gil/include/boost/gil/extension/rasterization/ellipse.hpp	(date 1693030076874)
@@ -37,8 +37,8 @@
     /// center respectively.
     /// \param semi_axes - Point containing positive integer lengths of horizontal semi-axis
     /// and vertical semi-axis respectively.
-    midpoint_ellipse_rasterizer(point<unsigned int> center_point,
-        point<unsigned int> semi_axes_values)
+    midpoint_ellipse_rasterizer(point_t center_point,
+        point_t semi_axes_values)
         : center(center_point)
         , semi_axes(semi_axes_values)
     {}
@@ -130,7 +130,7 @@
         }
 
         // mutable center copy
-        point<unsigned int> center2(center);
+        point_t center2(center);
         --center2[0], --center2[1]; // For converting center co-ordinate values to zero based indexing.
         for (point_t pnt : trajectory_points)
         {
@@ -186,8 +186,8 @@
         draw_curve(view, pixel, obtain_trajectory());
     }
 
-    point<unsigned int> center;
-    point<unsigned int> semi_axes;
+    point_t center;
+    point_t semi_axes;
 };
 
 namespace detail {
Index: fluentui-src/fluentui/src/FluHttpInterceptor.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fluentui-src/fluentui/src/FluHttpInterceptor.h b/fluentui-src/fluentui/src/FluHttpInterceptor.h
--- a/fluentui-src/fluentui/src/FluHttpInterceptor.h	(revision 2818b84860697f60bf1cf49f58cba7ff0dc6070e)
+++ b/fluentui-src/fluentui/src/FluHttpInterceptor.h	(date 1693031227433)
@@ -11,7 +11,7 @@
 public:
     explicit FluHttpInterceptor(QObject *parent = nullptr);
 
-signals:
+Q_SIGNALS:
 
 };
 
Index: boost-src/boost/libs/serialization/src/binary_wiarchive.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/serialization/src/binary_wiarchive.cpp b/boost-src/boost/libs/serialization/src/binary_wiarchive.cpp
--- a/boost-src/boost/libs/serialization/src/binary_wiarchive.cpp	(revision 0ca603daf99888bf059c01ae1bab1b27dbc35ebe)
+++ b/boost-src/boost/libs/serialization/src/binary_wiarchive.cpp	(date 1693030076890)
@@ -14,6 +14,7 @@
 #error "wide char i/o not supported on this platform"
 #else
 
+#define BOOST_ARCHIVE_SOURCE
 #define BOOST_WARCHIVE_SOURCE
 #include <boost/archive/binary_wiarchive.hpp>
 #include <boost/archive/detail/archive_serializer_map.hpp>
Index: openbabel-src/openbabel/src/formats/fchkformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/fchkformat.cpp b/openbabel-src/openbabel/src/formats/fchkformat.cpp
--- a/openbabel-src/openbabel/src/formats/fchkformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/fchkformat.cpp	(date 1693030078842)
@@ -665,16 +665,16 @@
            no atom numbers < 0 or > Natoms */
         if (NBond.end() != find_if(NBond.begin(),
                                    NBond.end(),
-                                   bind2nd(less_equal<int>(), 0)) ||
+                                   bind(less_equal<int>(), std::placeholders::_1, 0)) ||
             NBond.end() != find_if(NBond.begin(),
                                    NBond.end(),
-                                   bind2nd(greater<int>(), MxBond)) ||
+                                   bind(greater<int>(), std::placeholders::_1, MxBond)) ||
             IBond.end() != find_if(IBond.begin(),
                                    IBond.end(),
-                                   bind2nd(less<int>(), 0)) ||
+                                   bind(less<int>(), std::placeholders::_1, 0)) ||
             IBond.end() != find_if(IBond.begin(),
                                    IBond.end(),
-                                   bind2nd(greater<int>(), Natoms)))
+                                   bind(greater<int>(), std::placeholders::_1, Natoms)))
           {
             error_msg << "Invalid connectivity : check the \"NBond\" and/or"
                       << " \"IBond\" section(s).";
Index: rdkit-src/rdkit/Code/GraphMol/Basement/FeatTrees/FeatTree.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/Basement/FeatTrees/FeatTree.h b/rdkit-src/rdkit/Code/GraphMol/Basement/FeatTrees/FeatTree.h
--- a/rdkit-src/rdkit/Code/GraphMol/Basement/FeatTrees/FeatTree.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/Basement/FeatTrees/FeatTree.h	(date 1693030079486)
@@ -13,7 +13,7 @@
 #define _RD_FEATTREE_H_
 
 #include <boost/graph/adjacency_list.hpp>
-#include <boost/property_map.hpp>
+#include <boost/property_map/property_map.hpp>
 #include <boost/shared_ptr.hpp>
 #include <set>
 
Index: boost-src/boost/libs/serialization/src/text_woarchive.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/serialization/src/text_woarchive.cpp b/boost-src/boost/libs/serialization/src/text_woarchive.cpp
--- a/boost-src/boost/libs/serialization/src/text_woarchive.cpp	(revision 0ca603daf99888bf059c01ae1bab1b27dbc35ebe)
+++ b/boost-src/boost/libs/serialization/src/text_woarchive.cpp	(date 1693030076890)
@@ -13,6 +13,7 @@
 #error "wide char i/o not supported on this platform"
 #else
 
+#define BOOST_ARCHIVE_SOURCE
 #define BOOST_WARCHIVE_SOURCE
 #include <boost/serialization/config.hpp>
 #include <boost/archive/text_woarchive.hpp>
Index: boost-src/boost/libs/serialization/src/xml_wgrammar.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/serialization/src/xml_wgrammar.cpp b/boost-src/boost/libs/serialization/src/xml_wgrammar.cpp
--- a/boost-src/boost/libs/serialization/src/xml_wgrammar.cpp	(revision 0ca603daf99888bf059c01ae1bab1b27dbc35ebe)
+++ b/boost-src/boost/libs/serialization/src/xml_wgrammar.cpp	(date 1693030076905)
@@ -14,6 +14,7 @@
 #error "wide char i/o not supported on this platform"
 #else
 
+#define BOOST_ARCHIVE_SOURCE
 #define BOOST_WARCHIVE_SOURCE
 #include <boost/serialization/config.hpp>
 #include <boost/archive/impl/basic_xml_grammar.hpp>
Index: boost-src/boost/libs/serialization/src/xml_wiarchive.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/serialization/src/xml_wiarchive.cpp b/boost-src/boost/libs/serialization/src/xml_wiarchive.cpp
--- a/boost-src/boost/libs/serialization/src/xml_wiarchive.cpp	(revision 0ca603daf99888bf059c01ae1bab1b27dbc35ebe)
+++ b/boost-src/boost/libs/serialization/src/xml_wiarchive.cpp	(date 1693030076905)
@@ -17,6 +17,7 @@
 #error "wide char i/o not supported on this platform"
 #else
 
+#define BOOST_ARCHIVE_SOURCE
 #define BOOST_WARCHIVE_SOURCE
 #include <boost/serialization/config.hpp>
 #include <boost/archive/xml_wiarchive.hpp>
Index: openbabel-src/openbabel/src/formats/chemdrawcdx.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/chemdrawcdx.cpp b/openbabel-src/openbabel/src/formats/chemdrawcdx.cpp
--- a/openbabel-src/openbabel/src/formats/chemdrawcdx.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/chemdrawcdx.cpp	(date 1693030078827)
@@ -810,7 +810,7 @@
 ///////////////////////////////////////////////////////////////////////
 bool CDXReader::ParseEnums(map<CDXTag, string>& enummap, const string& filename)
 {
-  ifstream ihs;
+  istringstream ihs;
   if(OpenDatafile(ihs, filename).empty())
   {
     obErrorLog.ThrowError(__FUNCTION__, 
Index: libpng-src/libpng/pngconf.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/libpng-src/libpng/pngconf.h b/libpng-src/libpng/pngconf.h
--- a/libpng-src/libpng/pngconf.h	(revision f135775ad4e5d4408d2e12ffcc71bb36e6b48551)
+++ b/libpng-src/libpng/pngconf.h	(date 1690902679926)
@@ -21,6 +21,7 @@
 #ifndef PNGCONF_H
 #define PNGCONF_H
 
+#include "libpng_export.h"
 #ifndef PNG_BUILDING_SYMBOL_TABLE /* else includes may cause problems */
 
 /* From libpng 1.6.0 libpng requires an ANSI X3.159-1989 ("ISOC90") compliant C
@@ -162,14 +163,6 @@
  * PNG_EXPORT_TYPE(type) A macro that pre or appends PNG_IMPEXP to
  *                       'type', compiler specific.
  *
- * PNG_DLL_EXPORT Set to the magic to use during a libpng build to
- *                make a symbol exported from the DLL.  Not used in the
- *                public header files; see pngpriv.h for how it is used
- *                in the libpng build.
- *
- * PNG_DLL_IMPORT Set to the magic to force the libpng symbols to come
- *                from a DLL - used to define PNG_IMPEXP when
- *                PNG_USE_DLL is set.
  */
 
 /* System specific discovery.
@@ -180,6 +173,7 @@
  * compiler-specific macros to the values required to change the calling
  * conventions of the various functions.
  */
+
 #if defined(_WIN32) || defined(__WIN32__) || defined(__NT__) || \
     defined(__CYGWIN__)
   /* Windows system (DOS doesn't support DLLs).  Includes builds under Cygwin or
@@ -222,23 +216,6 @@
 #  if defined(PNGAPI) && !defined(PNG_USER_PRIVATEBUILD)
 #     error "PNG_USER_PRIVATEBUILD must be defined if PNGAPI is changed"
 #  endif
-
-#  if (defined(_MSC_VER) && _MSC_VER < 800) ||\
-      (defined(__BORLANDC__) && __BORLANDC__ < 0x500)
-   /* older Borland and MSC
-    * compilers used '__export' and required this to be after
-    * the type.
-    */
-#    ifndef PNG_EXPORT_TYPE
-#      define PNG_EXPORT_TYPE(type) type PNG_IMPEXP
-#    endif
-#    define PNG_DLL_EXPORT __export
-#  else /* newer compiler */
-#    define PNG_DLL_EXPORT __declspec(dllexport)
-#    ifndef PNG_DLL_IMPORT
-#      define PNG_DLL_IMPORT __declspec(dllimport)
-#    endif
-#  endif /* compiler */
 
 #else /* !Windows */
 #  if (defined(__IBMC__) || defined(__IBMCPP__)) && defined(__OS2__)
@@ -265,16 +242,9 @@
  * then in an internal header file when building the library, otherwise (when
  * using the library) it is set here.
  */
-#ifndef PNG_IMPEXP
-#  if defined(PNG_USE_DLL) && defined(PNG_DLL_IMPORT)
-   /* This forces use of a DLL, disallowing static linking */
-#    define PNG_IMPEXP PNG_DLL_IMPORT
-#  endif
-
 #  ifndef PNG_IMPEXP
-#    define PNG_IMPEXP
+#    define PNG_IMPEXP LIBPNG_EXPORT
 #  endif
-#endif
 
 /* In 1.5.2 the definition of PNG_FUNCTION has been changed to always treat
  * 'attributes' as a storage class - the attributes go at the start of the
Index: openbabel-src/openbabel/src/formats/nwchemformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/nwchemformat.cpp b/openbabel-src/openbabel/src/formats/nwchemformat.cpp
--- a/openbabel-src/openbabel/src/formats/nwchemformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/nwchemformat.cpp	(date 1693030078873)
@@ -303,10 +303,11 @@
         blank_line = false;
         if (vs[0][0] == '0')
             charge = atoi(vs[4].c_str());
-        else if (vs[0][0] == '1')
+        else if (vs[0][0] == '1') {
             for (unsigned int i = 0; i < 3; i++)
                 if (vs[i+1][0] == '1')
                     dipole[i] = atof(vs[4].c_str());
+        }
         else if (vs[0][0] == '2')
         {
             double value = atof(vs[4].c_str());
Index: boost-src/boost/libs/url/include/boost/url/impl/segments_view.ipp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/url/include/boost/url/impl/segments_view.ipp b/boost-src/boost/libs/url/include/boost/url/impl/segments_view.ipp
--- a/boost-src/boost/libs/url/include/boost/url/impl/segments_view.ipp	(revision e549f40c8ba14aac07634caeb86ad45b8e01e610)
+++ b/boost-src/boost/libs/url/include/boost/url/impl/segments_view.ipp	(date 1693030076905)
@@ -27,7 +27,7 @@
 segments_view::
 segments_view(
     string_view s)
-    : segments_view(
+    : segments_base(
         parse_path(s).value(
             BOOST_URL_POS))
 {
Index: openbabel-src/openbabel/src/formats/mdffformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/mdffformat.cpp b/openbabel-src/openbabel/src/formats/mdffformat.cpp
--- a/openbabel-src/openbabel/src/formats/mdffformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/mdffformat.cpp	(date 1693030078873)
@@ -30,9 +30,13 @@
 #include <algorithm>
 
 #ifdef _MSC_VER
+#ifndef INFINITY
 #define INFINITY (DBL_MAX+DBL_MAX)
+#endif
+#ifndef NAN
 #define NAN (INFINITY-INFINITY)
 #endif
+#endif
 
 using namespace std;
 namespace OpenBabel {
@@ -133,7 +137,7 @@
     //    path = buffer;
     string full_path = pConv->GetInFilename();
     size_t found = full_path.rfind("/");
-    string path = (found == string::npos) ? "" : path.substr(0, found);
+    string path = (found == string::npos) ? "" : full_path.substr(0, found);
     string short_fn = full_path.substr(path.length(), string::npos);
 
     // Open files
Index: fluentui-src/fluentui/src/FluHttp.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fluentui-src/fluentui/src/FluHttp.cpp b/fluentui-src/fluentui/src/FluHttp.cpp
--- a/fluentui-src/fluentui/src/FluHttp.cpp	(revision 2818b84860697f60bf1cf49f58cba7ff0dc6070e)
+++ b/fluentui-src/fluentui/src/FluHttp.cpp	(date 1693031199511)
@@ -21,7 +21,7 @@
 }
 
 void FluHttp::cancel(){
-    foreach (QPointer<QNetworkReply> item, _cache) {
+    Q_FOREACH (QPointer<QNetworkReply> item, _cache) {
         if(item){
             item->abort();
         }
Index: rdkit-src/rdkit/Code/GraphMol/SubstructLibrary/SubstructLibrary.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/SubstructLibrary/SubstructLibrary.h b/rdkit-src/rdkit/Code/GraphMol/SubstructLibrary/SubstructLibrary.h
--- a/rdkit-src/rdkit/Code/GraphMol/SubstructLibrary/SubstructLibrary.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/SubstructLibrary/SubstructLibrary.h	(date 1693030079705)
@@ -412,7 +412,7 @@
       const std::vector<unsigned int> &indices) const override {
     std::vector<std::string> res;
     std::transform(indices.begin(), indices.end(), std::back_inserter(res),
-                   [=](unsigned idx) { return keys.at(idx); });
+                   [=, this](unsigned idx) { return keys.at(idx); });
     return res;
   }
   unsigned int size() const override { return keys.size(); }
Index: fluentui-src/fluentui/src/MainThread.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fluentui-src/fluentui/src/MainThread.h b/fluentui-src/fluentui/src/MainThread.h
--- a/fluentui-src/fluentui/src/MainThread.h	(revision 2818b84860697f60bf1cf49f58cba7ff0dc6070e)
+++ b/fluentui-src/fluentui/src/MainThread.h	(date 1693031176011)
@@ -14,7 +14,7 @@
     ~MainThread();
 private:
     static std::shared_ptr<MainThread> createShared(QObject* bindObject = nullptr);
-private slots:
+private Q_SLOTS:
     void mainThreadSlot(std::function<void()> func);
 private:
     MainThread(QObject* bindObject = nullptr);
Index: openbabel-src/openbabel/src/formats/povrayformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/povrayformat.cpp b/openbabel-src/openbabel/src/formats/povrayformat.cpp
--- a/openbabel-src/openbabel/src/formats/povrayformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/povrayformat.cpp	(date 1693030078889)
@@ -523,7 +523,7 @@
 
         /* ---- Add a pigment - statement for start-atom of bond ---- */
         bond_type = bond->GetBeginAtom() -> GetType();
-        bond_type.erase(remove_if(bond_type.begin(), bond_type.end(), bind1st(equal_to<char>(), '.')), bond_type.end());
+        bond_type.erase(remove(bond_type.begin(), bond_type.end(), '.'), bond_type.end());
         ofs << "\t    pigment{color Color_"
             << bond_type
             << "}" << endl;
@@ -584,7 +584,7 @@
 
         /* ---- Add a pigment - statement for end-atom of bond i ---- */
         bond_type = bond->GetEndAtom() -> GetType();
-        bond_type.erase(remove_if(bond_type.begin(), bond_type.end(), bind1st(equal_to<char>(), '.')), bond_type.end());
+        bond_type.erase(remove(bond_type.begin(), bond_type.end(), '.'), bond_type.end());
 
         ofs << "\t    pigment{color Color_"
             << bond_type
Index: openbabel-src/openbabel/src/formats/vaspformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/vaspformat.cpp b/openbabel-src/openbabel/src/formats/vaspformat.cpp
--- a/openbabel-src/openbabel/src/formats/vaspformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/vaspformat.cpp	(date 1693030078905)
@@ -532,7 +532,7 @@
             for (size_t natom = 0; natom < pmol->NumAtoms(); ++natom) {
               const vector3 dxyz = currXyz[natom] - prevXyz[natom];
               vector3::const_iterator iter = std::find_if(dxyz.begin(), dxyz.end(),
-                      std::bind2nd(std::not_equal_to<double>(), 0.0));
+                      std::bind(std::not_equal_to<double>(), std::placeholders::_1, 0.0));
               if (iter != dxyz.end()) dipGrad[natom].SetRow(iter - dxyz.begin(),
                                                             (currDm - prevDm) / *iter);
             }
@@ -586,7 +586,7 @@
       if (max != 0.0) {
         // Normalize
         std::transform(Intensities.begin(), Intensities.end(), Intensities.begin(),
-                       std::bind2nd(std::divides<double>(), max / 100.0));
+                       std::bind(std::divides<double>(), std::placeholders::_1, max / 100.0));
       } else {
         Intensities.clear();
       }
Index: indigo-src/indigo/core/indigo-core/common/base_c/defs.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/core/indigo-core/common/base_c/defs.h b/indigo-src/indigo/core/indigo-core/common/base_c/defs.h
--- a/indigo-src/indigo/core/indigo-core/common/base_c/defs.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/core/indigo-core/common/base_c/defs.h	(date 1693030077155)
@@ -19,9 +19,7 @@
 #ifndef __defs_h__
 #define __defs_h__
 
-#if !defined(__sign)
-#define __sign(a) (a > 0 ? 1 : (a < 0 ? -1 : 0))
-#endif
+#include "indigo_core_export.h"
 
 #if defined(_WIN32) && !defined(__MINGW32__)
 //#define vsnprintf _vsnprintf
@@ -52,26 +50,12 @@
 #endif
 
 #ifndef EXPORT_SYMBOL
-#ifdef _WIN32
-#define EXPORT_SYMBOL __declspec(dllexport)
-#elif (defined __GNUC__ || defined __APPLE__)
-#define EXPORT_SYMBOL __attribute__((visibility("default")))
-#else
-#define EXPORT_SYMBOL
-#endif
+#define EXPORT_SYMBOL INDIGO_CORE_EXPORT
 #endif
 
 #ifndef DLLEXPORT
-#ifdef _WIN32
-#ifdef INDIGO_PLUGIN
-#define DLLEXPORT __declspec(dllimport)
-#else
-#define DLLEXPORT EXPORT_SYMBOL
-#endif
-#else
 #define DLLEXPORT EXPORT_SYMBOL
 #endif
-#endif
 
 #ifndef CEXPORT
 #ifndef __cplusplus
Index: libpng-src/libpng/pngpriv.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/libpng-src/libpng/pngpriv.h b/libpng-src/libpng/pngpriv.h
--- a/libpng-src/libpng/pngpriv.h	(revision f135775ad4e5d4408d2e12ffcc71bb36e6b48551)
+++ b/libpng-src/libpng/pngpriv.h	(date 1690896373520)
@@ -322,16 +322,9 @@
  * PNG_IMPEXP must be set here when building the library to prevent pngconf.h
  * setting it to the "import" setting for a DLL build.
  */
-#ifndef PNG_IMPEXP
-#  ifdef PNG_BUILD_DLL
-#     define PNG_IMPEXP PNG_DLL_EXPORT
-#  else
-      /* Not building a DLL, or the DLL doesn't require specific export
-       * definitions.
-       */
-#     define PNG_IMPEXP
+#  ifndef PNG_IMPEXP
+#    define PNG_IMPEXP LIBPNG_EXPORT
 #  endif
-#endif
 
 /* No warnings for private or deprecated functions in the build: */
 #ifndef PNG_DEPRECATED
@@ -391,11 +384,6 @@
 
 #include "png.h"
 
-/* pngconf.h does not set PNG_DLL_EXPORT unless it is required, so: */
-#ifndef PNG_DLL_EXPORT
-#  define PNG_DLL_EXPORT
-#endif
-
 /* This is a global switch to set the compilation for an installed system
  * (a release build).  It can be set for testing debug builds to ensure that
  * they will compile when the build type is switched to RC or STABLE, the
Index: rdkit-src/rdkit/Code/GraphMol/MolAlign/O3AAlignMolecules.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/MolAlign/O3AAlignMolecules.h b/rdkit-src/rdkit/Code/GraphMol/MolAlign/O3AAlignMolecules.h
--- a/rdkit-src/rdkit/Code/GraphMol/MolAlign/O3AAlignMolecules.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/MolAlign/O3AAlignMolecules.h	(date 1693030079565)
@@ -27,7 +27,7 @@
 
 namespace RDKit {
 namespace MolAlign {
-struct RDKIT_MOLALIGN_EXPORT O3AFuncData {
+struct RDKIT_O3AALIGN_EXPORT O3AFuncData {
   const Conformer *prbConf;
   const Conformer *refConf;
   void *prbProp;
@@ -46,7 +46,7 @@
 //! is defined by a pair of atom indexes (one for the probe,
 //! one for the reference) and a weight. Constraints can
 //! can be added via the O3AConstraintVect class.
-class RDKIT_MOLALIGN_EXPORT O3AConstraint {
+class RDKIT_O3AALIGN_EXPORT O3AConstraint {
   friend class O3AConstraintVect;
 
  public:
@@ -66,7 +66,7 @@
 //! method is invoked, the vector is sorted to make lookup faster.
 //! Hence, constraints are not necessarily stored in the same order
 //! they were appended.
-class RDKIT_MOLALIGN_EXPORT O3AConstraintVect {
+class RDKIT_O3AALIGN_EXPORT O3AConstraintVect {
  public:
   O3AConstraintVect() {}
   ~O3AConstraintVect() = default;
@@ -128,7 +128,7 @@
   O3_LOCAL_ONLY = (1 << 2)
 };
 
-class RDKIT_MOLALIGN_EXPORT MolHistogram {
+class RDKIT_O3AALIGN_EXPORT MolHistogram {
  public:
   MolHistogram(const ROMol &mol, const double *dmat, bool cleanupDmat = false);
   ~MolHistogram() = default;
@@ -142,7 +142,7 @@
   boost::multi_array<int, 2> d_h;
 };
 
-class RDKIT_MOLALIGN_EXPORT LAP {
+class RDKIT_O3AALIGN_EXPORT LAP {
  public:
   LAP(unsigned int dim)
       : d_rowSol(dim),
@@ -184,7 +184,7 @@
   boost::multi_array<int, 2> d_cost;
 };
 
-class RDKIT_MOLALIGN_EXPORT SDM {
+class RDKIT_O3AALIGN_EXPORT SDM {
  public:
   // constructor
   SDM(const Conformer *prbConf = nullptr, const Conformer *refConf = nullptr,
@@ -271,7 +271,7 @@
   }
 };
 
-class RDKIT_MOLALIGN_EXPORT O3A {
+class RDKIT_O3AALIGN_EXPORT O3A {
  public:
   //! pre-defined atom typing schemes
   typedef enum { MMFF94 = 0, CRIPPEN } AtomTypeScheme;
@@ -319,30 +319,30 @@
   double d_o3aScore;
 };
 
-RDKIT_MOLALIGN_EXPORT void randomTransform(ROMol &mol, const int cid = -1,
+RDKIT_O3AALIGN_EXPORT void randomTransform(ROMol &mol, const int cid = -1,
                                            const int seed = -1);
-RDKIT_MOLALIGN_EXPORT const RDGeom::POINT3D_VECT *reflect(
+RDKIT_O3AALIGN_EXPORT const RDGeom::POINT3D_VECT *reflect(
     const Conformer &conf);
-RDKIT_MOLALIGN_EXPORT int o3aMMFFCostFunc(const unsigned int prbIdx,
+RDKIT_O3AALIGN_EXPORT int o3aMMFFCostFunc(const unsigned int prbIdx,
                                           const unsigned int refIdx,
                                           double hSum, void *data);
-RDKIT_MOLALIGN_EXPORT double o3aMMFFWeightFunc(const unsigned int prbIdx,
+RDKIT_O3AALIGN_EXPORT double o3aMMFFWeightFunc(const unsigned int prbIdx,
                                                const unsigned int refIdx,
                                                void *data);
-RDKIT_MOLALIGN_EXPORT double o3aMMFFScoringFunc(const unsigned int prbIdx,
+RDKIT_O3AALIGN_EXPORT double o3aMMFFScoringFunc(const unsigned int prbIdx,
                                                 const unsigned int refIdx,
                                                 void *data);
-RDKIT_MOLALIGN_EXPORT int o3aCrippenCostFunc(const unsigned int prbIdx,
+RDKIT_O3AALIGN_EXPORT int o3aCrippenCostFunc(const unsigned int prbIdx,
                                              const unsigned int refIdx,
                                              double hSum, void *data);
-RDKIT_MOLALIGN_EXPORT double o3aCrippenWeightFunc(const unsigned int prbIdx,
+RDKIT_O3AALIGN_EXPORT double o3aCrippenWeightFunc(const unsigned int prbIdx,
                                                   const unsigned int refIdx,
                                                   void *data);
-RDKIT_MOLALIGN_EXPORT double o3aCrippenScoringFunc(const unsigned int prbIdx,
+RDKIT_O3AALIGN_EXPORT double o3aCrippenScoringFunc(const unsigned int prbIdx,
                                                    const unsigned int refIdx,
                                                    void *data);
 
-RDKIT_MOLALIGN_EXPORT void getO3AForProbeConfs(
+RDKIT_O3AALIGN_EXPORT void getO3AForProbeConfs(
     ROMol &prbMol, const ROMol &refMol, void *prbProp, void *refProp,
     std::vector<boost::shared_ptr<O3A>> &res, int numThreads = 1,
     O3A::AtomTypeScheme atomTypes = O3A::MMFF94, const int refCid = -1,
Index: eigen-src/eigen/Eigen/src/Core/util/DisableStupidWarnings.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/eigen-src/eigen/Eigen/src/Core/util/DisableStupidWarnings.h b/eigen-src/eigen/Eigen/src/Core/util/DisableStupidWarnings.h
--- a/eigen-src/eigen/Eigen/src/Core/util/DisableStupidWarnings.h	(revision 3147391d946bb4b6c68edd901f2add6ac1f31f8c)
+++ b/eigen-src/eigen/Eigen/src/Core/util/DisableStupidWarnings.h	(date 1693030076936)
@@ -74,25 +74,25 @@
 #endif
 
 #if defined __NVCC__
-  #pragma diag_suppress boolean_controlling_expr_is_constant
+  #pragma nv_diag_suppress boolean_controlling_expr_is_constant
   // Disable the "statement is unreachable" message
-  #pragma diag_suppress code_is_unreachable
+  #pragma nv_diag_suppress code_is_unreachable
   // Disable the "dynamic initialization in unreachable code" message
-  #pragma diag_suppress initialization_not_reachable
+  #pragma nv_diag_suppress initialization_not_reachable
   // Disable the "invalid error number" message that we get with older versions of nvcc
-  #pragma diag_suppress 1222
+  #pragma nv_diag_suppress 1222
   // Disable the "calling a __host__ function from a __host__ __device__ function is not allowed" messages (yes, there are many of them and they seem to change with every version of the compiler)
-  #pragma diag_suppress 2527
-  #pragma diag_suppress 2529
-  #pragma diag_suppress 2651
-  #pragma diag_suppress 2653
-  #pragma diag_suppress 2668
-  #pragma diag_suppress 2669
-  #pragma diag_suppress 2670
-  #pragma diag_suppress 2671
-  #pragma diag_suppress 2735
-  #pragma diag_suppress 2737
-  #pragma diag_suppress 2739
+  #pragma nv_diag_suppress 2527
+  #pragma nv_diag_suppress 2529
+  #pragma nv_diag_suppress 2651
+  #pragma nv_diag_suppress 2653
+  #pragma nv_diag_suppress 2668
+  #pragma nv_diag_suppress 2669
+  #pragma nv_diag_suppress 2670
+  #pragma nv_diag_suppress 2671
+  #pragma nv_diag_suppress 2735
+  #pragma nv_diag_suppress 2737
+  #pragma nv_diag_suppress 2739
 #endif
 
 #else
Index: openbabel-src/openbabel/src/formats/orcaformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/orcaformat.cpp b/openbabel-src/openbabel/src/formats/orcaformat.cpp
--- a/openbabel-src/openbabel/src/formats/orcaformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/orcaformat.cpp	(date 1693030078873)
@@ -24,11 +24,7 @@
 #include <openbabel/generic.h>
 #include <cstdlib>
 
-#ifdef _MSC_VER
 #include <regex>
-#else
-#include <regex.h>
-#endif
 
 #include <iomanip>
 
@@ -696,38 +692,22 @@
 
 // small function to avoid wrong parsing
 // if there is no whitespace between the numbers in the column structure
-#ifdef _MSC_VER
   string OrcaOutputFormat::checkColumns(string checkBuffer)
   {
     string pattern ("[0-9]-");
-    std::tr1::regex myregex;
-    std::tr1::smatch pm;
+    std::regex myregex;
+    std::smatch pm;
     try {
       myregex.assign(pattern,
-                     std::tr1::regex_constants::extended);
+                     std::regex_constants::extended);
       //iok = true;
-    } catch (std::tr1::regex_error ex) {
+    } catch (std::regex_error ex) {
         return (checkBuffer); // do nothing
       //iok = false;
     }
-    while (std::tr1::regex_search (checkBuffer,pm,myregex)) {
+    while (std::regex_search (checkBuffer,pm,myregex)) {
         checkBuffer.insert(pm.position(0)+1, " ");
     }
     return (checkBuffer);
   }
-#else
-  string OrcaOutputFormat::checkColumns(string checkBuffer)
-  {
-      string pattern ("[0-9]-");
-      regmatch_t pm;
-      regex_t myregex;
-      int pos = regcomp(&myregex, pattern.c_str(), REG_EXTENDED);
-      if (pos !=0) return (checkBuffer); // do nothing
-
-      while (regexec(&myregex, checkBuffer.c_str(), 1, &pm, REG_EXTENDED) == 0) {
-          checkBuffer.insert(pm.rm_eo-1, " ");  // insert whitespace to separate the columns
-      }
-      return (checkBuffer);
-  }
-#endif
 } //namespace OpenBabel
Index: eigen-src/eigen/Eigen/src/Core/util/Macros.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/eigen-src/eigen/Eigen/src/Core/util/Macros.h b/eigen-src/eigen/Eigen/src/Core/util/Macros.h
--- a/eigen-src/eigen/Eigen/src/Core/util/Macros.h	(revision 3147391d946bb4b6c68edd901f2add6ac1f31f8c)
+++ b/eigen-src/eigen/Eigen/src/Core/util/Macros.h	(date 1693030076936)
@@ -59,7 +59,7 @@
 //------------------------------------------------------------------------------------------
 
 /// \internal EIGEN_COMP_GNUC set to 1 for all compilers compatible with GCC
-#ifdef __GNUC__
+#if defined(__GNUC__) && !defined(EMSCRIPTEN)
   #define EIGEN_COMP_GNUC (__GNUC__*10+__GNUC_MINOR__)
 #else
   #define EIGEN_COMP_GNUC 0
Index: rdkit-src/rdkit/Code/GraphMol/SLNParse/lex.yysln.cpp.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/SLNParse/lex.yysln.cpp.cmake b/rdkit-src/rdkit/Code/GraphMol/SLNParse/lex.yysln.cpp.cmake
--- a/rdkit-src/rdkit/Code/GraphMol/SLNParse/lex.yysln.cpp.cmake	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/SLNParse/lex.yysln.cpp.cmake	(date 1693030079674)
@@ -727,8 +727,8 @@
 #endif
 
 #include <cstdio>
-#ifdef WIN32
-#include <io.h> 	 
+#if defined(WIN32) || defined(__MINGW32__)
+#include <io.h>
 #endif
 
 #include <RDGeneral/Exceptions.h>
Index: eigen-src/eigen/Eigen/src/Core/util/ConfigureVectorization.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/eigen-src/eigen/Eigen/src/Core/util/ConfigureVectorization.h b/eigen-src/eigen/Eigen/src/Core/util/ConfigureVectorization.h
--- a/eigen-src/eigen/Eigen/src/Core/util/ConfigureVectorization.h	(revision 3147391d946bb4b6c68edd901f2add6ac1f31f8c)
+++ b/eigen-src/eigen/Eigen/src/Core/util/ConfigureVectorization.h	(date 1693030076936)
@@ -339,7 +339,7 @@
     extern "C" {
       // In theory we should only include immintrin.h and not the other *mmintrin.h header files directly.
       // Doing so triggers some issues with ICC. However old gcc versions seems to not have this file, thus:
-      #if EIGEN_COMP_ICC >= 1110
+      #if EIGEN_COMP_ICC >= 1110 || EIGEN_COMP_EMSCRIPTEN
         #include <immintrin.h>
       #else
         #include <mmintrin.h>
Index: openbabel-src/openbabel/src/formats/xtcformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/xtcformat.cpp b/openbabel-src/openbabel/src/formats/xtcformat.cpp
--- a/openbabel-src/openbabel/src/formats/xtcformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/xtcformat.cpp	(date 1693030078920)
@@ -29,7 +29,7 @@
 #include <vector>
 
 #define MAXID 20
-#define MAXABS INT_MAX-2
+#define MAXABS float(INT_MAX-2)
 
 #ifndef MIN
 #define MIN(x,y) ((x) < (y) ? (x):(y))
Index: openbabel-src/openbabel/src/formats/gamessukformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/gamessukformat.cpp b/openbabel-src/openbabel/src/formats/gamessukformat.cpp
--- a/openbabel-src/openbabel/src/formats/gamessukformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/gamessukformat.cpp	(date 1693030078858)
@@ -23,12 +23,7 @@
 
 #include <algorithm>
 #include <cmath>
-
-#ifdef _MSC_VER
 #include <regex>
-#else
-#include <regex.h>
-#endif
 
 using namespace std;
 
@@ -797,20 +792,15 @@
     //                     ------label--------   -------charge-------- < seems enough for a match
     string pattern(" *\\* *[a-zA-Z]{1,2}[0-9]* *[0-9]{1,3}\\.[0-9]{1}");
     bool iok;
-#ifdef _MSC_VER
-    std::tr1::regex myregex;
+    std::regex myregex;
     try {
       myregex.assign(pattern,
-                     std::tr1::regex_constants::extended |
-                     std::tr1::regex_constants::nosubs);
+                     std::regex_constants::extended |
+                     std::regex_constants::nosubs);
       iok = true;
-    } catch (std::tr1::regex_error ex) {
+    } catch (std::regex_error ex) {
       iok = false;
     }
-#else
-    regex_t *myregex = new regex_t;
-    iok = regcomp(myregex, pattern.c_str(), REG_EXTENDED | REG_NOSUB)==0;
-#endif
     if (!iok) cerr << "Error compiling regex in GUK OUTPUT!\n";
 
     // Read in the coordinates - we process them directly rather
@@ -820,11 +810,7 @@
 
       // End of geometry block
       if (strstr(buffer, "*************************") != nullptr) break;
-#ifdef _MSC_VER
-      if (std::tr1::regex_search(buffer, myregex)) {
-#else
-        if (regexec(myregex, buffer, 0, nullptr, 0) == 0) {
-#endif
+      if (std::regex_search(buffer, myregex)) {
           //cerr << "Got Coord line: " << buffer << endl;
           OBAtom *atom = mol.NewAtom();
           tokenize(tokens,buffer," ");
@@ -841,9 +827,6 @@
         }
       }
       mol.EndModify();
-#ifndef _MSC_VER
-      regfree(myregex);
-#endif
       return true;
     } // End ReadInitalCartesian
 
Index: rdkit-src/rdkit/Contrib/PBF/PBFRDKit.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Contrib/PBF/PBFRDKit.cpp b/rdkit-src/rdkit/Contrib/PBF/PBFRDKit.cpp
--- a/rdkit-src/rdkit/Contrib/PBF/PBFRDKit.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Contrib/PBF/PBFRDKit.cpp	(date 1693030079737)
@@ -114,7 +114,7 @@
   if (eigensolver.info() != Eigen::Success) {
     BOOST_LOG(rdErrorLog) << "eigenvalue calculation did not converge"
                           << std::endl;
-    return 0.0;
+    return false;
   }
   RDGeom::Point3D normal;
   normal.x = eigensolver.eigenvectors()(0, 0);
@@ -125,6 +125,7 @@
   plane[1] = normal.y;
   plane[2] = normal.z;
   plane[3] = -1 * normal.dotProduct(origin);
+  return true;
 }
 
 double PBFRD(ROMol &mol, int confId) {
Index: openbabel-src/openbabel/src/formats/chemkinformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/chemkinformat.cpp b/openbabel-src/openbabel/src/formats/chemkinformat.cpp
--- a/openbabel-src/openbabel/src/formats/chemkinformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/chemkinformat.cpp	(date 1693030078827)
@@ -726,7 +726,7 @@
 
   string missing; // list of molecules which do not have thermodata
   OBConversion StdThermConv;
-  ifstream stdthermo;
+  istringstream stdthermo;
   OpenDatafile(stdthermo, datafilename);
   if(!stdthermo)
   {
Index: rdkit-src/rdkit/Code/GraphMol/FileParsers/PNGParser.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/FileParsers/PNGParser.cpp b/rdkit-src/rdkit/Code/GraphMol/FileParsers/PNGParser.cpp
--- a/rdkit-src/rdkit/Code/GraphMol/FileParsers/PNGParser.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/FileParsers/PNGParser.cpp	(date 1693030079533)
@@ -22,7 +22,6 @@
 
 #include "FileParsers.h"
 #ifdef RDK_USE_BOOST_IOSTREAMS
-#include <zlib.h>
 #include <boost/iostreams/filtering_streambuf.hpp>
 #include <boost/iostreams/copy.hpp>
 #include <boost/iostreams/filter/zlib.hpp>
Index: inchi-src/inchi/INCHI_API/libinchi/src/ichilnct.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/ichilnct.c b/inchi-src/inchi/INCHI_API/libinchi/src/ichilnct.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/ichilnct.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/ichilnct.c	(date 1693030076983)
@@ -42,16 +42,16 @@
 
 /* for use in the InChI library */
 
-#include "../../../INCHI_BASE/src/mode.h"
+#include "mode.h"
 
-#include "../../../INCHI_BASE/src/incomdef.h"
-#include "../../../INCHI_BASE/src/ichidrp.h"
-#include "../../../INCHI_BASE/src/inpdef.h"
-#include "../../../INCHI_BASE/src/util.h"
-#include "../../../INCHI_BASE/src/ichierr.h"
-#include "../../../INCHI_BASE/src/ichicomp.h"
-#include "../../../INCHI_BASE/src/ichi_io.h"
-#include "../../../INCHI_BASE/src/inchi_api.h"
+#include "incomdef.h"
+#include "ichidrp.h"
+#include "inpdef.h"
+#include "util.h"
+#include "ichierr.h"
+#include "ichicomp.h"
+#include "ichi_io.h"
+#include "inchi_api.h"
 
 #include "inchi_dll_b.h"
 
@@ -63,7 +63,7 @@
                        int *err, char *pStrErr );
 
 /* This contains executable code. Included in lReadAux.c, e_ReadINCH.c, ReadINCH.c,  */
-#include "../../../INCHI_BASE/src/readinch.h"
+#include "readinch.h"
 
 
 
Index: zlib-src/zlib/zconf.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/zlib-src/zlib/zconf.h b/zlib-src/zlib/zconf.h
--- a/zlib-src/zlib/zconf.h	(revision 04f42ceca40f73e2978b50e93806c2a18c1281fc)
+++ b/zlib-src/zlib/zconf.h	(date 1693030079966)
@@ -8,6 +8,7 @@
 #ifndef ZCONF_H
 #define ZCONF_H
 
+#include "zlib_export.h"
 /*
  * If you *really* need a unique prefix for all types and library functions,
  * compile with -DZ_PREFIX. The "standard" zlib should be compiled without it.
@@ -330,63 +331,15 @@
 #    endif
 #  endif
 #endif
-
-#if defined(WINDOWS) || defined(WIN32)
-   /* If building or using zlib as a DLL, define ZLIB_DLL.
-    * This is not mandatory, but it offers a little performance increase.
-    */
-#  ifdef ZLIB_DLL
-#    if defined(WIN32) && (!defined(__BORLANDC__) || (__BORLANDC__ >= 0x500))
-#      ifdef ZLIB_INTERNAL
-#        define ZEXTERN extern __declspec(dllexport)
-#      else
-#        define ZEXTERN extern __declspec(dllimport)
-#      endif
-#    endif
-#  endif  /* ZLIB_DLL */
-   /* If building or using zlib with the WINAPI/WINAPIV calling convention,
-    * define ZLIB_WINAPI.
-    * Caution: the standard ZLIB1.DLL is NOT compiled using ZLIB_WINAPI.
-    */
-#  ifdef ZLIB_WINAPI
-#    ifdef FAR
-#      undef FAR
-#    endif
-#    ifndef WIN32_LEAN_AND_MEAN
-#      define WIN32_LEAN_AND_MEAN
-#    endif
-#    include <windows.h>
-     /* No need for _export, use ZLIB.DEF instead. */
-     /* For complete Windows compatibility, use WINAPI, not __stdcall. */
-#    define ZEXPORT WINAPI
-#    ifdef WIN32
-#      define ZEXPORTVA WINAPIV
-#    else
-#      define ZEXPORTVA FAR CDECL
-#    endif
-#  endif
-#endif
-
-#if defined (__BEOS__)
-#  ifdef ZLIB_DLL
-#    ifdef ZLIB_INTERNAL
-#      define ZEXPORT   __declspec(dllexport)
-#      define ZEXPORTVA __declspec(dllexport)
-#    else
-#      define ZEXPORT   __declspec(dllimport)
-#      define ZEXPORTVA __declspec(dllimport)
-#    endif
-#  endif
-#endif
 
 #ifndef ZEXTERN
-#  define ZEXTERN extern
+#define ZEXTERN extern ZLIB_EXPORT
 #endif
 #ifndef ZEXPORT
-#  define ZEXPORT
+#define ZEXPORT
 #endif
 #ifndef ZEXPORTVA
-#  define ZEXPORTVA
+#define ZEXPORTVA
 #endif
 
 #ifndef FAR
Index: inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_main.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_main.c b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_main.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_main.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_main.c	(date 1693030076999)
@@ -34,7 +34,7 @@
 
 /* inchi_dll_main.c : Defines the entry point for the DLL application. */
 
-#include "../../../INCHI_BASE/src/mode.h"
+#include "mode.h"
 
 #if defined(_WIN32) && defined(_USRDLL) && defined(_DEBUG) && !(defined(__STDC__) && __STDC__ == 1)
 #include "inchi_dll_main.h"
Index: rdkit-src/rdkit/Code/GraphMol/FileParsers/MolSGroupParsing.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/FileParsers/MolSGroupParsing.h b/rdkit-src/rdkit/Code/GraphMol/FileParsers/MolSGroupParsing.h
--- a/rdkit-src/rdkit/Code/GraphMol/FileParsers/MolSGroupParsing.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/FileParsers/MolSGroupParsing.h	(date 1693030079533)
@@ -131,7 +131,7 @@
 template <class T>
 RDKIT_FILEPARSERS_EXPORT std::vector<T> ParseV3000Array(
     std::stringstream &stream, int maxV = -1, bool strictParsing = false);
-#if defined(_MSC_VER) && defined(RDKIT_DYN_LINK)
+#if defined(_MSC_VER)
 template RDKIT_FILEPARSERS_EXPORT std::vector<int> ParseV3000Array(
     std::stringstream &, int, bool);
 template RDKIT_FILEPARSERS_EXPORT std::vector<unsigned int> ParseV3000Array(
Index: inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a.c b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a.c	(date 1693030076983)
@@ -46,26 +46,26 @@
 #include <limits.h>
 #include <float.h>
 #include <math.h>
-#include "../../../INCHI_BASE/src/incomdef.h"
-#include "../../../INCHI_BASE/src/ichidrp.h"
-#include "../../../INCHI_BASE/src/inpdef.h"
-#include "../../../INCHI_BASE/src/ichi.h"
-#include "../../../INCHI_BASE/src/strutil.h"
-#include "../../../INCHI_BASE/src/util.h"
-#include "../../../INCHI_BASE/src/ichierr.h"
-#include "../../../INCHI_BASE/src/ichimain.h"
-#include "../../../INCHI_BASE/src/extr_ct.h"
-#include "../../../INCHI_BASE/src/ichi_io.h"
-#include "../../../INCHI_BASE/src/mol_fmt.h"
-#include "../../../INCHI_BASE/src/ichicomp.h"
-#include "../../../INCHI_BASE/src/ichitaut.h"
-#include "../../../INCHI_BASE/src/ichinorm.h"
+#include "incomdef.h"
+#include "ichidrp.h"
+#include "inpdef.h"
+#include "ichi.h"
+#include "strutil.h"
+#include "util.h"
+#include "ichierr.h"
+#include "ichimain.h"
+#include "extr_ct.h"
+#include "ichi_io.h"
+#include "mol_fmt.h"
+#include "ichicomp.h"
+#include "ichitaut.h"
+#include "ichinorm.h"
 
 
-#include "../../../INCHI_BASE/src/ichisize.h"
-#include "../../../INCHI_BASE/src/ichitime.h"
-#include "../../../INCHI_BASE/src/mode.h"
-#include "../../../INCHI_BASE/src/inchi_api.h"
+#include "ichisize.h"
+#include "ichitime.h"
+#include "mode.h"
+#include "inchi_api.h"
 
 #include "inchi_dll_a.h" /* not inchi_api.h as it hides internal data types */
 #include "inchi_dll.h"
Index: openbabel-src/openbabel/src/formats/svgformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/svgformat.cpp b/openbabel-src/openbabel/src/formats/svgformat.cpp
--- a/openbabel-src/openbabel/src/formats/svgformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/svgformat.cpp	(date 1693030078889)
@@ -513,7 +513,7 @@
 //returns true if the file "svgformat.script" was inserted into the output
 bool SVGFormat::EmbedScript(ostream& ofs)
 {
-  ifstream ifs;
+  istringstream ifs;
   if(!ifs || OpenDatafile(ifs, "svgformat.script").empty())
     return false;
   ofs << ifs.rdbuf(); //copy whole file
Index: inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_b.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_b.c b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_b.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_b.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_b.c	(date 1693030076999)
@@ -42,22 +42,22 @@
 #include <float.h>
 #include <math.h>
 
-#include "../../../INCHI_BASE/src/mode.h"
-#include "../../../INCHI_BASE/src/inchi_api.h"
-#include "../../../INCHI_BASE/src/incomdef.h"
-#include "../../../INCHI_BASE/src/ichidrp.h"
-#include "../../../INCHI_BASE/src/inpdef.h"
-#include "../../../INCHI_BASE/src/ichi.h"
-#include "../../../INCHI_BASE/src/strutil.h"
-#include "../../../INCHI_BASE/src/util.h"
-#include "../../../INCHI_BASE/src/ichierr.h"
-#include "../../../INCHI_BASE/src/ichimain.h"
-#include "../../../INCHI_BASE/src/extr_ct.h"
-#include "../../../INCHI_BASE/src/ichi_io.h"
-#include "../../../INCHI_BASE/src/ichicomp.h"
-#include "../../../INCHI_BASE/src/ichitime.h"
-#include "../../../INCHI_BASE/src/ichicant.h"
-#include "../../../INCHI_BASE/src/readinch.h"
+#include "mode.h"
+#include "inchi_api.h"
+#include "incomdef.h"
+#include "ichidrp.h"
+#include "inpdef.h"
+#include "ichi.h"
+#include "strutil.h"
+#include "util.h"
+#include "ichierr.h"
+#include "ichimain.h"
+#include "extr_ct.h"
+#include "ichi_io.h"
+#include "ichicomp.h"
+#include "ichitime.h"
+#include "ichicant.h"
+#include "readinch.h"
 
 #include "inchi_dll.h"
 #include "inchi_dll_b.h"
Index: openbabel-src/openbabel/src/formats/pdbqtformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/pdbqtformat.cpp b/openbabel-src/openbabel/src/formats/pdbqtformat.cpp
--- a/openbabel-src/openbabel/src/formats/pdbqtformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/pdbqtformat.cpp	(date 1693030078889)
@@ -483,7 +483,7 @@
     return mol.DeleteNonPolarHydrogens();
   }
 
-  bool OutputTree(OBConversion* pConv, OBMol& mol, ostream& ofs, map <unsigned int, branch> & tree, unsigned int depth, bool moves_many, bool preserve_original_index)
+  bool OutputTree(OBConversion* pConv, OBMol& mol, ostream& ofs, map <size_t, branch> & tree, unsigned int depth, bool moves_many, bool preserve_original_index)
   {
     if (tree.empty()) {return false;}
     if (depth>= tree.size()-1) {depth=tree.size()-1;}
@@ -607,7 +607,7 @@
     return true;
   }
 
-  void ConstructTree (map <unsigned int, branch>& tree, vector <vector <int> > rigid_fragments, unsigned int root_piece, const OBMol& mol, bool flexible)
+  void ConstructTree (map <size_t, branch>& tree, vector <vector <int> > rigid_fragments, unsigned int root_piece, const OBMol& mol, bool flexible)
   {
     unsigned int first_atom = 0;
     unsigned int second_atom = 0;
@@ -651,7 +651,7 @@
             sprog.rigid_with.insert(sprog.index);
 
             (*tree.find(position)).second.children.insert(tree.size()); //tells the current parent it has an extra child
-                        tree.insert(pair<unsigned int, branch> (tree.size(), sprog)); //adds the current branch to the tree
+                        tree.insert(std::make_pair(tree.size(), sprog)); //adds the current branch to the tree
 
             rigid_fragments.erase(rigid_fragments.begin() + i);
             sterile=false;
@@ -747,7 +747,7 @@
     return false;
   }
 
-  unsigned int AtomsSoFar(const map <unsigned int, branch> & tree, unsigned int depth)
+  unsigned int AtomsSoFar(const map <size_t, branch> & tree, unsigned int depth)
   {
     if (depth > tree.size()) {return 0;}
     unsigned int numberAtoms=0;
@@ -985,7 +985,7 @@
 
       vector <vector <int> > rigid_fragments; //the vector of all the rigid molecule fragments, using atom indexes
       unsigned int best_root_atom=1;
-      map <unsigned int, branch> tree;
+      map <size_t, branch> tree;
       unsigned int torsdof=0;
       unsigned int root_piece=0;
       unsigned int rotatable_bonds=0;
Index: inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll.c b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll.c	(date 1693030076983)
@@ -42,25 +42,25 @@
 #include <float.h>
 #include <math.h>
 
-#include "../../../INCHI_BASE/src/mode.h"
+#include "mode.h"
 
-#include "../../../INCHI_BASE/src/incomdef.h"
-#include "../../../INCHI_BASE/src/ichidrp.h"
-#include "../../../INCHI_BASE/src/inpdef.h"
-#include "../../../INCHI_BASE/src/ichi.h"
-#include "../../../INCHI_BASE/src/strutil.h"
-#include "../../../INCHI_BASE/src/util.h"
-#include "../../../INCHI_BASE/src/ichierr.h"
-#include "../../../INCHI_BASE/src/ichimain.h"
-#include "../../../INCHI_BASE/src/extr_ct.h"
-#include "../../../INCHI_BASE/src/ichi_io.h"
-#include "../../../INCHI_BASE/src/ichicomp.h"
-#include "../../../INCHI_BASE/src/inchi_api.h"
-#include "../../../INCHI_BASE/src/readinch.h"
+#include "incomdef.h"
+#include "ichidrp.h"
+#include "inpdef.h"
+#include "ichi.h"
+#include "strutil.h"
+#include "util.h"
+#include "ichierr.h"
+#include "ichimain.h"
+#include "extr_ct.h"
+#include "ichi_io.h"
+#include "ichicomp.h"
+#include "inchi_api.h"
+#include "readinch.h"
 
-#include "../../../INCHI_BASE/src/ichitaut.h"
-#include "../../../INCHI_BASE/src/ichicant.h"
-#include "../../../INCHI_BASE/src/ichitime.h"
+#include "ichitaut.h"
+#include "ichicant.h"
+#include "ichitime.h"
 
 #include "inchi_dll.h"
 
Index: inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a.h b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a.h
--- a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a.h	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a.h	(date 1693030076983)
@@ -35,7 +35,7 @@
 #ifndef __INCHI_DLL_A_H__
 #define __INCHI_DLL_A_H__
 
-#include "../../../INCHI_BASE/src/ichicant.h"
+#include "ichicant.h"
 
 typedef struct tagCOMPONENT_TREAT_INFO
 {
@@ -128,25 +128,6 @@
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
 
 
-#if (defined( _WIN32 ) && defined( _MSC_VER ) && defined(BUILD_LINK_AS_DLL) )
-    /* Win32 & MS VC ++, compile and link as a DLL */
-#ifdef _USRDLL
-    /* InChI library dll */
-#define INCHI_API __declspec(dllexport)
-#define EXPIMP_TEMPLATE
-#define INCHI_DECL
-#else
-   /* calling the InChI dll program */
-#define INCHI_API __declspec(dllimport)
-#define EXPIMP_TEMPLATE extern
-#define INCHI_DECL
-#endif
-#else
-    /* create a statically linked InChI library or link to an executable */
-#define INCHI_API
-#define EXPIMP_TEMPLATE
-#define INCHI_DECL
-#endif
 
 
 
Index: inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_read_inchi.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_read_inchi.c b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_read_inchi.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_read_inchi.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_read_inchi.c	(date 1693030076968)
@@ -34,9 +34,9 @@
 
 #include "string.h"
 
-#include "../../../../INCHI_BASE/src/mode.h"
-#include "../../../../INCHI_BASE/src/inchi_api.h"
-#include "../../../../INCHI_BASE/src/util.h"
+#include "mode.h"
+#include "inchi_api.h"
+#include "util.h"
 #include "ixa_mol.h"
 #include "ixa_status.h"
 
Index: inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_mol.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_mol.h b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_mol.h
--- a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_mol.h	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_mol.h	(date 1693030076968)
@@ -35,7 +35,7 @@
 #ifndef __IXA_MOL_H__
 #define __IXA_MOL_H__
 
-#include "../../../../INCHI_BASE/src/ixa.h"
+#include "ixa.h"
 
 typedef struct
 {
Index: indigo-src/indigo/core/indigo-core/common/base_cpp/scanner.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/core/indigo-core/common/base_cpp/scanner.cpp b/indigo-src/indigo/core/indigo-core/common/base_cpp/scanner.cpp
--- a/indigo-src/indigo/core/indigo-core/common/base_cpp/scanner.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/core/indigo-core/common/base_cpp/scanner.cpp	(date 1693030077155)
@@ -28,7 +28,7 @@
 #include "base_cpp/tlscont.h"
 #include "reusable_obj_array.h"
 
-#include <../cppcodec/cppcodec/base64_default_rfc4648.hpp>
+#include <cppcodec/base64_default_rfc4648.hpp>
 #include <limits>
 
 using namespace indigo;
Index: inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_builder.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_builder.c b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_builder.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_builder.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_builder.c	(date 1693030076952)
@@ -32,9 +32,9 @@
  */
 
 
-#include "../../../../INCHI_BASE/src/mode.h"
-#include "../../../../INCHI_BASE/src/inchi_api.h"
-#include "../../../../INCHI_BASE/src/inpdef.h"
+#include "mode.h"
+#include "inchi_api.h"
+#include "inpdef.h"
 #include "ixa_status.h"
 #include "ixa_mol.h"
 #include <ctype.h>
Index: inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_status.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_status.c b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_status.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_status.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_status.c	(date 1693030076968)
@@ -32,8 +32,8 @@
  */
 
 
-#include "../../../../INCHI_BASE/src/mode.h"
-#include "../../../../INCHI_BASE/src/inchi_api.h"
+#include "mode.h"
+#include "inchi_api.h"
 #include "ixa_status.h"
 #include <string.h>
 #include <stdarg.h>
Index: inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a2.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a2.c b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a2.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a2.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/inchi_dll_a2.c	(date 1693030076999)
@@ -43,31 +43,31 @@
 
 /*  */
 
-#include "../../../INCHI_BASE/src/mode.h"
-#include "../../../INCHI_BASE/src/ichitime.h"
-#include "../../../INCHI_BASE/src/incomdef.h"
-#include "../../../INCHI_BASE/src/ichidrp.h"
-#include "../../../INCHI_BASE/src/inpdef.h"
-#include "../../../INCHI_BASE/src/ichi.h"
-#include "../../../INCHI_BASE/src/strutil.h"
-#include "../../../INCHI_BASE/src/util.h"
-#include "../../../INCHI_BASE/src/ichidrp.h"
-#include "../../../INCHI_BASE/src/ichierr.h"
-#include "../../../INCHI_BASE/src/ichimain.h"
-#include "../../../INCHI_BASE/src/extr_ct.h"
-#include "../../../INCHI_BASE/src/ichitaut.h"
-#include "../../../INCHI_BASE/src/ichi_io.h"
-#include "../../../INCHI_BASE/src/ichinorm.h"
-#include "../../../INCHI_BASE/src/ichicant.h"
-#include "../../../INCHI_BASE/src/ichicano.h"
-#include "../../../INCHI_BASE/src/ichicomn.h"
-#include "../../../INCHI_BASE/src/ichimake.h"
-#include "../../../INCHI_BASE/src/ichister.h"
+#include "mode.h"
+#include "ichitime.h"
+#include "incomdef.h"
+#include "ichidrp.h"
+#include "inpdef.h"
+#include "ichi.h"
+#include "strutil.h"
+#include "util.h"
+#include "ichidrp.h"
+#include "ichierr.h"
+#include "ichimain.h"
+#include "extr_ct.h"
+#include "ichitaut.h"
+#include "ichi_io.h"
+#include "ichinorm.h"
+#include "ichicant.h"
+#include "ichicano.h"
+#include "ichicomn.h"
+#include "ichimake.h"
+#include "ichister.h"
 /* */
 #ifdef INCHI_LIB
 #include "ichi_lib.h"
 #endif
-#include "../../../INCHI_BASE/src/ichicomp.h"
+#include "ichicomp.h"
 
 /* for DisplayTheWholeStructure() */
 #define COMP_ORIG_0_MAIN  0x0001
@@ -77,9 +77,9 @@
 #define COMP_ORIG_1_MAIN  0x0010
 #define COMP_ORIG_1_RECN  0x0020
 
-#include "../../../INCHI_BASE/src/ichisize.h"
-#include "../../../INCHI_BASE/src/mode.h"
-#include "../../../INCHI_BASE/src/inchi_api.h"
+#include "ichisize.h"
+#include "mode.h"
+#include "inchi_api.h"
 #include "inchi_dll_a.h" /* not inchi_api.h as it hides internal data types */
 
 
Index: inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_inchikey_builder.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_inchikey_builder.c b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_inchikey_builder.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_inchikey_builder.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_inchikey_builder.c	(date 1693030076952)
@@ -32,8 +32,8 @@
  */
 
 
-#include "../../../../INCHI_BASE/src/mode.h"
-#include "../../../../INCHI_BASE/src/inchi_api.h"
+#include "mode.h"
+#include "inchi_api.h"
 #include "ixa_status.h"
 #include <stdlib.h>
 #include <string.h>
Index: inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_status.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_status.h b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_status.h
--- a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_status.h	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_status.h	(date 1693030076968)
@@ -35,7 +35,7 @@
 #ifndef __IXA_STATUS_H__
 #define __IXA_STATUS_H__
 
-#include "../../../../INCHI_BASE/src/ixa.h"
+#include "ixa.h"
 
 void STATUS_PushMessage( IXA_STATUS_HANDLE hStatus,
                         IXA_STATUS        vSeverity,
Index: inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_read_mol.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_read_mol.c b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_read_mol.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_read_mol.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_read_mol.c	(date 1693030076968)
@@ -38,12 +38,12 @@
 #include <stdlib.h>
 #include <string.h>
 
-#include "../../../../INCHI_BASE/src/mode.h"
-#include "../../../../INCHI_BASE/src/inchi_api.h"
-#include "../../../../INCHI_BASE/src/ichicomp.h"
-#include "../../../../INCHI_BASE/src/util.h"
-#include "../../../../INCHI_BASE/src/mol_fmt.h"
-#include "../../../../INCHI_BASE/src/ichi_io.h"
+#include "mode.h"
+#include "inchi_api.h"
+#include "ichicomp.h"
+#include "util.h"
+#include "mol_fmt.h"
+#include "ichi_io.h"
 
 #include "ixa_status.h"
 #include "ixa_mol.h"
Index: inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_mol.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_mol.c b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_mol.c
--- a/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_mol.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_API/libinchi/src/ixa/ixa_mol.c	(date 1693030076968)
@@ -36,12 +36,12 @@
 #include <string.h>
 #include <limits.h>
 
-#include "../../../../INCHI_BASE/src/mode.h"
-#include "../../../../INCHI_BASE/src/ichierr.h"
-#include "../../../../INCHI_BASE/src/mol_fmt.h"
-#include "../../../../INCHI_BASE/src/inchi_api.h"
+#include "mode.h"
+#include "ichierr.h"
+#include "mol_fmt.h"
+#include "inchi_api.h"
 
-#include "../../../../INCHI_BASE/src/ichi_io.h"
+#include "ichi_io.h"
 
 #include "ixa_mol.h"
 #include "ixa_status.h"
Index: openbabel-src/openbabel/src/formats/json/pubchemjsonformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/formats/json/pubchemjsonformat.cpp b/openbabel-src/openbabel/src/formats/json/pubchemjsonformat.cpp
--- a/openbabel-src/openbabel/src/formats/json/pubchemjsonformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/formats/json/pubchemjsonformat.cpp	(date 1693030078795)
@@ -760,7 +760,7 @@
       // Coordinates
       // TODO: An option to round coordinates to n decimal places?
       xcoords.PushBack(rapidjson::Value(patom->GetX()).Move(), al);
-      ycoords.PushBack(rapidjson::Value(patom->GetX()).Move(), al);
+      ycoords.PushBack(rapidjson::Value(patom->GetY()).Move(), al);
       if (pmol->GetDimension() == 3) {
         zcoords.PushBack(rapidjson::Value(patom->GetZ()).Move(), al);
       }
Index: zlib-src/zlib/gzguts.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/zlib-src/zlib/gzguts.h b/zlib-src/zlib/gzguts.h
--- a/zlib-src/zlib/gzguts.h	(revision 04f42ceca40f73e2978b50e93806c2a18c1281fc)
+++ b/zlib-src/zlib/gzguts.h	(date 1693030079950)
@@ -37,6 +37,8 @@
 
 #if defined(__TURBOC__) || defined(_MSC_VER) || defined(_WIN32)
 #  include <io.h>
+#else
+#  include <unistd.h>
 #endif
 
 #if defined(_WIN32)
Index: indigo-src/indigo/core/indigo-core/layout/molecule_layout_macrocycles.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/core/indigo-core/layout/molecule_layout_macrocycles.h b/indigo-src/indigo/core/indigo-core/layout/molecule_layout_macrocycles.h
--- a/indigo-src/indigo/core/indigo-core/layout/molecule_layout_macrocycles.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/core/indigo-core/layout/molecule_layout_macrocycles.h	(date 1693030077171)
@@ -283,9 +283,9 @@
     public:
         TriangleLattice();
 
-        TriangleLattice(rectangle rec, int rem, byte* data_link);
+        TriangleLattice(rectangle rec, int rem, ::byte* data_link);
 
-        void init(rectangle rec, int rem, byte* data_link);
+        void init(rectangle rec, int rem, ::byte* data_link);
         void init_void();
 
         unsigned short& getCell(int x, int y);
@@ -337,7 +337,7 @@
 
         int length;
 
-        byte* _hidden_data_field;
+        ::byte* _hidden_data_field;
         ObjArray<Array<rectangle>> border_array;
         Array<rectangle*> border;
 
@@ -347,7 +347,7 @@
         TL_CP_DECL(Array<int>, _rotation_parity);
         TL_CP_DECL(Array<int>, _coord_diff_reminder); // (x - y) % 3
         TL_CP_DECL(ObjArray<ObjArray<ObjArray<TriangleLattice>>>, _lattices);
-        TL_CP_DECL(Array<byte>, _hidden_data_field_array);
+        TL_CP_DECL(Array<::byte>, _hidden_data_field_array);
 
         TriangleLattice _sink_lattice;
     };
@@ -389,4 +389,4 @@
 #pragma warning(pop)
 #endif
 
-#endif
\ No newline at end of file
+#endif
Index: rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupFingerprintScore.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupFingerprintScore.cpp b/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupFingerprintScore.cpp
--- a/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupFingerprintScore.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupFingerprintScore.cpp	(date 1693030079643)
@@ -12,7 +12,7 @@
 #include "GraphMol/Fingerprints/Fingerprints.h"
 #include "GraphMol//Fingerprints/MorganFingerprints.h"
 #include <GraphMol/SmilesParse/SmilesParse.h>
-#include "../../../External/GA/util/Util.h"
+#include "GA/util/Util.h"
 #include <memory>
 #include <utility>
 #include <vector>
Index: rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupGa.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupGa.cpp b/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupGa.cpp
--- a/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupGa.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupGa.cpp	(date 1693030079658)
@@ -7,7 +7,7 @@
 //  which is included in the file license.txt, found at the root
 //  of the RDKit source tree.
 //
-
+#include <RDGeneral/export.h>
 #include <ctime>
 #include <limits>
 #ifdef RDK_BUILD_THREADSAFE_SSS
@@ -18,7 +18,7 @@
 #include "RGroupDecompData.h"
 #include "RGroupDecomp.h"
 #include "RGroupFingerprintScore.h"
-#include "../../../External/GA/util/Util.h"
+#include "GA/util/Util.h"
 
 // #define DEBUG
 
@@ -327,7 +327,7 @@
     tasks.reserve(numberRuns);
     for (int n = 0; n < numberRuns; n++) {
       auto future = async(launch::async, &RDKit::RGroupGa::run, this, n + 1);
-      tasks.push_back(move(future));
+      tasks.push_back(std::move(future));
     }
 
     std::transform(tasks.begin(), tasks.end(), back_inserter(results),
Index: indigo-src/indigo/core/indigo-core/layout/src/molecule_layout_macrocycle_lattice.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/core/indigo-core/layout/src/molecule_layout_macrocycle_lattice.cpp b/indigo-src/indigo/core/indigo-core/layout/src/molecule_layout_macrocycle_lattice.cpp
--- a/indigo-src/indigo/core/indigo-core/layout/src/molecule_layout_macrocycle_lattice.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/core/indigo-core/layout/src/molecule_layout_macrocycle_lattice.cpp	(date 1693030077171)
@@ -395,12 +395,12 @@
     _BORDER.set_empty();
 }
 
-TriangleLattice::TriangleLattice(rectangle rec, int rem, byte* data_link)
+TriangleLattice::TriangleLattice(rectangle rec, int rem, ::byte* data_link)
 {
     init(rec, rem, data_link);
 }
 
-void TriangleLattice::init(rectangle rec, int rem, byte* data_link)
+void TriangleLattice::init(rectangle rec, int rem, ::byte* data_link)
 {
     _BORDER = rec;
 
@@ -617,7 +617,7 @@
 
     _hidden_data_field_array.clear_resize(global_size);
 
-    byte* free_area = _hidden_data_field_array.ptr();
+    ::byte* free_area = _hidden_data_field_array.ptr();
 
     _lattices.clear();
 
@@ -1499,4 +1499,4 @@
     newPoint += (point[vertex_number] - p3) * coef3;
 
     return newPoint * SMOOTHING_MULTIPLIER;
-}
\ No newline at end of file
+}
Index: eigen-src/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceThreadPool.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/eigen-src/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceThreadPool.h b/eigen-src/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceThreadPool.h
--- a/eigen-src/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceThreadPool.h	(revision 3147391d946bb4b6c68edd901f2add6ac1f31f8c)
+++ b/eigen-src/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceThreadPool.h	(date 1693030076952)
@@ -207,7 +207,11 @@
     // block_count leaves that do actual computations.
     Barrier barrier(static_cast<unsigned int>(block.count));
     std::function<void(Index, Index)> handleRange;
+#if __cplusplus >= 202002L
+    handleRange = [=, &handleRange, &barrier, &f, this](Index firstIdx,
+#else
     handleRange = [=, &handleRange, &barrier, &f](Index firstIdx,
+#endif
                                                   Index lastIdx) {
       while (lastIdx - firstIdx > block.size) {
         // Split into halves and schedule the second half on a different thread.
Index: rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupGa.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupGa.h b/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupGa.h
--- a/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupGa.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/RGroupDecomposition/RGroupGa.h	(date 1693030079658)
@@ -16,11 +16,11 @@
 #include <map>
 #include <chrono>
 
-#include "../../../External/GA/ga/StringChromosome.h"
-#include "../../../External/GA/ga/GaBase.h"
-#include "../../../External/GA/ga/GaOperation.h"
-#include "../../../External/GA/ga/LinkedPopLinearSel.h"
-#include "../../../External/GA/ga/IntegerStringChromosomePolicy.h"
+#include "GA/ga/StringChromosome.h"
+#include "GA/ga/GaBase.h"
+#include "GA/ga/GaOperation.h"
+#include "GA/ga/LinkedPopLinearSel.h"
+#include "GA/ga/IntegerStringChromosomePolicy.h"
 #include "RGroupFingerprintScore.h"
 #include "RGroupScore.h"
 
Index: rdkit-src/rdkit/Code/GraphMol/MolDraw2D/Qt/MolDraw2DQt.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/MolDraw2D/Qt/MolDraw2DQt.h b/rdkit-src/rdkit/Code/GraphMol/MolDraw2D/Qt/MolDraw2DQt.h
--- a/rdkit-src/rdkit/Code/GraphMol/MolDraw2D/Qt/MolDraw2DQt.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/MolDraw2D/Qt/MolDraw2DQt.h	(date 1693030079565)
@@ -10,10 +10,10 @@
 // This is a concrete class derived from MolDraw2D that uses RDKit to draw a
 // molecule into a QPainter.
 
-#include <RDGeneral/export.h>
 #ifndef MOLDRAW2DQT_H
 #define MOLDRAW2DQT_H
-
+#include <RDGeneral/export.h>
+#include <MolDraw2DQt/rdkit_export.hpp>
 #include <GraphMol/MolDraw2D/MolDraw2D.h>
 
 class QPainter;
Index: rdkit-src/rdkit/Code/GraphMol/MolDraw2D/Qt/DrawTextQt.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/MolDraw2D/Qt/DrawTextQt.h b/rdkit-src/rdkit/Code/GraphMol/MolDraw2D/Qt/DrawTextQt.h
--- a/rdkit-src/rdkit/Code/GraphMol/MolDraw2D/Qt/DrawTextQt.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/MolDraw2D/Qt/DrawTextQt.h	(date 1693030079565)
@@ -11,6 +11,7 @@
 #define RDKIT_DRAWTEXTQT_H
 
 #include <RDGeneral/export.h>
+#include <MolDraw2DQt/rdkit_export.hpp>
 #include <GraphMol/MolDraw2D/DrawTextNotFT.h>
 
 class QPainter;
Index: openbabel-src/openbabel/include/RDKitConv.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/include/RDKitConv.h b/openbabel-src/openbabel/include/RDKitConv.h
--- a/openbabel-src/openbabel/include/RDKitConv.h	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/include/RDKitConv.h	(date 1693030078686)
@@ -1,10 +1,10 @@
 #include <openbabel/mol.h>
 #include <openbabel/obiter.h>
-#include <graphmol/RWMol.h>
-#include <graphmol/Atom.h>
+#include <GraphMol/RWMol.h>
+#include <GraphMol/Atom.h>
 
 ///Convert OpenBabel OBMol to and from RGKit molecules
 RDKit::RWMol OBMolToRWMol(OpenBabel::OBMol* pOBMol);
 
 //! \file RDKitConv.h
-//! \brief Allow conversion from OBMol to RDKit RWMol
\ No newline at end of file
+//! \brief Allow conversion from OBMol to RDKit RWMol
Index: openbabel-src/openbabel/src/descriptors/groupcontrib.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/descriptors/groupcontrib.cpp b/openbabel-src/openbabel/src/descriptors/groupcontrib.cpp
--- a/openbabel-src/openbabel/src/descriptors/groupcontrib.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/descriptors/groupcontrib.cpp	(date 1693030078733)
@@ -55,7 +55,7 @@
     OBSmartsPattern *sp;
 
     // open data file
-    ifstream ifs;
+    istringstream ifs;
 
     if (OpenDatafile(ifs, _filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, " Could not find contribution data file.", obError);
Index: ringdecomposerlib-src/ringdecomposerlib/src/RingDecomposerLib/RingDecomposerLib.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ringdecomposerlib-src/ringdecomposerlib/src/RingDecomposerLib/RingDecomposerLib.h b/ringdecomposerlib-src/ringdecomposerlib/src/RingDecomposerLib/RingDecomposerLib.h
--- a/ringdecomposerlib-src/ringdecomposerlib/src/RingDecomposerLib/RingDecomposerLib.h	(revision 7b1629781cfb7fda29716d1af14a6110bb553892)
+++ b/ringdecomposerlib-src/ringdecomposerlib/src/RingDecomposerLib/RingDecomposerLib.h	(date 1693030079768)
@@ -27,13 +27,10 @@
 #ifndef RING_DECOMPOSER_LIB_H
 #define RING_DECOMPOSER_LIB_H
 
-#if (defined( _WIN32 ) && defined( _MSC_VER ) )
-    /* Win32 & MS VC ++ */
-    #define RDL_API __declspec(dllexport)
-#elif __GNUC__ >= 4 || defined(__clang__)
-    #define RDL_API __attribute__((visibility("default")))
-#else
-    #define RDL_API
+#include "ringdecomposerlib_export.h"
+
+#ifndef RDL_API
+#define RDL_API RINGDECOMPOSERLIB_EXPORT
 #endif
 
 #ifdef __cplusplus
Index: openbabel-src/openbabel/src/forcefields/forcefieldghemical.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/forcefields/forcefieldghemical.cpp b/openbabel-src/openbabel/src/forcefields/forcefieldghemical.cpp
--- a/openbabel-src/openbabel/src/forcefields/forcefieldghemical.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/forcefields/forcefieldghemical.cpp	(date 1693030078764)
@@ -858,7 +858,7 @@
     OBFFParameter parameter;
 
     // open data/ghemical.prm
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "ghemical.prm").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open ghemical.prm", obError);
       return false;
@@ -942,8 +942,6 @@
       }
     }
 
-    if (ifs)
-      ifs.close();
 
     // return the locale to the original one
     obLocale.RestoreLocale();
@@ -964,7 +962,7 @@
     _mol.SetAtomTypesPerceived();
 
     // open data/ghemical.prm
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "ghemical.prm").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open ghemical.prm", obError);
       return false;
@@ -1026,8 +1024,6 @@
     //  else
     //    cout << "ATOMTYPE " << a->GetType() << endl;
 
-    if (ifs)
-      ifs.close();
 
     // return the locale to the original one
     obLocale.RestoreLocale();
Index: openbabel-src/openbabel/src/forcefields/forcefieldmm2.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/forcefields/forcefieldmm2.cpp b/openbabel-src/openbabel/src/forcefields/forcefieldmm2.cpp
--- a/openbabel-src/openbabel/src/forcefields/forcefieldmm2.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/forcefields/forcefieldmm2.cpp	(date 1693030078764)
@@ -18,6 +18,10 @@
 #include <openbabel/babelconfig.h>
 #include <openbabel/mol.h>
 #include <openbabel/locale.h>
+#include <openbabel/obiter.h>
+#include <openbabel/bond.h>
+#include <openbabel/oberror.h>
+#include <openbabel/data.h>
 #include "forcefieldmm2.h"
 
 using namespace std;
@@ -498,8 +502,8 @@
     {
       _mol = src._mol;
       _init = src._init;
-      return *this;
-    }
+    }
+    return *this;
   }
 
   bool OBForceFieldMM2::Setup(OBMol &mol)
@@ -522,7 +526,7 @@
     OBFFParameter parameter;
 
     // open data/mm2.prm
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "mm2.prm").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mm2.prm", obError);
       return false;
@@ -667,8 +671,6 @@
       }
     }
 
-    if (ifs)
-      ifs.close();
 
     // return the locale to the original one
     obLocale.RestoreLocale();
Index: openbabel-src/openbabel/src/forcefields/forcefielduff.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/forcefields/forcefielduff.cpp b/openbabel-src/openbabel/src/forcefields/forcefielduff.cpp
--- a/openbabel-src/openbabel/src/forcefields/forcefielduff.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/forcefields/forcefielduff.cpp	(date 1693030078795)
@@ -1614,7 +1614,7 @@
     OBFFParameter parameter;
 
     // open data/UFF.prm
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "UFF.prm").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open UFF.prm", obError);
       return false;
@@ -1647,7 +1647,10 @@
         parameter.b = 0; // used for tracking number of angles in 5-coordinate
         parameter.c = 0;
 
-        char coord = vs[1][2]; // 3rd character of atom type
+        char coord = '\0';
+        if (vs[1].size() > 2) {
+          coord = vs[1][2]; // 3rd character of atom type
+        }
         switch (coord) {
         case '1': // linear
           parameter._ipar.push_back(1);
@@ -1680,8 +1683,6 @@
       }
     }
 
-    if (ifs)
-      ifs.close();
 
     // return the locale to the original one
     obLocale.RestoreLocale();
@@ -1702,7 +1703,7 @@
     _mol.SetAtomTypesPerceived();
 
     // open data/UFF.prm
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "UFF.prm").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open UFF.prm", obError);
       return false;
@@ -1771,8 +1772,6 @@
 
     }
 
-    if (ifs)
-      ifs.close();
 
     // Free memory
     for (i = _vexttyp.begin();i != _vexttyp.end();++i) {
Index: eigen-src/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/eigen-src/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h b/eigen-src/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h
--- a/eigen-src/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	(revision 3147391d946bb4b6c68edd901f2add6ac1f31f8c)
+++ b/eigen-src/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContractionThreadPool.h	(date 1693030076952)
@@ -1006,7 +1006,11 @@
       } else {
         eigen_assert(!use_thread_local);
         device_.enqueueNoNotification(
+#if __cplusplus >= 202002L
+            [=, this]() { kernel(m, n, k, use_thread_local); });
+#else
             [=]() { kernel(m, n, k, use_thread_local); });
+#endif
       }
     }
 
@@ -1060,7 +1064,11 @@
         while (end - start > 1) {
           Index mid = (start + end) / 2;
           device_.enqueueNoNotification(
+#if __cplusplus >= 202002L
+              [=, this]() { enqueue_packing_helper(mid, end, k, rhs); });
+#else
               [=]() { enqueue_packing_helper(mid, end, k, rhs); });
+#endif
           end = mid;
         }
 
@@ -1079,7 +1087,11 @@
 
         if (pack_async) {
           device_.enqueueNoNotification(
+#if __cplusplus >= 202002L
+              [=, this]() { enqueue_packing_helper(start, end, k, rhs); });
+#else
               [=]() { enqueue_packing_helper(start, end, k, rhs); });
+#endif
         } else {
           enqueue_packing_helper(start, end, k, rhs);
         }
Index: openbabel-src/openbabel/src/fingerprints/finger3.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/fingerprints/finger3.cpp b/openbabel-src/openbabel/src/fingerprints/finger3.cpp
--- a/openbabel-src/openbabel/src/fingerprints/finger3.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/fingerprints/finger3.cpp	(date 1693030078733)
@@ -159,7 +159,7 @@
   bool ReadPatternFile(string& ver)
   {
     //Reads three types of file. See below
-    ifstream ifs;
+    istringstream ifs;
 	  stringstream errorMsg;
 
     if (OpenDatafile(ifs, _patternsfile).length() == 0)
@@ -238,8 +238,6 @@
       }
     }while(getline(ifs,line));
 
-    if (ifs)
-      ifs.close();
     return true;
   }
 
@@ -255,7 +253,8 @@
       int num =  ppat->numbits, div = ppat->numoccurrences+1, ngrp;
       while(num) //for each group of bits
       {
-        ngrp = (num + div -1)/div--; //rounds up
+        ngrp = (num + div -1)/div; //rounds up
+        --div;
         num -= ngrp;
         if(GetBit(fp, n) == bSet)
         {
Index: openbabel-src/openbabel/src/forcefields/forcefieldgaff.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/forcefields/forcefieldgaff.cpp b/openbabel-src/openbabel/src/forcefields/forcefieldgaff.cpp
--- a/openbabel-src/openbabel/src/forcefields/forcefieldgaff.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/forcefields/forcefieldgaff.cpp	(date 1693030078748)
@@ -1081,7 +1081,7 @@
     OBFFParameter parameter;
 
     // open data/gaff.dat
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "gaff.dat").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open gaff.dat", obError);
       return false;
@@ -1204,8 +1204,6 @@
 	    ifs.getline(buffer, BUFF_SIZE);
       }
 
-    if (ifs)
-      ifs.close();
 
     // return the locale to the original one
     obLocale.RestoreLocale();
@@ -1230,7 +1228,7 @@
     _mol.SetAtomTypesPerceived();
 
     // open data/gaff.prm
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "gaff.prm").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open gaff.prm", obError);
       return false;
@@ -1412,8 +1410,6 @@
     }
 
 
-    if (ifs)
-      ifs.close();
 
     // return the locale to the original one
     obLocale.RestoreLocale();
Index: openbabel-src/openbabel/src/forcefields/forcefieldmmff94.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/forcefields/forcefieldmmff94.cpp b/openbabel-src/openbabel/src/forcefields/forcefieldmmff94.cpp
--- a/openbabel-src/openbabel/src/forcefields/forcefieldmmff94.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/forcefields/forcefieldmmff94.cpp	(date 1693030078780)
@@ -874,7 +874,7 @@
     char buffer[80];
 
     // open data/_parFile
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, _parFile).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open parameter file", obError);
       return false;
@@ -913,8 +913,6 @@
         ParseParamVDW(vs[1]);
     }
 
-    if (ifs)
-      ifs.close();
 
     // return the locale to the original one
     obLocale.RestoreLocale();
@@ -929,7 +927,7 @@
     OBFFParameter parameter;
 
     // open data/mmffbond.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffbond.par", obError);
       return false;
@@ -950,8 +948,6 @@
       _ffbondparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -964,7 +960,7 @@
     OBFFParameter parameter;
 
     // open data/mmffbndk.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffbndk.par", obError);
       return false;
@@ -984,8 +980,6 @@
       _ffbndkparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -998,7 +992,7 @@
     OBFFParameter parameter;
 
     // open data/mmffang.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffang.par", obError);
       return false;
@@ -1020,8 +1014,6 @@
       _ffangleparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -1034,7 +1026,7 @@
     OBFFParameter parameter;
 
     // open data/mmffstbn.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffstbn.par", obError);
       return false;
@@ -1056,8 +1048,6 @@
       _ffstrbndparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -1070,7 +1060,7 @@
     OBFFParameter parameter;
 
     // open data/mmffdfsb.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffdfsb.par", obError);
       return false;
@@ -1091,8 +1081,6 @@
       _ffdfsbparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -1105,7 +1093,7 @@
     OBFFParameter parameter;
 
     // open data/mmffoop.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffoop.par", obError);
       return false;
@@ -1126,8 +1114,6 @@
       _ffoopparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -1140,7 +1126,7 @@
     OBFFParameter parameter;
 
     // open data/mmfftor.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmfftor.par", obError);
       return false;
@@ -1164,8 +1150,6 @@
       _fftorsionparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -1178,7 +1162,7 @@
     OBFFParameter parameter;
 
     // open data/mmffvdw.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffvdw.par", obError);
       return false;
@@ -1205,8 +1189,6 @@
       _ffvdwparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -1219,7 +1201,7 @@
     OBFFParameter parameter;
 
     // open data/mmffchg.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffchg.par", obError);
       return false;
@@ -1239,8 +1221,6 @@
       _ffchgparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -1253,7 +1233,7 @@
     OBFFParameter parameter;
 
     // open data/mmffpbci.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffpbci", obError);
       return false;
@@ -1272,8 +1252,6 @@
       _ffpbciparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -1286,7 +1264,7 @@
     OBFFParameter parameter;
 
     // open data/mmffprop.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffprop.par", obError);
       return false;
@@ -1321,8 +1299,6 @@
       _ffpropparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
@@ -1335,7 +1311,7 @@
     OBFFParameter parameter;
 
     // open data/mmffdef.par
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, filename).length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open mmffdef.par", obError);
       return false;
@@ -1356,8 +1332,6 @@
       _ffdefparams.push_back(parameter);
     }
 
-    if (ifs)
-      ifs.close();
 
     return 0;
   }
Index: pixman-src/pixman/pixman/pixman-compiler.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pixman-src/pixman/pixman/pixman-compiler.h b/pixman-src/pixman/pixman/pixman-compiler.h
--- a/pixman-src/pixman/pixman/pixman-compiler.h	(revision 37216a32839f59e8dcaa4c3951b3fcfc3f07852c)
+++ b/pixman-src/pixman/pixman/pixman-compiler.h	(date 1693030079424)
@@ -4,8 +4,6 @@
  * The features are:
  *
  *    FUNC	     must be defined to expand to the current function
- *    PIXMAN_EXPORT  should be defined to whatever is required to
- *                   export functions from a shared library
  *    limits	     limits for various types must be defined
  *    inline         must be defined
  *    force_inline   must be defined
@@ -88,18 +86,6 @@
 #      define noinline
 #   endif
 #endif
-
-/* GCC visibility */
-#if defined(__GNUC__) && __GNUC__ >= 4 && !defined(_WIN32)
-#   define PIXMAN_EXPORT __attribute__ ((visibility("default")))
-/* Sun Studio 8 visibility */
-#elif defined(__SUNPRO_C) && (__SUNPRO_C >= 0x550)
-#   define PIXMAN_EXPORT __global
-#elif defined (_MSC_VER) || defined(__MINGW32__)
-#   define PIXMAN_EXPORT PIXMAN_API
-#else
-#   define PIXMAN_EXPORT
-#endif
 
 /* member offsets */
 #define CONTAINER_OF(type, member, data)				\
Index: openbabel-src/openbabel/data/ghemical.prm
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/data/ghemical.prm b/openbabel-src/openbabel/data/ghemical.prm
--- a/openbabel-src/openbabel/data/ghemical.prm	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/data/ghemical.prm	(date 1693030078509)
@@ -45,98 +45,98 @@
 // one is chosen. that is, choose normal parameters if there is any matching
 // one, and take wildcarded one only if there is no better choice...
 //
-// [opt] = �
-// [fc] = kcal/(mol * �^2)
+// [opt] = Å
+// [fc] = kcal/(mol * Å^2)
 
-bond 	0602 0602 T 1.204 1400.0
-bond 	0602 0602 S 1.380  700.0
-bond	2300 0601 S 1.890  500.0
-bond	0602 0601 S 1.440 1340.0
-bond	0602 0601 D 1.440 1340.0
-bond	0601 0601 D 1.335 1340.0
-bond	0601 0601 S 1.470  700.0
-bond	0602 0600 S 1.458  640.0
-bond	0601 0600 S 1.501  639.0
-bond	0600 0600 S 1.540  633.6
-bond	2300 0603 S 1.850  500.0
-bond	0602 0603 S 1.440 1340.0
-bond	0601 0603 S 1.510 1340.0
-bond	0600 0603 S 1.525  640.0
-bond	0603 0603 C 1.395 1400.0
-bond	0603 0603 S 1.480 1000.0
-bond	0601 1100 S 1.750  520.0
-bond	0600 1100 S 1.767  600.0
-bond	0603 1100 S 1.750  513.4
-bond	0601 2300 S 1.850  520.0
-bond	0600 2300 S 1.867  600.0
-bond	0603 2300 S 1.850  513.4
-bond	0601 0900 S 1.330 1200.0
-bond	0600 0900 S 1.360  600.0
-bond	0603 0900 S 1.330  500.0
-bond	0602 0100 S 1.056  700.0
-bond	0601 0100 S 1.089  692.0
-bond	0600 0100 S 1.100  662.4
-bond	0603 0100 S 1.084  692.0
-bond	0600 3500 S 2.050  490.0	//added 20050225
-bond	0601 3500 S 2.050  490.0	//added 20050225
-bond	0602 3500 S 2.050  490.0	//added 20050225
-bond	0603 3500 S 2.050  490.0
-bond	0602 0702 T 1.158 1600.0
-bond	0602 0701 S 1.330 1300.0
-bond	0602 0701 D 1.330 1300.0
-bond	0601 0701 D 1.270 1305.9
-bond	0601 0701 S 1.444 1300.0
-bond	0600 0701 S 1.440  760.2
-bond	0603 0701 S 1.346 1305.9
-bond	0701 0701 D 1.346 1305.9
-bond	0701 0701 S 1.418 1300.0
-bond	0601 0700 S 1.330 1300.0
-bond	0600 0700 S 1.470  760.0
-bond	0603 0700 S 1.410  720.0
-bond	0100 0700 S 1.080  692.0
-bond	0601 0704 S 1.330 1300.0
-bond	0600 0704 S 1.470  760.0
-bond	0603 0704 S 1.410  720.0
-bond	0601 0705 S 1.345  870.1
-bond	0600 0705 S 1.450  677.6
-bond	0603 0705 S 1.416 1090.1
-bond	0100 0705 S 1.000  700.0
-bond	0701 0705 S 1.440  667.6
-bond	0705 0705 S 1.450  744.5
-bond	0603 0703 C 1.346 1305.9
-bond	0703 0703 C 1.330 1400.0
-bond	0601 0801 D 1.220 1555.2
-bond	0705 0801 S 1.240 1120.0
-bond	0705 0801 D 1.210  680.0
-bond	0601 0800 S 1.330  699.8
-bond	0600 0800 S 1.430  618.9
-bond	0603 0800 S 1.390  700.0
-bond	0100 0800 S 0.950 1007.5
-bond	0701 0800 S 1.405 1200.0
-bond	0705 0800 S 1.400  620.0
-bond	0800 0800 S 1.480 1172.2
-bond	0600 0F00 S 1.830  407.6
-bond	0801 0F00 S 1.490 1400.0
-bond	0801 0F00 D 1.490 1400.0
-bond	0800 0F00 S 1.600  800.0
-bond	0601 1001 D 1.710  400.0
-bond	0600 1001 S 1.800  381.6
-bond	0603 1001 S 1.740  700.0
-bond	0601 1000 S 1.780  360.0
-bond	0600 1000 S 1.817  381.6
-bond	0603 1000 S 1.770  360.0
-bond	0700 1000 S 1.625  360.0
-bond	0704 1000 S 1.625  360.0
-bond	0801 1000 D 1.450  600.0
-bond	1000 1000 S 2.030  600.0
-bond	0601 1002 S 1.710  360.0
-bond	0600 1002 S 1.800  381.6
-bond	0801 1002 D 1.450  600.0
-bond	0800 1002 S 1.500  600.0
-bond	0600 1003 S 1.800  381.6
-bond	0801 1003 D 1.450  600.0
-bond	0800 1003 S 1.500  600.0
-bond	FFFF 0100 S 1.008  700.0
+bond    0602 0602 T 1.204 1400.0
+bond    0602 0602 S 1.380  700.0
+bond    2300 0601 S 1.890  500.0
+bond    0602 0601 S 1.440 1340.0
+bond    0602 0601 D 1.440 1340.0
+bond    0601 0601 D 1.335 1340.0
+bond    0601 0601 S 1.470  700.0
+bond    0602 0600 S 1.458  640.0
+bond    0601 0600 S 1.501  639.0
+bond    0600 0600 S 1.540  633.6
+bond    2300 0603 S 1.850  500.0
+bond    0602 0603 S 1.440 1340.0
+bond    0601 0603 S 1.510 1340.0
+bond    0600 0603 S 1.525  640.0
+bond    0603 0603 C 1.395 1400.0
+bond    0603 0603 S 1.480 1000.0
+bond    0601 1100 S 1.750  520.0
+bond    0600 1100 S 1.767  600.0
+bond    0603 1100 S 1.750  513.4
+bond    0601 2300 S 1.850  520.0
+bond    0600 2300 S 1.867  600.0
+bond    0603 2300 S 1.850  513.4
+bond    0601 0900 S 1.330 1200.0
+bond    0600 0900 S 1.360  600.0
+bond    0603 0900 S 1.330  500.0
+bond    0602 0100 S 1.056  700.0
+bond    0601 0100 S 1.089  692.0
+bond    0600 0100 S 1.100  662.4
+bond    0603 0100 S 1.084  692.0
+bond    0600 3500 S 2.050  490.0    //added 20050225
+bond    0601 3500 S 2.050  490.0    //added 20050225
+bond    0602 3500 S 2.050  490.0    //added 20050225
+bond    0603 3500 S 2.050  490.0
+bond    0602 0702 T 1.158 1600.0
+bond    0602 0701 S 1.330 1300.0
+bond    0602 0701 D 1.330 1300.0
+bond    0601 0701 D 1.270 1305.9
+bond    0601 0701 S 1.444 1300.0
+bond    0600 0701 S 1.440  760.2
+bond    0603 0701 S 1.346 1305.9
+bond    0701 0701 D 1.346 1305.9
+bond    0701 0701 S 1.418 1300.0
+bond    0601 0700 S 1.330 1300.0
+bond    0600 0700 S 1.470  760.0
+bond    0603 0700 S 1.410  720.0
+bond    0100 0700 S 1.080  692.0
+bond    0601 0704 S 1.330 1300.0
+bond    0600 0704 S 1.470  760.0
+bond    0603 0704 S 1.410  720.0
+bond    0601 0705 S 1.345  870.1
+bond    0600 0705 S 1.450  677.6
+bond    0603 0705 S 1.416 1090.1
+bond    0100 0705 S 1.000  700.0
+bond    0701 0705 S 1.440  667.6
+bond    0705 0705 S 1.450  744.5
+bond    0603 0703 C 1.346 1305.9
+bond    0703 0703 C 1.330 1400.0
+bond    0601 0801 D 1.220 1555.2
+bond    0705 0801 S 1.240 1120.0
+bond    0705 0801 D 1.210  680.0
+bond    0601 0800 S 1.330  699.8
+bond    0600 0800 S 1.430  618.9
+bond    0603 0800 S 1.390  700.0
+bond    0100 0800 S 0.950 1007.5
+bond    0701 0800 S 1.405 1200.0
+bond    0705 0800 S 1.400  620.0
+bond    0800 0800 S 1.480 1172.2
+bond    0600 0F00 S 1.830  407.6
+bond    0801 0F00 S 1.490 1400.0
+bond    0801 0F00 D 1.490 1400.0
+bond    0800 0F00 S 1.600  800.0
+bond    0601 1001 D 1.710  400.0
+bond    0600 1001 S 1.800  381.6
+bond    0603 1001 S 1.740  700.0
+bond    0601 1000 S 1.780  360.0
+bond    0600 1000 S 1.817  381.6
+bond    0603 1000 S 1.770  360.0
+bond    0700 1000 S 1.625  360.0
+bond    0704 1000 S 1.625  360.0
+bond    0801 1000 D 1.450  600.0
+bond    1000 1000 S 2.030  600.0
+bond    0601 1002 S 1.710  360.0
+bond    0600 1002 S 1.800  381.6
+bond    0801 1002 D 1.450  600.0
+bond    0800 1002 S 1.500  600.0
+bond    0600 1003 S 1.800  381.6
+bond    0801 1003 D 1.450  600.0
+bond    0800 1003 S 1.500  600.0
+bond    FFFF 0100 S 1.008  700.0
 
 // angle bending parameters 09.05.2000 (based on Tripos 5.2 and MMFF94)
 // [id #1] [id #2] [id #3] [bt12][bt23] [opt] [fc]
@@ -147,191 +147,191 @@
 // [opt] = deg
 // [fc] = kcal/(mol * deg^2)
 
-angle	0602 0602 0601 ?? 180.0 0.040
-angle	0601 0602 0702 ?? 180.0 0.040
-angle	0600 0602 0702 ?? 180.0 0.040
-angle	0603 0602 0702 ?? 180.0 0.040
-angle	0702 0602 0800 ?? 180.0 0.040
-angle	2300 0601 2300 ?? 120.0 0.020
-angle	2300 0601 0601 ?? 120.0 0.036
-angle	0601 0601 0601 ?? 121.7 0.018
-angle	0602 0601 0600 ?? 120.0 0.024
-angle	0601 0601 0600 ?? 121.0 0.024
-angle	0600 0601 0600 ?? 116.4 0.046
-angle	0602 0601 0603 ?? 120.0 0.024
-angle	0601 0601 0603 ?? 120.0 0.026
-angle	0600 0601 0603 ?? 120.0 0.024
-angle	0603 0601 0603 ?? 120.0 0.024
-angle	0601 0601 1100 ?? 120.0 0.036
-angle	0603 0601 1100 ?? 120.0 0.036
-angle	1100 0601 1100 ?? 122.0 0.030
-angle	0601 0601 2300 ?? 120.0 0.036
-angle	0603 0601 2300 ?? 120.0 0.036
-angle	2300 0601 2300 ?? 122.0 0.030
-angle	0602 0601 0701 ?? 123.0 0.070
-angle	0601 0601 0701 ?? 120.0 0.024
-angle	0600 0601 0701 ?? 118.0 0.020
-angle	0603 0601 0701 ?? 120.0 0.040
-angle	0601 0601 0700 ?? 120.0 0.024
-angle	0600 0601 0700 ?? 118.0 0.040
-angle	0701 0601 0700 ?? 121.8 0.030
-angle	0700 0601 0700 ?? 116.4 0.030
-angle	0601 0601 0705 ?? 120.0 0.024
-angle	0600 0601 0705 ?? 117.0 0.020
-angle	0603 0601 0705 ?? 120.0 0.040
-angle	0701 0601 0705 ?? 123.0 0.070
-angle	0705 0601 0705 ?? 120.0 0.030
-angle	0602 0601 0801 ?? 120.0 0.060
-angle	0601 0601 0801 ?? 120.0 0.026
-angle	0600 0601 0801 ?? 120.0 0.026
-angle	0603 0601 0801 ?? 120.0 0.026
-angle	0700 0601 0801 ?? 120.0 0.026
-angle	0705 0601 0801 ?? 123.0 0.030
-angle	0601 0601 0800 ?? 120.0 0.072
-angle	0600 0601 0800 ?? 114.0 0.030
-angle	0603 0601 0800 ?? 120.0 0.030
-angle	0705 0601 0800 ?? 110.5 0.014
-angle	0801 0601 0800 ?? 120.0 0.030
-angle	0701 0601 1000 ?? 125.6 0.028
-angle	0705 0601 1000 ?? 111.5 0.030
-angle	0801 0601 1000 ?? 125.0 0.016
-angle	0601 0600 0601 ?? 109.5 0.018
-angle	0602 0600 0600 ?? 109.5 0.024
-angle	0601 0600 0600 ?? 109.5 0.018
-angle	0600 0600 0600 ?? 109.5 0.024
-angle	0601 0600 0603 ?? 109.5 0.018
-angle	0600 0600 0603 ?? 109.5 0.024
-angle	0603 0600 0603 ?? 109.5 0.018
-angle	0600 0600 1100 ?? 109.5 0.020
-angle	1100 0600 1100 ?? 109.5 0.020
-angle	0600 0600 2300 ?? 109.5 0.020
-angle	2300 0600 2300 ?? 109.5 0.020
-angle	0603 0600 0900 ?? 110.0 0.024
-angle	0900 0600 0900 ?? 109.5 0.040
-angle	0601 0600 0100 ?? 110.0 0.016
-angle	0100 0600 0100 ?? 109.5 0.024
-angle	0600 0600 0701 ?? 109.5 0.018
-angle	0601 0600 0700 ?? 109.5 0.018
-angle	0600 0600 0700 ?? 109.5 0.024
-angle	0603 0600 0700 ?? 109.5 0.018
-angle	0601 0600 0705 ?? 109.5 0.022
-angle	0600 0600 0705 ?? 109.5 0.018
-angle	0603 0600 0705 ?? 109.5 0.020
-angle	0100 0600 0705 ?? 110.0 0.020
-angle	0701 0600 0705 ?? 109.5 0.020
-angle	0705 0600 0705 ?? 109.5 0.040
-angle	0900 0600 0703 ?? 109.5 0.040
-angle	0601 0600 0800 ?? 109.5 0.022
-angle	0600 0600 0800 ?? 109.5 0.022
-angle	0603 0600 0800 ?? 109.5 0.018
-angle	0705 0600 0800 ?? 109.5 0.020
-angle	0800 0600 0800 ?? 109.5 0.020
-angle	0600 0600 0F00 ?? 112.0 0.014
-angle	0601 0600 1001 ?? 109.5 0.018
-angle	0600 0600 1001 ?? 109.5 0.018
-angle	0705 0600 1001 ?? 109.5 0.040
-angle	0601 0600 1000 ?? 107.8 0.018
-angle	0600 0600 1000 ?? 107.8 0.018
-angle	0603 0600 1000 ?? 107.8 0.018
-angle	0705 0600 1000 ?? 109.5 0.024
-angle	0800 0600 1000 ?? 107.8 0.020
-angle	2300 0603 0603 ?? 120.0 0.036
-angle	0601 0603 0603 ?? 120.0 0.024
-angle	0600 0603 0603 ?? 120.0 0.024
-angle	0603 0603 0603 ?? 120.0 0.024
-angle	0603 0603 1100 ?? 120.0 0.036
-angle	0603 0603 2300 ?? 120.0 0.036
-angle	0603 0603 0900 ?? 120.0 0.036
-angle	0603 0603 3500 ?? 120.0 0.036
-angle	0600 0603 0701 ?? 120.0 0.040
-angle	0603 0603 0701 ?? 120.0 0.040
-angle	0701 0603 0701 ?? 120.0 0.040
-angle	0603 0603 0700 ?? 120.0 0.062
-angle	0600 0603 0705 ?? 120.0 0.040
-angle	0603 0603 0705 ?? 120.0 0.062
-angle	0701 0603 0705 ?? 118.0 0.040
-angle	0705 0603 0705 ?? 120.0 0.030
-angle	0601 0603 0703 ?? 120.0 0.040
-angle	0600 0603 0703 ?? 120.0 0.040
-angle	0603 0603 0703 ?? 120.0 0.024
-angle	0705 0603 0703 ?? 118.0 0.040
-angle	0600 0603 0800 ?? 120.0 0.040
-angle	0603 0603 0800 ?? 120.0 0.062
-angle	0603 0603 1001 ?? 120.0 0.062
-angle	0603 0603 1000 ?? 120.0 0.062
-angle	0602 0701 0601 ?? 120.0 0.040
-angle	0601 0701 0601 ?? 123.0 0.080
-angle	0601 0701 0600 ?? 110.0 0.082
-angle	0601 0701 0603 ?? 123.0 0.080
-angle	0600 0701 0603 ?? 110.0 0.082
-angle	0603 0701 0603 ?? 120.0 0.040
-angle	0601 0701 0701 ?? 112.0 0.044
-angle	0600 0701 0701 ?? 118.0 0.040
-angle	0603 0701 0701 ?? 118.0 0.040
-angle	0601 0701 0705 ?? 120.0 0.044
-angle	0601 0701 0800 ?? 105.0 0.044
-angle	0601 0700 0600 ?? 110.0 0.040
-angle	0600 0700 0600 ?? 109.5 0.018
-angle	0600 0700 0603 ?? 118.0 0.040
-angle	0603 0700 0603 ?? 118.0 0.040
-angle	0600 0700 1001 ?? 109.5 0.040
-angle	0600 0704 0600 ?? 109.5 0.018
-angle	0601 0705 0601 ?? 120.0 0.018
-angle	0601 0705 0600 ?? 118.0 0.044
-angle	0600 0705 0600 ?? 122.0 0.040
-angle	0601 0705 0603 ?? 120.0 0.052
-angle	0600 0705 0603 ?? 118.0 0.044
-angle	0603 0705 0603 ?? 120.0 0.044
-angle	0601 0705 0100 ?? 119.0 0.016
-angle	0600 0705 0100 ?? 117.0 0.020
-angle	0601 0705 0701 ?? 120.0 0.018
-angle	0600 0705 0701 ?? 120.0 0.024
-angle	0603 0705 0701 ?? 109.5 0.044
-angle	0601 0705 0705 ?? 120.0 0.018
-angle	0600 0705 0705 ?? 120.0 0.024
-angle	0603 0705 0705 ?? 120.0 0.052
-angle	0601 0705 0801 ?? 120.0 0.024
-angle	0600 0705 0801 ?? 120.0 0.020
-angle	0603 0705 0801 ?? 120.0 0.024
-angle	0801 0705 0801 ?? 120.0 0.020
-angle	0603 0703 0603 ?? 120.0 0.040
-angle	0601 0800 0601 ?? 110.0 0.020
-angle	0601 0800 0600 ?? 109.5 0.044
-angle	0600 0800 0600 ?? 109.5 0.044
-angle	0601 0800 0603 ?? 110.0 0.020
-angle	0600 0800 0603 ?? 110.0 0.020
-angle	0603 0800 0603 ?? 110.0 0.020
-angle	0601 0800 0701 ?? 108.5 0.044
-angle	0600 0800 0800 ?? 103.9 0.094
-angle	0600 0800 0F00 ?? 120.0 0.010
-angle	0801 0F00 0801 ?? 109.5 0.020
-angle	0801 0F00 0800 ?? 109.5 0.020
-angle	0800 0F00 0800 ?? 109.5 0.020
-angle	0600 1001 0700 ?? 111.0 0.040
-angle	0603 1001 0700 ?? 111.0 0.040
-angle	0601 1000 0600 ??  94.3 0.022
-angle	0600 1000 0600 ??  98.0 0.020
-angle	0603 1000 0603 ??  97.5 0.062
-angle	0603 1000 1000 ?? 102.9 0.060
-angle	0801 1003 0801 ?? 118.0 0.040
-angle	FFFF 0601 0100 ?? 120.0 0.012
-angle	FFFF 0600 0100 ?? 109.5 0.016
-angle	FFFF 1002 0801 ?? 107.0 0.040
-angle	FFFF 1003 0801 ?? 107.0 0.040
-angle	FFFF 0602 FFFF ?? 180.0 0.040
-angle	FFFF 0601 FFFF ?? 120.0 0.024
-angle	FFFF 0600 FFFF ?? 109.5 0.020
-angle	FFFF 0603 FFFF ?? 120.0 0.024
-angle	FFFF 0702 FFFF ?? 180.0 0.080
-angle	FFFF 0701 FFFF ?? 120.0 0.040
-angle	FFFF 0700 FFFF ?? 109.5 0.040
-angle	FFFF 0704 FFFF ?? 109.5 0.010
-angle	FFFF 0705 FFFF ?? 120.0 0.020
-angle	FFFF 0703 FFFF ?? 120.0 0.020
-angle	FFFF 0800 FFFF ?? 109.5 0.020
-angle	FFFF 0F00 FFFF ?? 109.5 0.020
-angle	FFFF 1001 FFFF ?? 110.5 0.040
-angle	FFFF 1000 FFFF ??  97.0 0.020
+angle    0602 0602 0601 ?? 180.0 0.040
+angle    0601 0602 0702 ?? 180.0 0.040
+angle    0600 0602 0702 ?? 180.0 0.040
+angle    0603 0602 0702 ?? 180.0 0.040
+angle    0702 0602 0800 ?? 180.0 0.040
+angle    2300 0601 2300 ?? 120.0 0.020
+angle    2300 0601 0601 ?? 120.0 0.036
+angle    0601 0601 0601 ?? 121.7 0.018
+angle    0602 0601 0600 ?? 120.0 0.024
+angle    0601 0601 0600 ?? 121.0 0.024
+angle    0600 0601 0600 ?? 116.4 0.046
+angle    0602 0601 0603 ?? 120.0 0.024
+angle    0601 0601 0603 ?? 120.0 0.026
+angle    0600 0601 0603 ?? 120.0 0.024
+angle    0603 0601 0603 ?? 120.0 0.024
+angle    0601 0601 1100 ?? 120.0 0.036
+angle    0603 0601 1100 ?? 120.0 0.036
+angle    1100 0601 1100 ?? 122.0 0.030
+angle    0601 0601 2300 ?? 120.0 0.036
+angle    0603 0601 2300 ?? 120.0 0.036
+angle    2300 0601 2300 ?? 122.0 0.030
+angle    0602 0601 0701 ?? 123.0 0.070
+angle    0601 0601 0701 ?? 120.0 0.024
+angle    0600 0601 0701 ?? 118.0 0.020
+angle    0603 0601 0701 ?? 120.0 0.040
+angle    0601 0601 0700 ?? 120.0 0.024
+angle    0600 0601 0700 ?? 118.0 0.040
+angle    0701 0601 0700 ?? 121.8 0.030
+angle    0700 0601 0700 ?? 116.4 0.030
+angle    0601 0601 0705 ?? 120.0 0.024
+angle    0600 0601 0705 ?? 117.0 0.020
+angle    0603 0601 0705 ?? 120.0 0.040
+angle    0701 0601 0705 ?? 123.0 0.070
+angle    0705 0601 0705 ?? 120.0 0.030
+angle    0602 0601 0801 ?? 120.0 0.060
+angle    0601 0601 0801 ?? 120.0 0.026
+angle    0600 0601 0801 ?? 120.0 0.026
+angle    0603 0601 0801 ?? 120.0 0.026
+angle    0700 0601 0801 ?? 120.0 0.026
+angle    0705 0601 0801 ?? 123.0 0.030
+angle    0601 0601 0800 ?? 120.0 0.072
+angle    0600 0601 0800 ?? 114.0 0.030
+angle    0603 0601 0800 ?? 120.0 0.030
+angle    0705 0601 0800 ?? 110.5 0.014
+angle    0801 0601 0800 ?? 120.0 0.030
+angle    0701 0601 1000 ?? 125.6 0.028
+angle    0705 0601 1000 ?? 111.5 0.030
+angle    0801 0601 1000 ?? 125.0 0.016
+angle    0601 0600 0601 ?? 109.5 0.018
+angle    0602 0600 0600 ?? 109.5 0.024
+angle    0601 0600 0600 ?? 109.5 0.018
+angle    0600 0600 0600 ?? 109.5 0.024
+angle    0601 0600 0603 ?? 109.5 0.018
+angle    0600 0600 0603 ?? 109.5 0.024
+angle    0603 0600 0603 ?? 109.5 0.018
+angle    0600 0600 1100 ?? 109.5 0.020
+angle    1100 0600 1100 ?? 109.5 0.020
+angle    0600 0600 2300 ?? 109.5 0.020
+angle    2300 0600 2300 ?? 109.5 0.020
+angle    0603 0600 0900 ?? 110.0 0.024
+angle    0900 0600 0900 ?? 109.5 0.040
+angle    0601 0600 0100 ?? 110.0 0.016
+angle    0100 0600 0100 ?? 109.5 0.024
+angle    0600 0600 0701 ?? 109.5 0.018
+angle    0601 0600 0700 ?? 109.5 0.018
+angle    0600 0600 0700 ?? 109.5 0.024
+angle    0603 0600 0700 ?? 109.5 0.018
+angle    0601 0600 0705 ?? 109.5 0.022
+angle    0600 0600 0705 ?? 109.5 0.018
+angle    0603 0600 0705 ?? 109.5 0.020
+angle    0100 0600 0705 ?? 110.0 0.020
+angle    0701 0600 0705 ?? 109.5 0.020
+angle    0705 0600 0705 ?? 109.5 0.040
+angle    0900 0600 0703 ?? 109.5 0.040
+angle    0601 0600 0800 ?? 109.5 0.022
+angle    0600 0600 0800 ?? 109.5 0.022
+angle    0603 0600 0800 ?? 109.5 0.018
+angle    0705 0600 0800 ?? 109.5 0.020
+angle    0800 0600 0800 ?? 109.5 0.020
+angle    0600 0600 0F00 ?? 112.0 0.014
+angle    0601 0600 1001 ?? 109.5 0.018
+angle    0600 0600 1001 ?? 109.5 0.018
+angle    0705 0600 1001 ?? 109.5 0.040
+angle    0601 0600 1000 ?? 107.8 0.018
+angle    0600 0600 1000 ?? 107.8 0.018
+angle    0603 0600 1000 ?? 107.8 0.018
+angle    0705 0600 1000 ?? 109.5 0.024
+angle    0800 0600 1000 ?? 107.8 0.020
+angle    2300 0603 0603 ?? 120.0 0.036
+angle    0601 0603 0603 ?? 120.0 0.024
+angle    0600 0603 0603 ?? 120.0 0.024
+angle    0603 0603 0603 ?? 120.0 0.024
+angle    0603 0603 1100 ?? 120.0 0.036
+angle    0603 0603 2300 ?? 120.0 0.036
+angle    0603 0603 0900 ?? 120.0 0.036
+angle    0603 0603 3500 ?? 120.0 0.036
+angle    0600 0603 0701 ?? 120.0 0.040
+angle    0603 0603 0701 ?? 120.0 0.040
+angle    0701 0603 0701 ?? 120.0 0.040
+angle    0603 0603 0700 ?? 120.0 0.062
+angle    0600 0603 0705 ?? 120.0 0.040
+angle    0603 0603 0705 ?? 120.0 0.062
+angle    0701 0603 0705 ?? 118.0 0.040
+angle   0705 0603 0705 ?? 120.0 0.030
+angle    0601 0603 0703 ?? 120.0 0.040
+angle    0600 0603 0703 ?? 120.0 0.040
+angle    0603 0603 0703 ?? 120.0 0.024
+angle    0705 0603 0703 ?? 118.0 0.040
+angle    0600 0603 0800 ?? 120.0 0.040
+angle    0603 0603 0800 ?? 120.0 0.062
+angle    0603 0603 1001 ?? 120.0 0.062
+angle    0603 0603 1000 ?? 120.0 0.062
+angle    0602 0701 0601 ?? 120.0 0.040
+angle    0601 0701 0601 ?? 123.0 0.080
+angle    0601 0701 0600 ?? 110.0 0.082
+angle    0601 0701 0603 ?? 123.0 0.080
+angle    0600 0701 0603 ?? 110.0 0.082
+angle    0603 0701 0603 ?? 120.0 0.040
+angle    0601 0701 0701 ?? 112.0 0.044
+angle    0600 0701 0701 ?? 118.0 0.040
+angle    0603 0701 0701 ?? 118.0 0.040
+angle    0601 0701 0705 ?? 120.0 0.044
+angle    0601 0701 0800 ?? 105.0 0.044
+angle    0601 0700 0600 ?? 110.0 0.040
+angle    0600 0700 0600 ?? 109.5 0.018
+angle    0600 0700 0603 ?? 118.0 0.040
+angle    0603 0700 0603 ?? 118.0 0.040
+angle    0600 0700 1001 ?? 109.5 0.040
+angle    0600 0704 0600 ?? 109.5 0.018
+angle    0601 0705 0601 ?? 120.0 0.018
+angle    0601 0705 0600 ?? 118.0 0.044
+angle    0600 0705 0600 ?? 122.0 0.040
+angle    0601 0705 0603 ?? 120.0 0.052
+angle    0600 0705 0603 ?? 118.0 0.044
+angle    0603 0705 0603 ?? 120.0 0.044
+angle    0601 0705 0100 ?? 119.0 0.016
+angle    0600 0705 0100 ?? 117.0 0.020
+angle    0601 0705 0701 ?? 120.0 0.018
+angle    0600 0705 0701 ?? 120.0 0.024
+angle    0603 0705 0701 ?? 109.5 0.044
+angle    0601 0705 0705 ?? 120.0 0.018
+angle    0600 0705 0705 ?? 120.0 0.024
+angle    0603 0705 0705 ?? 120.0 0.052
+angle    0601 0705 0801 ?? 120.0 0.024
+angle    0600 0705 0801 ?? 120.0 0.020
+angle    0603 0705 0801 ?? 120.0 0.024
+angle    0801 0705 0801 ?? 120.0 0.020
+angle    0603 0703 0603 ?? 120.0 0.040
+angle    0601 0800 0601 ?? 110.0 0.020
+angle    0601 0800 0600 ?? 109.5 0.044
+angle    0600 0800 0600 ?? 109.5 0.044
+angle    0601 0800 0603 ?? 110.0 0.020
+angle    0600 0800 0603 ?? 110.0 0.020
+angle    0603 0800 0603 ?? 110.0 0.020
+angle    0601 0800 0701 ?? 108.5 0.044
+angle    0600 0800 0800 ?? 103.9 0.094
+angle    0600 0800 0F00 ?? 120.0 0.010
+angle    0801 0F00 0801 ?? 109.5 0.020
+angle    0801 0F00 0800 ?? 109.5 0.020
+angle    0800 0F00 0800 ?? 109.5 0.020
+angle    0600 1001 0700 ?? 111.0 0.040
+angle    0603 1001 0700 ?? 111.0 0.040
+angle    0601 1000 0600 ??  94.3 0.022
+angle    0600 1000 0600 ??  98.0 0.020
+angle    0603 1000 0603 ??  97.5 0.062
+angle    0603 1000 1000 ?? 102.9 0.060
+angle    0801 1003 0801 ?? 118.0 0.040
+angle    FFFF 0601 0100 ?? 120.0 0.012
+angle    FFFF 0600 0100 ?? 109.5 0.016
+angle    FFFF 1002 0801 ?? 107.0 0.040
+angle    FFFF 1003 0801 ?? 107.0 0.040
+angle    FFFF 0602 FFFF ?? 180.0 0.040
+angle    FFFF 0601 FFFF ?? 120.0 0.024
+angle    FFFF 0600 FFFF ?? 109.5 0.020
+angle    FFFF 0603 FFFF ?? 120.0 0.024
+angle    FFFF 0702 FFFF ?? 180.0 0.080
+angle    FFFF 0701 FFFF ?? 120.0 0.040
+angle    FFFF 0700 FFFF ?? 109.5 0.040
+angle    FFFF 0704 FFFF ?? 109.5 0.010
+angle    FFFF 0705 FFFF ?? 120.0 0.020
+angle    FFFF 0703 FFFF ?? 120.0 0.020
+angle    FFFF 0800 FFFF ?? 109.5 0.020
+angle    FFFF 0F00 FFFF ?? 109.5 0.020
+angle    FFFF 1001 FFFF ?? 110.5 0.040
+angle    FFFF 1000 FFFF ??  97.0 0.020
 
 // torsion parameters 09.05.2000 (based on Tripos 5.2 and MMFF94)
 // [id #1] [id #2] [id #3] [id #4] [bt12][bt23][bt34] [k] [n] [s]
@@ -341,108 +341,108 @@
 //
 // [k] = kcal/mol (rotational barrier ???)
 
-torsion	0801 0601 0600 0600 ?S?  0.700 - 3.0
-torsion	0601 0600 0600 0601 ?S?  0.040 + 3.0
-torsion	0601 0600 0600 0600 ?S?  0.126 + 3.0
-torsion	0600 0600 0600 0600 ?S?  0.500 + 3.0
-torsion	0601 0601 0600 0601 ?S?  0.126 - 3.0
-torsion	0601 0601 0600 0100 ?S?  0.273 - 3.0
-torsion	0600 0601 0600 0601 ?S?  0.126 + 3.0
-torsion	0600 0601 0600 0600 ?S?  0.126 + 3.0
-torsion	0600 0601 0600 0100 ?S?  0.274 + 3.0
-torsion	0100 0601 0600 0601 ?S?  0.274 + 3.0
-torsion	0100 0601 0600 0600 ?S?  0.274 + 3.0
-torsion	0100 0601 0600 0100 ?S?  0.274 + 3.0
-torsion	0601 0601 0600 0600 ?S?  0.126 - 3.0
-torsion	FFFF 0601 0600 0601 ?S?  0.126 + 3.0
-torsion	FFFF 0601 0600 0600 ?S?  0.126 + 3.0
-torsion	FFFF 0601 0600 0100 ?S?  0.274 + 3.0
-torsion	FFFF 0600 0600 0100 ?S?  0.320 + 3.0
-torsion	0601 0601 0600 FFFF ?S?  0.126 - 3.0
-torsion	0600 0601 0600 FFFF ?S?  0.126 + 3.0
-torsion	0100 0601 0600 FFFF ?S?  0.274 + 3.0
-torsion	FFFF 0602 0602 FFFF ?T?  0.000 + 1.0
-torsion	FFFF 0602 0602 FFFF ?S?  0.000 + 1.0
-torsion	FFFF 0602 0601 FFFF ?S?  0.000 + 1.0
-torsion	FFFF 0602 0601 FFFF ?D?  0.000 + 1.0
-torsion	FFFF 0601 0601 FFFF ?D? 12.500 - 2.0
-torsion	FFFF 0601 0601 FFFF ?S?  1.424 - 2.0
-torsion	FFFF 0602 0600 FFFF ?S?  0.000 + 1.0
-torsion	FFFF 0601 0600 FFFF ?S?  0.120 - 3.0
-torsion	FFFF 0600 0600 FFFF ?S?  0.200 + 3.0
-torsion	FFFF 0602 0603 FFFF ?S?  0.000 + 1.0
-torsion	FFFF 0601 0603 FFFF ?S?  1.600 - 2.0
-torsion	FFFF 0600 0603 FFFF ?S?  0.120 - 3.0
-torsion	FFFF 0603 0603 FFFF ?C?  2.000 - 2.0
-torsion	FFFF 0603 0603 FFFF ?S?  0.600 - 2.0
-torsion	FFFF 0602 0701 FFFF ?S?  0.000 + 1.0
-torsion	FFFF 0602 0701 FFFF ?D?  0.000 + 1.0
-torsion	FFFF 0601 0701 FFFF ?D? 12.000 - 2.0
-torsion	FFFF 0601 0701 FFFF ?S? 12.000 - 2.0
-torsion	FFFF 0600 0701 FFFF ?S?  0.400 - 3.0
-torsion	FFFF 0603 0701 FFFF ?S?  1.600 - 2.0
-torsion	FFFF 0701 0701 FFFF ?D?  1.600 - 2.0
-torsion	FFFF 0701 0701 FFFF ?S?  1.600 - 2.0
-torsion	FFFF 0601 0700 FFFF ?S?  0.120 - 3.0
-torsion	FFFF 0600 0700 FFFF ?S?  0.200 + 3.0
-torsion	FFFF 0603 0700 FFFF ?S?  0.120 - 3.0
-torsion	FFFF 0700 0700 FFFF ?S?  0.200 + 3.0
-torsion	FFFF 0601 0705 FFFF ?S?  6.460 - 2.0
-torsion	FFFF 0600 0705 FFFF ?S?  0.200 + 3.0
-torsion	FFFF 0603 0705 FFFF ?S?  1.600 - 2.0
-torsion	FFFF 0701 0705 FFFF ?S?  1.600 - 2.0
-torsion	FFFF 0700 0705 FFFF ?S?  0.120 - 3.0
-torsion	FFFF 0705 0705 FFFF ?S?  1.600 - 2.0
-torsion	FFFF 0603 0703 FFFF ?C?  1.600 - 2.0
-torsion	FFFF 0601 0800 FFFF ?S?  5.800 - 2.0
-torsion	FFFF 0600 0800 FFFF ?S?  1.200 + 3.0
-torsion	FFFF 0603 0800 FFFF ?S?  1.200 - 2.0
-torsion	FFFF 0701 0800 FFFF ?S?  1.000 + 2.0
-torsion	FFFF 0700 0800 FFFF ?S?  0.200 + 3.0
-torsion	FFFF 0601 0F00 FFFF ?S?  1.000 - 2.0
-torsion	FFFF 0600 0F00 FFFF ?S?  0.400 + 3.0
-torsion	FFFF 0603 0F00 FFFF ?S?  1.000 + 3.0
-torsion	FFFF 0800 0F00 FFFF ?S?  0.400 + 3.0
-torsion	FFFF 0601 1001 FFFF ?D?  1.000 - 2.0
-torsion	FFFF 0600 1001 FFFF ?S?  0.400 + 3.0
-torsion	FFFF 0603 1001 FFFF ?S?  1.000 + 3.0
-torsion	FFFF 0700 1001 FFFF ?S?  0.400 + 3.0
-torsion	FFFF 0601 1000 FFFF ?S?  1.000 - 2.0
-torsion	FFFF 0600 1000 FFFF ?S?  0.400 + 3.0
-torsion	FFFF 0603 1000 FFFF ?S?  1.000 + 3.0
-torsion	FFFF 1000 1000 FFFF ?S?  4.000 + 3.0
+torsion    0801 0601 0600 0600 ?S?  0.700 - 3.0
+torsion    0601 0600 0600 0601 ?S?  0.040 + 3.0
+torsion    0601 0600 0600 0600 ?S?  0.126 + 3.0
+torsion    0600 0600 0600 0600 ?S?  0.500 + 3.0
+torsion    0601 0601 0600 0601 ?S?  0.126 - 3.0
+torsion    0601 0601 0600 0100 ?S?  0.273 - 3.0
+torsion    0600 0601 0600 0601 ?S?  0.126 + 3.0
+torsion    0600 0601 0600 0600 ?S?  0.126 + 3.0
+torsion    0600 0601 0600 0100 ?S?  0.274 + 3.0
+torsion    0100 0601 0600 0601 ?S?  0.274 + 3.0
+torsion    0100 0601 0600 0600 ?S?  0.274 + 3.0
+torsion    0100 0601 0600 0100 ?S?  0.274 + 3.0
+torsion    0601 0601 0600 0600 ?S?  0.126 - 3.0
+torsion    FFFF 0601 0600 0601 ?S?  0.126 + 3.0
+torsion    FFFF 0601 0600 0600 ?S?  0.126 + 3.0
+torsion    FFFF 0601 0600 0100 ?S?  0.274 + 3.0
+torsion    FFFF 0600 0600 0100 ?S?  0.320 + 3.0
+torsion    0601 0601 0600 FFFF ?S?  0.126 - 3.0
+torsion    0600 0601 0600 FFFF ?S?  0.126 + 3.0
+torsion    0100 0601 0600 FFFF ?S?  0.274 + 3.0
+torsion    FFFF 0602 0602 FFFF ?T?  0.000 + 1.0
+torsion    FFFF 0602 0602 FFFF ?S?  0.000 + 1.0
+torsion    FFFF 0602 0601 FFFF ?S?  0.000 + 1.0
+torsion    FFFF 0602 0601 FFFF ?D?  0.000 + 1.0
+torsion    FFFF 0601 0601 FFFF ?D? 12.500 - 2.0
+torsion    FFFF 0601 0601 FFFF ?S?  1.424 - 2.0
+torsion    FFFF 0602 0600 FFFF ?S?  0.000 + 1.0
+torsion    FFFF 0601 0600 FFFF ?S?  0.120 - 3.0
+torsion    FFFF 0600 0600 FFFF ?S?  0.200 + 3.0
+torsion    FFFF 0602 0603 FFFF ?S?  0.000 + 1.0
+torsion    FFFF 0601 0603 FFFF ?S?  1.600 - 2.0
+torsion    FFFF 0600 0603 FFFF ?S?  0.120 - 3.0
+torsion    FFFF 0603 0603 FFFF ?C?  2.000 - 2.0
+torsion    FFFF 0603 0603 FFFF ?S?  0.600 - 2.0
+torsion    FFFF 0602 0701 FFFF ?S?  0.000 + 1.0
+torsion    FFFF 0602 0701 FFFF ?D?  0.000 + 1.0
+torsion    FFFF 0601 0701 FFFF ?D? 12.000 - 2.0
+torsion    FFFF 0601 0701 FFFF ?S? 12.000 - 2.0
+torsion    FFFF 0600 0701 FFFF ?S?  0.400 - 3.0
+torsion    FFFF 0603 0701 FFFF ?S?  1.600 - 2.0
+torsion    FFFF 0701 0701 FFFF ?D?  1.600 - 2.0
+torsion    FFFF 0701 0701 FFFF ?S?  1.600 - 2.0
+torsion    FFFF 0601 0700 FFFF ?S?  0.120 - 3.0
+torsion    FFFF 0600 0700 FFFF ?S?  0.200 + 3.0
+torsion    FFFF 0603 0700 FFFF ?S?  0.120 - 3.0
+torsion    FFFF 0700 0700 FFFF ?S?  0.200 + 3.0
+torsion    FFFF 0601 0705 FFFF ?S?  6.460 - 2.0
+torsion    FFFF 0600 0705 FFFF ?S?  0.200 + 3.0
+torsion    FFFF 0603 0705 FFFF ?S?  1.600 - 2.0
+torsion    FFFF 0701 0705 FFFF ?S?  1.600 - 2.0
+torsion    FFFF 0700 0705 FFFF ?S?  0.120 - 3.0
+torsion    FFFF 0705 0705 FFFF ?S?  1.600 - 2.0
+torsion    FFFF 0603 0703 FFFF ?C?  1.600 - 2.0
+torsion    FFFF 0601 0800 FFFF ?S?  5.800 - 2.0
+torsion    FFFF 0600 0800 FFFF ?S?  1.200 + 3.0
+torsion    FFFF 0603 0800 FFFF ?S?  1.200 - 2.0
+torsion    FFFF 0701 0800 FFFF ?S?  1.000 + 2.0
+torsion    FFFF 0700 0800 FFFF ?S?  0.200 + 3.0
+torsion    FFFF 0601 0F00 FFFF ?S?  1.000 - 2.0
+torsion    FFFF 0600 0F00 FFFF ?S?  0.400 + 3.0
+torsion    FFFF 0603 0F00 FFFF ?S?  1.000 + 3.0
+torsion    FFFF 0800 0F00 FFFF ?S?  0.400 + 3.0
+torsion    FFFF 0601 1001 FFFF ?D?  1.000 - 2.0
+torsion    FFFF 0600 1001 FFFF ?S?  0.400 + 3.0
+torsion    FFFF 0603 1001 FFFF ?S?  1.000 + 3.0
+torsion    FFFF 0700 1001 FFFF ?S?  0.400 + 3.0
+torsion    FFFF 0601 1000 FFFF ?S?  1.000 - 2.0
+torsion    FFFF 0600 1000 FFFF ?S?  0.400 + 3.0
+torsion    FFFF 0603 1000 FFFF ?S?  1.000 + 3.0
+torsion    FFFF 1000 1000 FFFF ?S?  4.000 + 3.0
 
 // lenjon-parameters 09.05.2000 (based on Tripos 5.2 and MMFF94)
 // [id] [r] [k]
 //
-// [r] = �
+// [r] = Å
 // [k] = kcal/mol
 
-vdw	0100 1.50 0.042
-vdw	0600 1.70 0.107
-vdw	0601 1.70 0.107
-vdw	0602 1.70 0.107
-vdw	0603 1.70 0.107
-vdw	0604 1.70 0.107
-vdw	0605 1.70 0.107
-vdw	0700 1.55 0.095
-vdw	0701 1.55 0.095
-vdw	0702 1.55 0.095
-vdw	0703 1.55 0.095
-vdw	0704 1.55 0.095
-vdw	0705 1.55 0.095
-vdw	0800 1.52 0.116
-vdw	0801 1.52 0.116
-vdw	0900 1.47 0.109
-vdw	0F00 1.80 0.314
-vdw	1000 1.80 0.314
-vdw	1001 1.80 0.314
-vdw	1002 1.80 0.314
-vdw	1003 1.80 0.314
-vdw	1100 1.75 0.314
-vdw	2300 1.85 0.434
-vdw	3500 1.98 0.623
-vdw	FFFF 1.50 0.042
+vdw    0100 1.50 0.042
+vdw    0600 1.70 0.107
+vdw    0601 1.70 0.107
+vdw    0602 1.70 0.107
+vdw    0603 1.70 0.107
+vdw    0604 1.70 0.107
+vdw    0605 1.70 0.107
+vdw    0700 1.55 0.095
+vdw    0701 1.55 0.095
+vdw    0702 1.55 0.095
+vdw    0703 1.55 0.095
+vdw    0704 1.55 0.095
+vdw    0705 1.55 0.095
+vdw    0800 1.52 0.116
+vdw    0801 1.52 0.116
+vdw    0900 1.47 0.109
+vdw    0F00 1.80 0.314
+vdw    1000 1.80 0.314
+vdw    1001 1.80 0.314
+vdw    1002 1.80 0.314
+vdw    1003 1.80 0.314
+vdw    1100 1.75 0.314
+vdw    2300 1.85 0.434
+vdw    3500 1.98 0.623
+vdw    FFFF 1.50 0.042
 
 // atomic charge parameters 09.05.2000 (based on Tripos 5.2 and MMFF94)
 // [id #1] [id #2] [delta]
Index: inchi-src/inchi/INCHI_BASE/src/ichicomp.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_BASE/src/ichicomp.h b/inchi-src/inchi/INCHI_BASE/src/ichicomp.h
--- a/inchi-src/inchi/INCHI_BASE/src/ichicomp.h	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_BASE/src/ichicomp.h	(date 1693030077015)
@@ -54,9 +54,6 @@
 
 /*  ANSI redefinitions */
 #ifdef COMPILE_ANSI_ONLY  /* { */
-#ifndef __isascii
-#define __isascii(val)  ((unsigned)(val) <= 0x7F)
-#endif
 
 /* #ifndef __GNUC__ */
 /* these non-ANSI functions are implemented in gcc */
Index: pixman-src/pixman/pixman/pixman-version.h.in
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pixman-src/pixman/pixman/pixman-version.h.in b/pixman-src/pixman/pixman/pixman-version.h.in
--- a/pixman-src/pixman/pixman/pixman-version.h.in	(revision 37216a32839f59e8dcaa4c3951b3fcfc3f07852c)
+++ b/pixman-src/pixman/pixman/pixman-version.h.in	(date 1693030079424)
@@ -27,6 +27,7 @@
 #ifndef PIXMAN_VERSION_H__
 #define PIXMAN_VERSION_H__
 
+#include "pixman_export.h"
 #ifndef PIXMAN_H__
 #  error pixman-version.h should only be included by pixman.h
 #endif
@@ -48,7 +49,7 @@
 	PIXMAN_VERSION_MICRO)
 
 #ifndef PIXMAN_API
-# define PIXMAN_API
+# define PIXMAN_API PIXMAN_EXPORT
 #endif
 
 #endif /* PIXMAN_VERSION_H__ */
Index: inchi-src/inchi/INCHI_BASE/src/runichi.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_BASE/src/runichi.c b/inchi-src/inchi/INCHI_BASE/src/runichi.c
--- a/inchi-src/inchi/INCHI_BASE/src/runichi.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_BASE/src/runichi.c	(date 1693030077015)
@@ -3083,7 +3083,9 @@
         (i.e., delete a whole connected component(s) comprising original atoms)
         */
         int natnums = 0;
-        atnums = (int *)inchi_calloc(max_atoms, sizeof(int));
+        if (max_atoms > 0) {
+            atnums = (int *) inchi_calloc(max_atoms, sizeof(int));
+        }
         if (!atnums)
         {
             return _IS_ERROR;
Index: openbabel-src/openbabel/data/patty.rules
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/data/patty.rules b/openbabel-src/openbabel/data/patty.rules
--- a/openbabel-src/openbabel/data/patty.rules	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/data/patty.rules	(date 1693030078525)
@@ -133,7 +133,7 @@
 # diaminopyrimidine (ring Ns are POL)
 #
 #        *==*
-#       /    \  
+#       /    \
 #     :N      C--NH2            (aromatic)
 #      \\    #  
 #        C--N:
@@ -186,7 +186,7 @@
 [#8,#16,#34;D1]C=[#8,#16,#34]           ANI
 [#8,#16,#34]=C[#8,#16,#34;D1]           ANI
 #        *==*
-#       /    \  
+#       /    \
 #      *      C==O              (aromatic)
 #      \\    /
 #        C--C                   And 4 Cs away
Index: cairo-src/cairo/src/cairo.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cairo-src/cairo/src/cairo.h b/cairo-src/cairo/src/cairo.h
--- a/cairo-src/cairo/src/cairo.h	(revision c3b672634f0635af1ad0ffa8c15b34fc7c1035cf)
+++ b/cairo-src/cairo/src/cairo.h	(date 1693030076921)
@@ -38,6 +38,7 @@
 #ifndef CAIRO_H
 #define CAIRO_H
 
+#include "cairo_export.h"
 #include "cairo-version.h"
 #include "cairo-features.h"
 #include "cairo-deprecated.h"
@@ -51,11 +52,7 @@
 #endif
 
 #ifndef cairo_public
-# if defined (_MSC_VER) && ! defined (CAIRO_WIN32_STATIC_BUILD)
-#  define cairo_public __declspec(dllimport)
-# else
-#  define cairo_public
-# endif
+#define cairo_public CAIRO_EXPORT
 #endif
 
 CAIRO_BEGIN_DECLS
Index: inchi-src/inchi/INCHI_BASE/src/inchi_api.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_BASE/src/inchi_api.h b/inchi-src/inchi/INCHI_BASE/src/inchi_api.h
--- a/inchi-src/inchi/INCHI_BASE/src/inchi_api.h	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_BASE/src/inchi_api.h	(date 1693030077015)
@@ -681,23 +681,17 @@
  *************************************************/
 
 
-#if (defined( _WIN32 ) && defined( _MSC_VER ) && defined(BUILD_LINK_AS_DLL) )
-    /* Win32 & MS VC ++, compile and link as a DLL */
-#ifdef _USRDLL
-    /* InChI library dll */
-#define INCHI_API __declspec(dllexport)
-#define EXPIMP_TEMPLATE
-#define INCHI_DECL
-#else
-   /* calling the InChI dll program */
-#define INCHI_API __declspec(dllimport)
+#include "inchi_export.h"
+
+#ifdef _MSC_VER
 #define EXPIMP_TEMPLATE extern
-#define INCHI_DECL
-#endif
 #else
-    /* create a statically linked InChI library or link to an executable */
-#define INCHI_API
 #define EXPIMP_TEMPLATE
+#endif
+#ifndef INCHI_API
+#define INCHI_API INCHI_EXPORT
+#endif
+#ifndef INCHI_DECL
 #define INCHI_DECL
 #endif
 
Index: maeparser-src/maeparser/MaeParserConfig.hpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/maeparser-src/maeparser/MaeParserConfig.hpp b/maeparser-src/maeparser/MaeParserConfig.hpp
--- a/maeparser-src/maeparser/MaeParserConfig.hpp	(revision bfa41f087a92b72370893c9b36758487a18dc6a0)
+++ b/maeparser-src/maeparser/MaeParserConfig.hpp	(date 1693030077540)
@@ -1,21 +1,7 @@
 #pragma once
 
-#ifndef STATIC_MAEPARSER
-
-#ifdef WIN32
-#ifdef IN_MAEPARSER
-#define EXPORT_MAEPARSER __declspec(dllexport)
-#else
-#define EXPORT_MAEPARSER __declspec(dllimport)
-#endif // IN_MAEPARSER
+#include <maeparser_export.hpp>
 
-#else
-
-#define EXPORT_MAEPARSER __attribute__((visibility("default")))
-#endif // WIN32
-
-#else
-
-#define EXPORT_MAEPARSER
-
-#endif // STATIC_MAEPARSER
+#ifndef EXPORT_MAEPARSER
+#define EXPORT_MAEPARSER MAEPARSER_EXPORT
+#endif
Index: inchi-src/inchi/INCHI_BASE/src/util.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_BASE/src/util.c b/inchi-src/inchi/INCHI_BASE/src/util.c
--- a/inchi-src/inchi/INCHI_BASE/src/util.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_BASE/src/util.c	(date 1693030077030)
@@ -38,10 +38,6 @@
 
 #include "mode.h"
 
-#if defined(COMPILE_ANSI_ONLY) && defined(__APPLE__)
-/*    For build under OSX, advice from Burt Leland */
-#include "ichicomp.h"    /* Needed for __isascii define */
-#endif
 
 #include "util.h"
 #include "extr_ct.h"
@@ -1741,13 +1737,13 @@
 
     if (p && ( len = (int) strlen( p ) ))
     {
-        for (i = 0; i < len && __isascii( p[i] ) && isspace( p[i] ); i++)
+        for (i = 0; i < len && isascii( p[i] ) && isspace( p[i] ); i++)
         {
             ;
         }
         if (i)
             (memmove) ( p, p + i, ( len -= i ) + 1 );
-        for (; 0 < len && __isascii( p[len - 1] ) && isspace( p[len - 1] ); len--)
+        for (; 0 < len && isascii( p[len - 1] ) && isspace( p[len - 1] ); len--)
         {
             ;
         }
Index: fluentui-src/fluentui/src/Qt6/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fluentui-src/fluentui/src/Qt6/CMakeLists.txt b/fluentui-src/fluentui/src/Qt6/CMakeLists.txt
new file mode 100644
--- /dev/null	(date 1693031269355)
+++ b/fluentui-src/fluentui/src/Qt6/CMakeLists.txt	(date 1693031269355)
@@ -0,0 +1,59 @@
+project(fluentui)
+
+# fluentui
+set(ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})
+set(INC_DIR ${ROOT_DIR}/../)
+set(SRC_DIR ${ROOT_DIR}/../)
+
+file(GLOB_RECURSE QML_PATHS ${ROOT_DIR}/*.qml)
+foreach (filepath ${QML_PATHS})
+    string(REPLACE "${ROOT_DIR}/" "" filename ${filepath})
+    list(APPEND qml_files ${filename})
+endforeach (filepath)
+
+file(GLOB_RECURSE RES_PATHS
+        ${ROOT_DIR}/*.png ${ROOT_DIR}/*.jpg
+        ${ROOT_DIR}/*.svg ${ROOT_DIR}/*.ico
+        ${ROOT_DIR}/*.ttf ${ROOT_DIR}/*.webp
+        ${ROOT_DIR}/*.js)
+foreach (filepath ${RES_PATHS})
+    string(REPLACE "${ROOT_DIR}/" "" filename ${filepath})
+    list(APPEND resource_files ${filename})
+endforeach (filepath)
+
+foreach (filepath IN LISTS qml_files resource_files)
+    string(REPLACE "imports/FluentUI/" "" filename ${filepath})
+    set_source_files_properties(${filepath} PROPERTIES QT_RESOURCE_ALIAS ${filename})
+endforeach ()
+
+if (CMAKE_RUNTIME_OUTPUT_DIRECTORY)
+    set(OUTPUT_DIRECTORY "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/FluentUI")
+else ()
+    set(OUTPUT_DIRECTORY FluentUI)
+endif ()
+
+#set(CMAKE_AUTOMOC ON)
+#set(CMAKE_AUTORCC ON)
+
+xgd_add_library(${PROJECT_NAME} PRIVATE_INCLUDE_DIRS ${INC_DIR})
+xgd_link_libraries(${PROJECT_NAME} PRIVATE ZXing)
+xgd_link_qt(${PROJECT_NAME} PRIVATE Quick)
+
+aux_source_directory(${SRC_DIR} source_files)
+list(REMOVE_ITEM source_files "${SRC_DIR}/fluentuiplugin.cpp")
+
+# create target ${PROJECT_NAME}plugin
+qt_add_qml_module(${PROJECT_NAME}
+        PLUGIN_TARGET ""
+        OUTPUT_DIRECTORY "${OUTPUT_DIRECTORY}"
+        VERSION 1.0
+        URI FluentUI
+        TYPEINFO "plugins.qmltypes"
+        SOURCES ${source_files}
+        QML_FILES ${qml_files}
+        RESOURCES ${resource_files}
+        RESOURCE_PREFIX "/")
+
+if(NOT BUILD_SHARED_LIBS)
+    target_compile_definitions(fluentui PRIVATE FLUENTUI_BUILD_STATIC_LIB)
+endif()
Index: rdkit-src/rdkit/Code/RDGeneral/RDLog.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/RDGeneral/RDLog.cpp b/rdkit-src/rdkit/Code/RDGeneral/RDLog.cpp
--- a/rdkit-src/rdkit/Code/RDGeneral/RDLog.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/RDGeneral/RDLog.cpp	(date 1693030079737)
@@ -25,9 +25,7 @@
 namespace RDLog {
 
 namespace {
-const std::vector<RDLogger *> allLogs = {&rdAppLog,     &rdDebugLog,
-                                         &rdInfoLog,    &rdErrorLog,
-                                         &rdWarningLog, &rdStatusLog};
+std::vector<RDLogger *> allLogs;
 }
 
 LogStateSetter::LogStateSetter() {
@@ -147,13 +145,18 @@
   rdInfoLog->df_enabled = false;
   rdWarningLog = std::make_shared<boost::logging::rdLogger>(&std::cerr);
   rdErrorLog = std::make_shared<boost::logging::rdLogger>(&std::cerr);
+  rdAppLog = rdInfoLog;
+  rdStatusLog = rdInfoLog;
+  allLogs = {&rdAppLog,     &rdDebugLog,
+             &rdInfoLog,    &rdErrorLog,
+             &rdWarningLog, &rdStatusLog};
 }
 
 std::ostream &toStream(std::ostream &logstrm) {
   char buffer[16];
   time_t t = time(nullptr);
 // localtime() is thread safe on windows, but not on *nix
-#ifdef WIN32
+#if defined(WIN32) || defined(__MINGW32__)
   strftime(buffer, 16, "[%T] ", localtime(&t));
 #else
   struct tm buf;
Index: openssl-src/openssl/opensslconf.h.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openssl-src/openssl/opensslconf.h.cmake b/openssl-src/openssl/opensslconf.h.cmake
new file mode 100644
--- /dev/null	(date 1693030079424)
+++ b/openssl-src/openssl/opensslconf.h.cmake	(date 1693030079424)
@@ -0,0 +1,203 @@
+/*
+ * Copyright 2016-2020 The OpenSSL Project Authors. All Rights Reserved.
+ *
+ * Licensed under the OpenSSL license (the "License").  You may not use
+ * this file except in compliance with the License.  You can obtain a copy
+ * in the file LICENSE in the source distribution or at
+ * https://www.openssl.org/source/license.html
+ */
+
+#include <openssl/opensslv.h>
+
+#ifdef  __cplusplus
+extern "C" {
+#endif
+
+#ifdef OPENSSL_ALGORITHM_DEFINES
+# error OPENSSL_ALGORITHM_DEFINES no longer supported
+#endif
+
+/*
+ * OpenSSL was configured with the following options:
+ */
+
+#ifndef OPENSSL_NO_MD2
+# define OPENSSL_NO_MD2
+#endif
+#ifndef OPENSSL_NO_RC5
+# define OPENSSL_NO_RC5
+#endif
+#ifndef OPENSSL_THREADS
+# define OPENSSL_THREADS
+#endif
+#ifndef OPENSSL_RAND_SEED_OS
+# define OPENSSL_RAND_SEED_OS
+#endif
+#ifndef OPENSSL_NO_ASAN
+# define OPENSSL_NO_ASAN
+#endif
+#ifndef OPENSSL_NO_ASM
+# define OPENSSL_NO_ASM
+#endif
+#ifndef OPENSSL_NO_CRYPTO_MDEBUG
+# define OPENSSL_NO_CRYPTO_MDEBUG
+#endif
+#ifndef OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE
+# define OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE
+#endif
+#ifndef OPENSSL_NO_DEVCRYPTOENG
+# define OPENSSL_NO_DEVCRYPTOENG
+#endif
+#ifndef OPENSSL_NO_EC_NISTP_64_GCC_128
+# define OPENSSL_NO_EC_NISTP_64_GCC_128
+#endif
+#ifndef OPENSSL_NO_EGD
+# define OPENSSL_NO_EGD
+#endif
+#ifndef OPENSSL_NO_EXTERNAL_TESTS
+# define OPENSSL_NO_EXTERNAL_TESTS
+#endif
+#ifndef OPENSSL_NO_FUZZ_AFL
+# define OPENSSL_NO_FUZZ_AFL
+#endif
+#ifndef OPENSSL_NO_FUZZ_LIBFUZZER
+# define OPENSSL_NO_FUZZ_LIBFUZZER
+#endif
+#ifndef OPENSSL_NO_HEARTBEATS
+# define OPENSSL_NO_HEARTBEATS
+#endif
+#ifndef OPENSSL_NO_MSAN
+# define OPENSSL_NO_MSAN
+#endif
+#ifndef OPENSSL_NO_SCTP
+# define OPENSSL_NO_SCTP
+#endif
+#ifndef OPENSSL_NO_SSL_TRACE
+# define OPENSSL_NO_SSL_TRACE
+#endif
+#ifndef OPENSSL_NO_SSL3
+# define OPENSSL_NO_SSL3
+#endif
+#ifndef OPENSSL_NO_SSL3_METHOD
+# define OPENSSL_NO_SSL3_METHOD
+#endif
+#ifndef OPENSSL_NO_UBSAN
+# define OPENSSL_NO_UBSAN
+#endif
+#ifndef OPENSSL_NO_UNIT_TEST
+# define OPENSSL_NO_UNIT_TEST
+#endif
+#ifndef OPENSSL_NO_WEAK_SSL_CIPHERS
+# define OPENSSL_NO_WEAK_SSL_CIPHERS
+#endif
+#ifndef OPENSSL_NO_STATIC_ENGINE
+# define OPENSSL_NO_STATIC_ENGINE
+#endif
+#ifndef OPENSSL_NO_AFALGENG
+# define OPENSSL_NO_AFALGENG
+#endif
+
+/*
+ * Sometimes OPENSSSL_NO_xxx ends up with an empty file and some compilers
+ * don't like that.  This will hopefully silence them.
+ */
+#define NON_EMPTY_TRANSLATION_UNIT static void *dummy = &dummy;
+
+/*
+ * Applications should use -DOPENSSL_API_COMPAT=<version> to suppress the
+ * declarations of functions deprecated in or before <version>. Otherwise, they
+ * still won't see them if the library has been built to disable deprecated
+ * functions.
+ */
+#ifndef DECLARE_DEPRECATED
+# define DECLARE_DEPRECATED(f)   f;
+# ifdef __GNUC__
+#  if __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ > 0)
+#   undef DECLARE_DEPRECATED
+#   define DECLARE_DEPRECATED(f)    f __attribute__ ((deprecated));
+#  endif
+# elif defined(__SUNPRO_C)
+#  if (__SUNPRO_C >= 0x5130)
+#   undef DECLARE_DEPRECATED
+#   define DECLARE_DEPRECATED(f)    f __attribute__ ((deprecated));
+#  endif
+# endif
+#endif
+
+#ifndef OPENSSL_FILE
+# ifdef OPENSSL_NO_FILENAMES
+#  define OPENSSL_FILE ""
+#  define OPENSSL_LINE 0
+# else
+#  define OPENSSL_FILE __FILE__
+#  define OPENSSL_LINE __LINE__
+# endif
+#endif
+
+#ifndef OPENSSL_MIN_API
+# define OPENSSL_MIN_API 0
+#endif
+
+#if !defined(OPENSSL_API_COMPAT) || OPENSSL_API_COMPAT < OPENSSL_MIN_API
+# undef OPENSSL_API_COMPAT
+# define OPENSSL_API_COMPAT OPENSSL_MIN_API
+#endif
+
+/*
+ * Do not deprecate things to be deprecated in version 1.2.0 before the
+ * OpenSSL version number matches.
+ */
+#if OPENSSL_VERSION_NUMBER < 0x10200000L
+# define DEPRECATEDIN_1_2_0(f)   f;
+#elif OPENSSL_API_COMPAT < 0x10200000L
+# define DEPRECATEDIN_1_2_0(f)   DECLARE_DEPRECATED(f)
+#else
+# define DEPRECATEDIN_1_2_0(f)
+#endif
+
+#if OPENSSL_API_COMPAT < 0x10100000L
+# define DEPRECATEDIN_1_1_0(f)   DECLARE_DEPRECATED(f)
+#else
+# define DEPRECATEDIN_1_1_0(f)
+#endif
+
+#if OPENSSL_API_COMPAT < 0x10000000L
+# define DEPRECATEDIN_1_0_0(f)   DECLARE_DEPRECATED(f)
+#else
+# define DEPRECATEDIN_1_0_0(f)
+#endif
+
+#if OPENSSL_API_COMPAT < 0x00908000L
+# define DEPRECATEDIN_0_9_8(f)   DECLARE_DEPRECATED(f)
+#else
+# define DEPRECATEDIN_0_9_8(f)
+#endif
+
+/* Generate 80386 code? */
+#undef I386_ONLY
+
+#undef OPENSSL_UNISTD
+#define OPENSSL_UNISTD <unistd.h>
+
+#undef OPENSSL_EXPORT_VAR_AS_FUNCTION
+#cmakedefine OPENSSL_EXPORT_VAR_AS_FUNCTION
+
+/*
+ * The following are cipher-specific, but are part of the public API.
+ */
+#if !defined(OPENSSL_SYS_UEFI)
+#undef BN_LLONG
+/* Only one for the following should be defined */
+#undef SIXTY_FOUR_BIT_LONG
+#cmakedefine SIXTY_FOUR_BIT_LONG
+#undef SIXTY_FOUR_BIT
+#cmakedefine SIXTY_FOUR_BIT
+#undef THIRTY_TWO_BIT
+#cmakedefine THIRTY_TWO_BIT
+#endif
+
+#define RC4_INT unsigned int
+
+#ifdef  __cplusplus
+}
+#endif
Index: rdkit-src/rdkit/External/GA/ga/GaBase.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/External/GA/ga/GaBase.cpp b/rdkit-src/rdkit/External/GA/ga/GaBase.cpp
new file mode 100644
--- /dev/null	(date 1693030079752)
+++ b/rdkit-src/rdkit/External/GA/ga/GaBase.cpp	(date 1693030079752)
@@ -0,0 +1,9 @@
+#include "GaBase.h"
+
+using namespace GapeGa;
+
+GaBase::GaBase() {
+};
+
+GaBase::~GaBase() {
+};
Index: openssl-src/openssl/crypto/buildinf.h.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openssl-src/openssl/crypto/buildinf.h.cmake b/openssl-src/openssl/crypto/buildinf.h.cmake
new file mode 100644
--- /dev/null	(date 1693030079408)
+++ b/openssl-src/openssl/crypto/buildinf.h.cmake	(date 1693030079408)
@@ -0,0 +1,6 @@
+/* auto-generated for crypto/cversion.c */
+#define CFLAGS "compiler: @CMAKE_C_COMPILER_ID@ @CMAKE_C_FLAGS@"
+#define PLATFORM "platform: @CMAKE_SYSTEM_NAME@"
+#define DATE "built on: @BUILDINF_DATE@"
+static const char *compiler_flags = CFLAGS;
+
Index: openssl-src/openssl/crypto/dso_conf.h.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openssl-src/openssl/crypto/dso_conf.h.cmake b/openssl-src/openssl/crypto/dso_conf.h.cmake
new file mode 100644
--- /dev/null	(date 1693030079408)
+++ b/openssl-src/openssl/crypto/dso_conf.h.cmake	(date 1693030079408)
@@ -0,0 +1,17 @@
+/*
+ * Copyright 2016-2019 The OpenSSL Project Authors. All Rights Reserved.
+ *
+ * Licensed under the OpenSSL license (the "License").  You may not use
+ * this file except in compliance with the License.  You can obtain a copy
+ * in the file LICENSE in the source distribution or at
+ * https://www.openssl.org/source/license.html
+ */
+
+#ifndef OSSL_CRYPTO_DSO_CONF_H
+# define OSSL_CRYPTO_DSO_CONF_H
+# define DSO_EXTENSION "@DSO_EXTENSION@"
+#cmakedefine DSO_NONE
+#cmakedefine DSO_WIN32
+#cmakedefine DSO_DLFCN
+#cmakedefine HAVE_DLFCN_H
+#endif
Index: inchi-src/inchi/INCHI_BASE/src/ichicano.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inchi-src/inchi/INCHI_BASE/src/ichicano.c b/inchi-src/inchi/INCHI_BASE/src/ichicano.c
--- a/inchi-src/inchi/INCHI_BASE/src/ichicano.c	(revision 0fc7adc58d4ff1c481b26e0de53cc8a404c3d381)
+++ b/inchi-src/inchi/INCHI_BASE/src/ichicano.c	(date 1693030077015)
@@ -37,7 +37,6 @@
 #include <string.h>
 #include <ctype.h>
 #include <time.h>
-#include <sys/timeb.h>
 
 #include "mode.h"
 #include "ichicano.h"
Index: openssl-src/openssl/crypto/bn_conf.h.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openssl-src/openssl/crypto/bn_conf.h.cmake b/openssl-src/openssl/crypto/bn_conf.h.cmake
new file mode 100644
--- /dev/null	(date 1693030079393)
+++ b/openssl-src/openssl/crypto/bn_conf.h.cmake	(date 1693030079393)
@@ -0,0 +1,26 @@
+/*
+ * Copyright 2016 The OpenSSL Project Authors. All Rights Reserved.
+ *
+ * Licensed under the OpenSSL license (the "License").  You may not use
+ * this file except in compliance with the License.  You can obtain a copy
+ * in the file LICENSE in the source distribution or at
+ * https://www.openssl.org/source/license.html
+ */
+
+#ifndef OSSL_CRYPTO_BN_CONF_H
+# define OSSL_CRYPTO_BN_CONF_H
+
+/*
+ * The contents of this file are not used in the UEFI build, as
+ * both 32-bit and 64-bit builds are supported from a single run
+ * of the Configure script.
+ */
+
+/* Should we define BN_DIV2W here? */
+
+/* Only one for the following should be defined */
+#cmakedefine SIXTY_FOUR_BIT_LONG
+#cmakedefine SIXTY_FOUR_BIT
+#cmakedefine THIRTY_TWO_BIT
+
+#endif
Index: openbabel-src/openbabel/data/gaff.prm
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/data/gaff.prm b/openbabel-src/openbabel/data/gaff.prm
--- a/openbabel-src/openbabel/data/gaff.prm	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/data/gaff.prm	(date 1693030078509)
@@ -91,7 +91,7 @@
 atom [#6X3;R](=*)-*=*   						    ca "sp2 C in aromatic ring"
 atom [#6X3;R](=[#6X3])([#6])[#1]					    ca "sp2 C in aromatic ring"	
 atom [#6X3;R](=[#6])([#6])[F,Cl,Br,I]   				    c2 "sp2 C in a ring with 1 electron-withdrawal group"
-atom [#6X3;R](=[#6X3])([#6X4])[#6]					    c2 "sp2 C in a ring"		
+atom [#6X3;R](=[#6X3])([#6X4])[#6]					    c2 "sp2 C in a ring"
 atom [#6X3;R](=*)-*#*   						    cc "sp2 C in a conjugated ring"
 atom [#6X3;R](#*)-*#*   						    cc "sp2 C in a conjugated ring"
 atom [#6X3;R]:[#7,#8,#16]     	     	      				    cc "sp2 C in a ring with 1 electron-withdrawal group"
Index: openbabel-src/openbabel/include/openbabel/typer.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/include/openbabel/typer.h b/openbabel-src/openbabel/include/openbabel/typer.h
--- a/openbabel-src/openbabel/include/openbabel/typer.h	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/include/openbabel/typer.h	(date 1693030078686)
@@ -67,7 +67,7 @@
 #endif
 //! Global OBAtomTyper for marking internal valence, hybridization,
 //!  and atom types (for internal and external use)
-THREAD_LOCAL OB_EXTERN OBAtomTyper      atomtyper;
+THREAD_LOCAL extern OBAtomTyper      atomtyper;
 
 // class introduction in typer.cpp
 class OBAPI OBAromaticTyper
@@ -81,7 +81,7 @@
 };
 
 //! Global OBAromaticTyper for detecting aromatic atoms and bonds
-THREAD_LOCAL OB_EXTERN OBAromaticTyper  aromtyper;
+THREAD_LOCAL extern OBAromaticTyper  aromtyper;
 
 // class introduction in typer.cpp
 class OBAPI OBRingTyper : public OBGlobalDataBase
Index: openbabel-src/openbabel/include/openbabel/plugin.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/include/openbabel/plugin.h b/openbabel-src/openbabel/include/openbabel/plugin.h
--- a/openbabel-src/openbabel/include/openbabel/plugin.h	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/include/openbabel/plugin.h	(date 1693030078670)
@@ -20,7 +20,6 @@
 #define OB_PLUGIN_H
 
 #include <openbabel/babelconfig.h>
-#include <openbabel/dlhandler.h>
 #include <string>
 #include <iostream>
 #include <vector>
@@ -38,7 +37,7 @@
 ///@{
 
 /// @brief Case insensitive string comparison for PluginMapType key.
-struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>
+struct OBERROR CharPtrLess
 {
   bool operator()(const char* p1,const char* p2) const
   { return strcasecmp(p1,p2)<0; }
@@ -150,53 +149,13 @@
   const char* _id;
 };
 
-#if defined(__CYGWIN__) || defined(__MINGW32__)
-
 //Macro to be added to definition of the base class
 #define MAKE_PLUGIN(BaseClass)\
-protected:\
-  static PluginMapType& Map();\
-  virtual PluginMapType& GetMap() const {\
-    return Map();\
-  }\
-public:\
-  static BaseClass*& Default() {\
-    static BaseClass* d;\
-    return d;\
-  }\
-  BaseClass(const char* ID, bool IsDefault=false) {\
-    _id=ID;\
-    if (ID&&*ID) {\
-      if (IsDefault || Map().empty()) {\
-        Default() = this;\
-      }\
-      if (Map().count(ID) == 0) {\
-        Map()[ID] = this;\
-        PluginMap()[TypeID()] = this;\
-      }\
-    }\
-  }\
-  static BaseClass* FindType(const char* ID) {\
-    if (!ID || *ID==0 || *ID==' ') {\
-      return Default();\
-    }\
-    return static_cast<BaseClass*>(BaseFindType(Map(),ID));\
-  }
-
-#define PLUGIN_CPP_FILE(BaseClass)\
-OBPlugin::PluginMapType& BaseClass::Map() {\
-  static OBPlugin::PluginMapType map;\
-  return map;\
-}
-
-#else // __CYGWIN__ || __MINGW32__
-
-//Macro to be added to definition of the base class
-#define MAKE_PLUGIN(BaseClass)\
+private:\
+   inline static PluginMapType mPluginMapHolder;\
 protected:\
   static PluginMapType& Map() {\
-    static PluginMapType m;\
-    return m;\
+    return mPluginMapHolder;\
   }\
   virtual PluginMapType& GetMap() const {\
     return Map();\
@@ -223,9 +182,8 @@
       return Default();\
     }\
     return static_cast<BaseClass*>(BaseFindType(Map(),ID));\
-  }
-
-#endif // __CYGWIN__ || __MINGW32__
+  }\
+  private:
 
 /** \file plugin.h
    \brief Simplify 'plugin' classes to be discovered and/or loaded at runtime.
@@ -371,7 +329,7 @@
 
 #define OB_STATIC_PLUGIN(className,instanceName) \
   class className; \
-  OBAPI OB_EXTERN className instanceName;
+  OB_EXTERN className instanceName;
 
   // formats
   OB_STATIC_PLUGIN(ABINITFormat, theABINITFormat)
@@ -430,6 +388,8 @@
   OB_STATIC_PLUGIN(HINFormat, theHINFormat)
   OB_STATIC_PLUGIN(JaguarOutputFormat, theJaguarOutputFormat)
   OB_STATIC_PLUGIN(JaguarInputFormat, theJaguarInputFormat)
+  OB_STATIC_PLUGIN(ChemDoodleJSONFormat, theChemDoodleJSONFormat)
+  OB_STATIC_PLUGIN(PubChemJSONFormat, thePubChemJSONFormat)
   OB_STATIC_PLUGIN(LMPDATFormat, theLMPDATFormat)
   OB_STATIC_PLUGIN(MCDLFormat, theMCDLFormat)
   OB_STATIC_PLUGIN(MOLFormat, theMOLFormat)
@@ -463,6 +423,7 @@
   OB_STATIC_PLUGIN(PDBQTFormat, thePDBQTFormat)
 #ifdef HAVE_LIBZ
   OB_STATIC_PLUGIN(PNGFormat, thePNGFormat)
+  OB_STATIC_PLUGIN(PNG2Format, thePNG2Format)
 #endif
   OB_STATIC_PLUGIN(PointCloudFormat, thePointCloudFormat)
   OB_STATIC_PLUGIN(PovrayFormat, thePovrayFormat)
@@ -502,6 +463,8 @@
 #endif
 #ifdef HAVE_STATIC_INCHI
   OB_STATIC_PLUGIN(InChIFormat, theInChIFormat)
+  OB_STATIC_PLUGIN(InChICompareFormat, theInChICompareFormat)
+  OB_STATIC_PLUGIN(InChIKeyFormat, theInChIKeyFormat)
 #endif
 #ifdef HAVE_REGEX_H
   OB_STATIC_PLUGIN(GAMESSUKInputFormat, theGAMESSUKInputFormat)
@@ -560,6 +523,7 @@
   OB_STATIC_PLUGIN(OpFillUC, theOpFillUC)
   OB_STATIC_PLUGIN(OpEnergy, theOpEnergy)
   OB_STATIC_PLUGIN(OpMinimize, theOpMinimize)
+  OB_STATIC_PLUGIN(Op2D, theOp2D)
   OB_STATIC_PLUGIN(OpGen2D, theOpGen2D)
   OB_STATIC_PLUGIN(OpGen3D, theOpGen3D)
   OB_STATIC_PLUGIN(OpNewS, theOpNewS)
Index: openbabel-src/openbabel/include/openbabel/inchiformat.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/include/openbabel/inchiformat.h b/openbabel-src/openbabel/include/openbabel/inchiformat.h
--- a/openbabel-src/openbabel/include/openbabel/inchiformat.h	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/include/openbabel/inchiformat.h	(date 1693030078655)
@@ -131,7 +131,6 @@
   // and "CH4" is less than "C2H6"
   // and "CH4" is less than "ClH" (hydrogen chloride)
   struct InchiLess
-    : public std::binary_function<const std::string&, const std::string&, bool>
   {
     bool operator()(const std::string& s1, const std::string& s2) const
     {
@@ -146,12 +145,14 @@
           {
             n1 = atoi(&*p1);
             //skip over number
-            while(p1!=s1.end() && isdigit(*p1++)); --p1;
+            while(p1!=s1.end() && isdigit(*p1++)) {}
+            --p1;
           }
         if(isdigit(*p2))
           {
             n2 = atoi(&*p2);
-            while(p2!=s2.end() && isdigit(*p2++)); --p2;
+            while(p2!=s2.end() && isdigit(*p2++)) {}
+            --p2;
           }
         if(n1<0 && n2 < 0)
           {
Index: openbabel-src/openbabel/include/openbabel/obmolecformat.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/include/openbabel/obmolecformat.h b/openbabel-src/openbabel/include/openbabel/obmolecformat.h
--- a/openbabel-src/openbabel/include/openbabel/obmolecformat.h	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/include/openbabel/obmolecformat.h	(date 1693030078655)
@@ -142,7 +142,7 @@
 #endif
 
 #ifdef _MSC_VER
-  typedef std::tr1::unordered_map<std::string, unsigned> NameIndexType;
+  typedef std::unordered_map<std::string, unsigned> NameIndexType;
 #elif defined(_LIBCPP_VERSION)
   typedef std::unordered_map<std::string, unsigned> NameIndexType;
 #elif (__GNUC__ == 4 && __GNUC_MINOR__ >= 1 && !defined(__APPLE_CC__)) || defined (USE_BOOST)
Index: rdkit-src/rdkit/External/GA/ga/GaBase.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/External/GA/ga/GaBase.h b/rdkit-src/rdkit/External/GA/ga/GaBase.h
--- a/rdkit-src/rdkit/External/GA/ga/GaBase.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/External/GA/ga/GaBase.h	(date 1693030079752)
@@ -34,8 +34,8 @@
   GaBase& operator=(const GaBase& other) = delete;
 
  public:
-  GaBase(){};
-  virtual ~GaBase(){};
+  GaBase();
+  virtual ~GaBase();
 
   double getSelectionPressure() const { return selectionPressure; }
 
Index: rdkit-src/rdkit/Code/ForceField/UFF/Params.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/ForceField/UFF/Params.cpp b/rdkit-src/rdkit/Code/ForceField/UFF/Params.cpp
--- a/rdkit-src/rdkit/Code/ForceField/UFF/Params.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/ForceField/UFF/Params.cpp	(date 1693030079486)
@@ -7,7 +7,7 @@
 //  which is included in the file license.txt, found at the root
 //  of the RDKit source tree.
 //
-#ifdef WIN32
+#if defined(WIN32) && !defined(_USE_MATH_DEFINES)
 #define _USE_MATH_DEFINES
 #endif
 #include <cmath>
Index: protobuf-src/protobuf/third_party/utf8_range/range2-sse.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/protobuf-src/protobuf/third_party/utf8_range/range2-sse.c b/protobuf-src/protobuf/third_party/utf8_range/range2-sse.c
--- a/protobuf-src/protobuf/third_party/utf8_range/range2-sse.c	(revision 4dd15db6eb3955745f379d28fb4a2fcfb6753de3)
+++ b/protobuf-src/protobuf/third_party/utf8_range/range2-sse.c	(date 1693030079440)
@@ -6,7 +6,7 @@
 
 #include <stdio.h>
 #include <stdint.h>
-#include <x86intrin.h>
+#include <smmintrin.h>
 
 int utf8_naive(const unsigned char *data, int len);
 
Index: boost-src/boost/libs/stacktrace/src/noop.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boost-src/boost/libs/stacktrace/src/noop.cpp b/boost-src/boost/libs/stacktrace/src/noop.cpp
--- a/boost-src/boost/libs/stacktrace/src/noop.cpp	(revision 95065ca63883c0b1d6754bdb7bb106058c7532cb)
+++ b/boost-src/boost/libs/stacktrace/src/noop.cpp	(date 1693030076905)
@@ -6,6 +6,8 @@
 
 #define BOOST_STACKTRACE_INTERNAL_BUILD_LIBS
 #define BOOST_STACKTRACE_LINK
+#ifndef BOOST_STACKTRACE_USE_NOOP
 #define BOOST_STACKTRACE_USE_NOOP
+#endif
 #include <boost/stacktrace/detail/frame_noop.ipp>
 #include <boost/stacktrace/detail/safe_dump_noop.ipp>
Index: rdkit-src/rdkit/External/GA/util/export.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/External/GA/util/export.h b/rdkit-src/rdkit/External/GA/util/export.h
--- a/rdkit-src/rdkit/External/GA/util/export.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/External/GA/util/export.h	(date 1693030079752)
@@ -10,6 +10,6 @@
 
 #pragma once
 
-#include <RDGeneral/RDExportMacros.h>
+#include <RDGeneral/export.h>
 
-#define GA_EXPORT RDKIT_EXPORT_API
+#define GA_EXPORT RDKIT_GA_EXPORT
Index: rdkit-src/rdkit/External/GA/util/Util.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/External/GA/util/Util.cpp b/rdkit-src/rdkit/External/GA/util/Util.cpp
--- a/rdkit-src/rdkit/External/GA/util/Util.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/External/GA/util/Util.cpp	(date 1693030079752)
@@ -40,18 +40,7 @@
 }
 
 string getUserName() {
-#ifdef WIN32
-  return "UNKNOWN";
-#else
-  const int bufsize = 100;
-  char buffer[bufsize];
-
-  if (!getlogin_r(buffer, bufsize)) {
-    return string(buffer);
-  } else {
-    return string("");
-  }
-#endif
+    return "UNKNOWN";
 }
 
 string &removeTrailingLF(string &line) {
Index: openbabel-src/openbabel/include/openbabel/obutil.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/include/openbabel/obutil.h b/openbabel-src/openbabel/include/openbabel/obutil.h
--- a/openbabel-src/openbabel/include/openbabel/obutil.h	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/include/openbabel/obutil.h	(date 1693030078655)
@@ -24,6 +24,7 @@
 
 #include <string>
 #include <iosfwd>
+#include <fstream>
 
 #if TIME_WITH_SYS_TIME
 #include <sys/time.h>
Index: openbabel-src/openbabel/include/openbabel/tokenst.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/include/openbabel/tokenst.h b/openbabel-src/openbabel/include/openbabel/tokenst.h
--- a/openbabel-src/openbabel/include/openbabel/tokenst.h	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/include/openbabel/tokenst.h	(date 1693030078670)
@@ -25,7 +25,6 @@
 #include <vector>
 #include <sstream>
 #include <string>
-#include <fstream>
 
 namespace OpenBabel
 {
@@ -56,7 +55,7 @@
 
   //! Opens a datafile in a directory where OpenBabel expects to find it.
   // full documentation in tokenst.cpp
-  OBERROR std::string OpenDatafile(std::ifstream& fs,
+  OBERROR std::string OpenDatafile(std::istringstream& iss,
                                  const std::string& filename,
                                  const std::string& envvar = "BABEL_DATADIR");
 
Index: indigo-src/indigo/api/c/indigo/src/indigo_io.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_io.h b/indigo-src/indigo/api/c/indigo/src/indigo_io.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_io.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_io.h	(date 1693030077077)
@@ -27,7 +27,7 @@
 #pragma warning(disable : 4251)
 #endif
 
-class DLLEXPORT IndigoScanner : public IndigoObject
+class INDIGO_EXPORT IndigoScanner : public IndigoObject
 {
 public:
     IndigoScanner(Scanner* scanner);
@@ -44,7 +44,7 @@
     Array<char> _buf;
 };
 
-class DLLEXPORT IndigoOutput : public IndigoObject
+class INDIGO_EXPORT IndigoOutput : public IndigoObject
 {
 public:
     IndigoOutput();
Index: indigo-src/indigo/api/c/indigo/src/indigo_product_enumerator.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_product_enumerator.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_product_enumerator.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_product_enumerator.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_product_enumerator.cpp	(date 1693030077108)
@@ -66,7 +66,7 @@
     indices.copy(monomers_indices);
 }
 
-CEXPORT int indigoReactionProductEnumerate(int reaction, int monomers)
+int indigoReactionProductEnumerate(int reaction, int monomers)
 {
     INDIGO_BEGIN
     {
@@ -155,7 +155,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoTransform(int reaction, int monomers)
+int indigoTransform(int reaction, int monomers)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/option_manager.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/option_manager.h b/indigo-src/indigo/api/c/indigo/src/option_manager.h
--- a/indigo-src/indigo/api/c/indigo/src/option_manager.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/option_manager.h	(date 1693030077140)
@@ -21,12 +21,13 @@
 
 #include "base_cpp/os_sync_wrapper.h"
 #include "base_cpp/red_black.h"
+#include "indigo.h"
 
 #include <sstream>
 
 using namespace indigo;
 
-#define DECL_SET_OPT_HANDLER(suffix, ftype, type, map) DLLEXPORT void setOptionHandler##suffix(const char* name, ftype func);
+#define DECL_SET_OPT_HANDLER(suffix, ftype, type, map) INDIGO_EXPORT void setOptionHandler##suffix(const char* name, ftype func);
 
 #define DEF_HANDLER(suffix, ftype, type, map)                                                                                                                  \
     void setOptionHandler##suffix(const char* name, ftype func)                                                                                                \
@@ -84,7 +85,7 @@
         value.push(0);                                                                                                                                         \
     }
 
-class DLLEXPORT IndigoOptionManager
+class INDIGO_EXPORT IndigoOptionManager
 {
 public:
     IndigoOptionManager() = default;
@@ -186,4 +187,7 @@
     IndigoOptionManager(const IndigoOptionManager&);
 };
 
+INDIGO_EXPORT sf::safe_shared_hide_obj<IndigoOptionManager> &
+indigoGetOptionManager(const qword id = TL_GET_SESSION_ID());
+
 #endif //__otion_manager_h__
Index: cairo-src/cairo/boilerplate/cairo-boilerplate.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cairo-src/cairo/boilerplate/cairo-boilerplate.c b/cairo-src/cairo/boilerplate/cairo-boilerplate.c
--- a/cairo-src/cairo/boilerplate/cairo-boilerplate.c	(revision c3b672634f0635af1ad0ffa8c15b34fc7c1035cf)
+++ b/cairo-src/cairo/boilerplate/cairo-boilerplate.c	(date 1693030076905)
@@ -498,6 +498,10 @@
 #endif
 }
 
+void
+_cairo_boilerplate_register_all (void)
+{}
+
 void
 _cairo_boilerplate_register_backend (const cairo_boilerplate_target_t *targets,
 				     unsigned int		       count)
Index: indigo-src/indigo/api/c/indigo/indigo.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/indigo.h b/indigo-src/indigo/api/c/indigo/indigo.h
--- a/indigo-src/indigo/api/c/indigo/indigo.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/indigo.h	(date 1693030077140)
@@ -20,36 +20,22 @@
 #define __indigo__
 
 #include <stdint.h>
+#include "indigo_export.h"
 
 #if defined(_WIN32) && !defined(__MINGW32__)
 #define qword unsigned __int64
 #else
 #define qword unsigned long long
 #endif
-
-#ifndef EXPORT_SYMBOL
-#ifdef _WIN32
-#define EXPORT_SYMBOL __declspec(dllexport)
-#elif (defined __GNUC__ || defined __APPLE__)
-#define EXPORT_SYMBOL __attribute__((visibility("default")))
-#else
-#define EXPORT_SYMBOL
-#endif
-#endif
-
-#ifndef CEXPORT
-#ifndef __cplusplus
-#define CEXPORT EXPORT_SYMBOL
-#else
-#define CEXPORT extern "C" EXPORT_SYMBOL
-#endif
-#endif
 
 #ifndef __byte_typedef__
 #define __byte_typedef__
 typedef unsigned char byte;
 #endif
 
+#ifdef __cplusplus
+extern "C" {
+#endif
 /* All integer and float functions return -1 on error. */
 /* All string functions return zero pointer on error. */
 
@@ -58,54 +44,54 @@
 
 /* System */
 
-CEXPORT const char* indigoVersion();
+INDIGO_EXPORT const char *indigoVersion();
 
 // Allocate a new session. Each session has its own
 // set of objects created and options set up.
-CEXPORT qword indigoAllocSessionId();
+INDIGO_EXPORT qword indigoAllocSessionId();
 // Switch to another session. The session, if was not allocated
 // previously, is allocated automatically and initialized with
 // empty set of objects and default options.
-CEXPORT void indigoSetSessionId(qword id);
+INDIGO_EXPORT void indigoSetSessionId(qword id);
 // Release session. The memory used by the released session
 // is not freed, but the number will be reused on
 // further allocations.
-CEXPORT void indigoReleaseSessionId(qword id);
+INDIGO_EXPORT void indigoReleaseSessionId(qword id);
 
 // Get the last error message
-CEXPORT const char* indigoGetLastError(void);
+INDIGO_EXPORT const char *indigoGetLastError(void);
 
-typedef void (*INDIGO_ERROR_HANDLER)(const char* message, void* context);
-CEXPORT void indigoSetErrorHandler(INDIGO_ERROR_HANDLER handler, void* context);
+typedef void (*INDIGO_ERROR_HANDLER)(const char *message, void *context);
+INDIGO_EXPORT void indigoSetErrorHandler(INDIGO_ERROR_HANDLER handler, void *context);
 
 // Free an object
-CEXPORT int indigoFree(int handle);
+INDIGO_EXPORT int indigoFree(int handle);
 // Clone an object
-CEXPORT int indigoClone(int object);
+INDIGO_EXPORT int indigoClone(int object);
 // Count object currently allocated
-CEXPORT int indigoCountReferences(void);
+INDIGO_EXPORT int indigoCountReferences(void);
 
 // Deallocate all the objects in the current session
-CEXPORT int indigoFreeAllObjects();
+INDIGO_EXPORT int indigoFreeAllObjects();
 
 /* Options */
 
-CEXPORT int indigoSetOption(const char* name, const char* value);
-CEXPORT int indigoSetOptionInt(const char* name, int value);
-CEXPORT int indigoSetOptionBool(const char* name, int value);
-CEXPORT int indigoSetOptionFloat(const char* name, float value);
-CEXPORT int indigoSetOptionColor(const char* name, float r, float g, float b);
-CEXPORT int indigoSetOptionXY(const char* name, int x, int y);
-CEXPORT int indigoResetOptions();
+INDIGO_EXPORT int indigoSetOption(const char *name, const char *value);
+INDIGO_EXPORT int indigoSetOptionInt(const char *name, int value);
+INDIGO_EXPORT int indigoSetOptionBool(const char *name, int value);
+INDIGO_EXPORT int indigoSetOptionFloat(const char *name, float value);
+INDIGO_EXPORT int indigoSetOptionColor(const char *name, float r, float g, float b);
+INDIGO_EXPORT int indigoSetOptionXY(const char *name, int x, int y);
+INDIGO_EXPORT int indigoResetOptions();
 
-CEXPORT const char* indigoGetOption(const char* name);
-CEXPORT int indigoGetOptionInt(const char* name, int* value);
-CEXPORT int indigoGetOptionBool(const char* name, int* value);
-CEXPORT int indigoGetOptionFloat(const char* name, float* value);
-CEXPORT int indigoGetOptionColor(const char* name, float* r, float* g, float* b);
-CEXPORT int indigoGetOptionXY(const char* name, int* x, int* y);
+INDIGO_EXPORT const char *indigoGetOption(const char *name);
+INDIGO_EXPORT int indigoGetOptionInt(const char *name, int *value);
+INDIGO_EXPORT int indigoGetOptionBool(const char *name, int *value);
+INDIGO_EXPORT int indigoGetOptionFloat(const char *name, float *value);
+INDIGO_EXPORT int indigoGetOptionColor(const char *name, float *r, float *g, float *b);
+INDIGO_EXPORT int indigoGetOptionXY(const char *name, int *x, int *y);
 
-CEXPORT const char* indigoGetOptionType(const char* name);
+INDIGO_EXPORT const char *indigoGetOptionType(const char *name);
 
 /* Basic input-output */
 
@@ -115,19 +101,19 @@
 // string/buffer. All these functions are low-level and
 // rarely needed to anyone.
 
-CEXPORT int indigoReadFile(const char* filename);
-CEXPORT int indigoReadString(const char* str);
-CEXPORT int indigoLoadString(const char* str);
-CEXPORT int indigoReadBuffer(const char* buffer, int size);
-CEXPORT int indigoLoadBuffer(const char* buffer, int size);
+INDIGO_EXPORT int indigoReadFile(const char *filename);
+INDIGO_EXPORT int indigoReadString(const char *str);
+INDIGO_EXPORT int indigoLoadString(const char *str);
+INDIGO_EXPORT int indigoReadBuffer(const char *buffer, int size);
+INDIGO_EXPORT int indigoLoadBuffer(const char *buffer, int size);
 
 // indigoWrite*** return a new writer object.
 
-CEXPORT int indigoWriteFile(const char* filename);
-CEXPORT int indigoWriteBuffer(void);
+INDIGO_EXPORT int indigoWriteFile(const char *filename);
+INDIGO_EXPORT int indigoWriteBuffer(void);
 
 // Closes the file output stream but does not delete the object
-CEXPORT int indigoClose(int output);
+INDIGO_EXPORT int indigoClose(int output);
 
 /* Iterators */
 
@@ -159,68 +145,68 @@
  */
 
 // Obtains the next element, returns zero if there is no next element
-CEXPORT int indigoNext(int iter);
+INDIGO_EXPORT int indigoNext(int iter);
 // Does not obtain the next element, just tells if there is one
-CEXPORT int indigoHasNext(int iter);
+INDIGO_EXPORT int indigoHasNext(int iter);
 // Returns the index of the element
-CEXPORT int indigoIndex(int item);
+INDIGO_EXPORT int indigoIndex(int item);
 
 // Removes the item from its container (usually a molecule)
-CEXPORT int indigoRemove(int item);
+INDIGO_EXPORT int indigoRemove(int item);
 
 /* Molecules, query molecules, SMARTS */
 
-CEXPORT int indigoCreateMolecule(void);
-CEXPORT int indigoCreateQueryMolecule(void);
+INDIGO_EXPORT int indigoCreateMolecule(void);
+INDIGO_EXPORT int indigoCreateQueryMolecule(void);
 
-CEXPORT int indigoLoadStructureFromString(const char* string, const char* params);
-CEXPORT int indigoLoadStructureFromBuffer(const byte* string, int bufferSize, const char* params);
-CEXPORT int indigoLoadStructureFromFile(const char* filename, const char* params);
+INDIGO_EXPORT int indigoLoadStructureFromString(const char *string, const char *params);
+INDIGO_EXPORT int indigoLoadStructureFromBuffer(const byte *string, int bufferSize, const char *params);
+INDIGO_EXPORT int indigoLoadStructureFromFile(const char *filename, const char *params);
 
-CEXPORT int indigoLoadMolecule(int source);
-CEXPORT int indigoLoadMoleculeFromString(const char* string);
-CEXPORT int indigoLoadMoleculeFromFile(const char* filename);
-CEXPORT int indigoLoadMoleculeFromBuffer(const char* buffer, int size);
+INDIGO_EXPORT int indigoLoadMolecule(int source);
+INDIGO_EXPORT int indigoLoadMoleculeFromString(const char *string);
+INDIGO_EXPORT int indigoLoadMoleculeFromFile(const char *filename);
+INDIGO_EXPORT int indigoLoadMoleculeFromBuffer(const char *buffer, int size);
 
-CEXPORT int indigoLoadQueryMolecule(int source);
-CEXPORT int indigoLoadQueryMoleculeFromString(const char* string);
-CEXPORT int indigoLoadQueryMoleculeFromFile(const char* filename);
-CEXPORT int indigoLoadQueryMoleculeFromBuffer(const char* buffer, int size);
+INDIGO_EXPORT int indigoLoadQueryMolecule(int source);
+INDIGO_EXPORT int indigoLoadQueryMoleculeFromString(const char *string);
+INDIGO_EXPORT int indigoLoadQueryMoleculeFromFile(const char *filename);
+INDIGO_EXPORT int indigoLoadQueryMoleculeFromBuffer(const char *buffer, int size);
 
-CEXPORT int indigoLoadSmarts(int source);
-CEXPORT int indigoLoadSmartsFromString(const char* string);
-CEXPORT int indigoLoadSmartsFromFile(const char* filename);
-CEXPORT int indigoLoadSmartsFromBuffer(const char* buffer, int size);
+INDIGO_EXPORT int indigoLoadSmarts(int source);
+INDIGO_EXPORT int indigoLoadSmartsFromString(const char *string);
+INDIGO_EXPORT int indigoLoadSmartsFromFile(const char *filename);
+INDIGO_EXPORT int indigoLoadSmartsFromBuffer(const char *buffer, int size);
 
-CEXPORT int indigoSaveMolfile(int molecule, int output);
-CEXPORT int indigoSaveMolfileToFile(int molecule, const char* filename);
-CEXPORT const char* indigoMolfile(int molecule);
+INDIGO_EXPORT int indigoSaveMolfile(int molecule, int output);
+INDIGO_EXPORT int indigoSaveMolfileToFile(int molecule, const char *filename);
+INDIGO_EXPORT const char *indigoMolfile(int molecule);
 
-CEXPORT int indigoSaveJsonToFile(int item, const char* filename);
-CEXPORT int indigoSaveJson(int item, int output);
+INDIGO_EXPORT int indigoSaveJsonToFile(int item, const char *filename);
+INDIGO_EXPORT int indigoSaveJson(int item, int output);
 
 // accepts molecules and reactions (but not query ones)
-CEXPORT int indigoSaveCml(int object, int output);
-CEXPORT int indigoSaveCmlToFile(int object, const char* filename);
-CEXPORT const char* indigoCml(int object);
-CEXPORT const char* indigoCdxBase64(int object);
+INDIGO_EXPORT int indigoSaveCml(int object, int output);
+INDIGO_EXPORT int indigoSaveCmlToFile(int object, const char *filename);
+INDIGO_EXPORT const char *indigoCml(int object);
+INDIGO_EXPORT const char *indigoCdxBase64(int object);
 
 // accepts molecules and reactions
-CEXPORT int indigoSaveCdxml(int object, int output);
-CEXPORT int indigoSaveCdx(int item, int output);
+INDIGO_EXPORT int indigoSaveCdxml(int object, int output);
+INDIGO_EXPORT int indigoSaveCdx(int item, int output);
 
-CEXPORT const char* indigoCdxml(int item);
+INDIGO_EXPORT const char *indigoCdxml(int item);
 
-CEXPORT int indigoSaveCdxmlToFile(int object, const char* filename);
-CEXPORT int indigoSaveCdxToFile(int item, const char* filename);
+INDIGO_EXPORT int indigoSaveCdxmlToFile(int object, const char *filename);
+INDIGO_EXPORT int indigoSaveCdxToFile(int item, const char *filename);
 
-CEXPORT const char* indigoCdxml(int object);
+INDIGO_EXPORT const char *indigoCdxml(int object);
 
 // the output must be a file or a buffer, but not a string
 // (because MDLCT data usually contains zeroes)
-CEXPORT int indigoSaveMDLCT(int item, int output);
+INDIGO_EXPORT int indigoSaveMDLCT(int item, int output);
 
-CEXPORT const char* indigoJson(int object);
+INDIGO_EXPORT const char *indigoJson(int object);
 
 /*
 Converts a chemical name into a corresponding structure
@@ -229,14 +215,13 @@
    name - a name to parse
    params - a string containing parsing options or nullptr if no options are changed
 */
-CEXPORT int indigoNameToStructure(const char* name, const char* params);
+INDIGO_EXPORT int indigoNameToStructure(const char *name, const char *params);
 
 /* Reactions, query reactions */
 /*
  * Reaction centers
  */
-enum
-{
+enum {
     INDIGO_RC_NOT_CENTER = -1,
     INDIGO_RC_UNMARKED = 0,
     INDIGO_RC_CENTER = 1,
@@ -244,66 +229,66 @@
     INDIGO_RC_MADE_OR_BROKEN = 4,
     INDIGO_RC_ORDER_CHANGED = 8
 };
-CEXPORT int indigoLoadReaction(int source);
-CEXPORT int indigoLoadReactionFromString(const char* string);
-CEXPORT int indigoLoadReactionFromFile(const char* filename);
-CEXPORT int indigoLoadReactionFromBuffer(const char* buffer, int size);
+INDIGO_EXPORT int indigoLoadReaction(int source);
+INDIGO_EXPORT int indigoLoadReactionFromString(const char *string);
+INDIGO_EXPORT int indigoLoadReactionFromFile(const char *filename);
+INDIGO_EXPORT int indigoLoadReactionFromBuffer(const char *buffer, int size);
 
-CEXPORT int indigoLoadQueryReaction(int source);
-CEXPORT int indigoLoadQueryReactionFromString(const char* string);
-CEXPORT int indigoLoadQueryReactionFromFile(const char* filename);
-CEXPORT int indigoLoadQueryReactionFromBuffer(const char* buffer, int size);
+INDIGO_EXPORT int indigoLoadQueryReaction(int source);
+INDIGO_EXPORT int indigoLoadQueryReactionFromString(const char *string);
+INDIGO_EXPORT int indigoLoadQueryReactionFromFile(const char *filename);
+INDIGO_EXPORT int indigoLoadQueryReactionFromBuffer(const char *buffer, int size);
 
-CEXPORT int indigoLoadReactionSmarts(int source);
-CEXPORT int indigoLoadReactionSmartsFromString(const char* string);
-CEXPORT int indigoLoadReactionSmartsFromFile(const char* filename);
-CEXPORT int indigoLoadReactionSmartsFromBuffer(const char* buffer, int size);
+INDIGO_EXPORT int indigoLoadReactionSmarts(int source);
+INDIGO_EXPORT int indigoLoadReactionSmartsFromString(const char *string);
+INDIGO_EXPORT int indigoLoadReactionSmartsFromFile(const char *filename);
+INDIGO_EXPORT int indigoLoadReactionSmartsFromBuffer(const char *buffer, int size);
 
-CEXPORT int indigoCreateReaction(void);
-CEXPORT int indigoCreateQueryReaction(void);
+INDIGO_EXPORT int indigoCreateReaction(void);
+INDIGO_EXPORT int indigoCreateQueryReaction(void);
 
-CEXPORT int indigoAddReactant(int reaction, int molecule);
-CEXPORT int indigoAddProduct(int reaction, int molecule);
-CEXPORT int indigoAddCatalyst(int reaction, int molecule);
+INDIGO_EXPORT int indigoAddReactant(int reaction, int molecule);
+INDIGO_EXPORT int indigoAddProduct(int reaction, int molecule);
+INDIGO_EXPORT int indigoAddCatalyst(int reaction, int molecule);
 
-CEXPORT int indigoCountReactants(int reaction);
-CEXPORT int indigoCountProducts(int reaction);
-CEXPORT int indigoCountCatalysts(int reaction);
+INDIGO_EXPORT int indigoCountReactants(int reaction);
+INDIGO_EXPORT int indigoCountProducts(int reaction);
+INDIGO_EXPORT int indigoCountCatalysts(int reaction);
 // Counts reactants, products, and catalysts.
-CEXPORT int indigoCountMolecules(int reaction);
-CEXPORT int indigoGetMolecule(int reaction, int index);
+INDIGO_EXPORT int indigoCountMolecules(int reaction);
+INDIGO_EXPORT int indigoGetMolecule(int reaction, int index);
 
-CEXPORT int indigoIterateReactants(int reaction);
-CEXPORT int indigoIterateProducts(int reaction);
-CEXPORT int indigoIterateCatalysts(int reaction);
+INDIGO_EXPORT int indigoIterateReactants(int reaction);
+INDIGO_EXPORT int indigoIterateProducts(int reaction);
+INDIGO_EXPORT int indigoIterateCatalysts(int reaction);
 // Returns an iterator for reactants, products, and catalysts.
-CEXPORT int indigoIterateMolecules(int reaction);
+INDIGO_EXPORT int indigoIterateMolecules(int reaction);
 
-CEXPORT int indigoSaveRxnfile(int reaction, int output);
-CEXPORT int indigoSaveRxnfileToFile(int reaction, const char* filename);
-CEXPORT const char* indigoRxnfile(int reaction);
+INDIGO_EXPORT int indigoSaveRxnfile(int reaction, int output);
+INDIGO_EXPORT int indigoSaveRxnfileToFile(int reaction, const char *filename);
+INDIGO_EXPORT const char *indigoRxnfile(int reaction);
 
 // Method for query optimizations for faster substructure search
 // (works for both query molecules and query reactions)
-CEXPORT int indigoOptimize(int query, const char* options);
+INDIGO_EXPORT int indigoOptimize(int query, const char *options);
 
 // Methods for structure normalization
 // It neutrailzes charges, resolves 5-valence Nitrogen, removes hydrogens and etc.
 // Default options is empty.
-CEXPORT int indigoNormalize(int structure, const char* options);
+INDIGO_EXPORT int indigoNormalize(int structure, const char *options);
 
 // Method for molecule and query standardizing
 // It stadrdize charges, stereo and etc.
-CEXPORT int indigoStandardize(int item);
+INDIGO_EXPORT int indigoStandardize(int item);
 
 // Method for structure ionization at specified pH and pH tollerance
-CEXPORT int indigoIonize(int item, float pH, float pH_toll);
+INDIGO_EXPORT int indigoIonize(int item, float pH, float pH_toll);
 
 // Method for building PKA model
-CEXPORT int indigoBuildPkaModel(int max_level, float threshold, const char* filename);
+INDIGO_EXPORT int indigoBuildPkaModel(int max_level, float threshold, const char *filename);
 
-CEXPORT float* indigoGetAcidPkaValue(int item, int atom, int level, int min_level);
-CEXPORT float* indigoGetBasicPkaValue(int item, int atom, int level, int min_level);
+INDIGO_EXPORT float *indigoGetAcidPkaValue(int item, int atom, int level, int min_level);
+INDIGO_EXPORT float *indigoGetBasicPkaValue(int item, int atom, int level, int min_level);
 
 // Automatic reaction atom-to-atom mapping
 // mode is one of the following (separated by a space):
@@ -318,28 +303,27 @@
 //    "ignore_isotopes" : do not consider atom isotopes while searching
 //    "ignore_valence" : do not consider atom valence while searching
 //    "ignore_radicals" : do not consider atom radicals while searching
-CEXPORT int indigoAutomap(int reaction, const char* mode);
+INDIGO_EXPORT int indigoAutomap(int reaction, const char *mode);
 
 // Returns mapping number. It might appear that there is more them
 // one atom with the same number in AAM
 // Value 0 means no mapping number has been specified.
-CEXPORT int indigoGetAtomMappingNumber(int reaction, int reaction_atom);
-CEXPORT int indigoSetAtomMappingNumber(int reaction, int reaction_atom, int number);
+INDIGO_EXPORT int indigoGetAtomMappingNumber(int reaction, int reaction_atom);
+INDIGO_EXPORT int indigoSetAtomMappingNumber(int reaction, int reaction_atom, int number);
 
 // Getters and setters for reacting centers
-CEXPORT int indigoGetReactingCenter(int reaction, int reaction_bond, int* rc);
-CEXPORT int indigoSetReactingCenter(int reaction, int reaction_bond, int rc);
+INDIGO_EXPORT int indigoGetReactingCenter(int reaction, int reaction_bond, int *rc);
+INDIGO_EXPORT int indigoSetReactingCenter(int reaction, int reaction_bond, int rc);
 
 // Clears all reaction AAM information
-CEXPORT int indigoClearAAM(int reaction);
+INDIGO_EXPORT int indigoClearAAM(int reaction);
 
 // Corrects reacting centers according to AAM
-CEXPORT int indigoCorrectReactingCenters(int reaction);
+INDIGO_EXPORT int indigoCorrectReactingCenters(int reaction);
 
 /* Accessing a molecule */
 
-enum
-{
+enum {
     INDIGO_ABS = 1,
     INDIGO_OR = 2,
     INDIGO_AND = 3,
@@ -359,60 +343,60 @@
 
 // Returns an iterator for all atoms of the given
 // molecule, including r-sites and pseudoatoms.
-CEXPORT int indigoIterateAtoms(int molecule);
-CEXPORT int indigoIteratePseudoatoms(int molecule);
-CEXPORT int indigoIterateRSites(int molecule);
-CEXPORT int indigoIterateStereocenters(int molecule);
-CEXPORT int indigoIterateAlleneCenters(int molecule);
-CEXPORT int indigoIterateRGroups(int molecule);
+INDIGO_EXPORT int indigoIterateAtoms(int molecule);
+INDIGO_EXPORT int indigoIteratePseudoatoms(int molecule);
+INDIGO_EXPORT int indigoIterateRSites(int molecule);
+INDIGO_EXPORT int indigoIterateStereocenters(int molecule);
+INDIGO_EXPORT int indigoIterateAlleneCenters(int molecule);
+INDIGO_EXPORT int indigoIterateRGroups(int molecule);
 
-CEXPORT int indigoCountRGroups(int molecule);
+INDIGO_EXPORT int indigoCountRGroups(int molecule);
 
-CEXPORT int indigoIsPseudoatom(int atom);
-CEXPORT int indigoIsRSite(int atom);
-CEXPORT int indigoIsTemplateAtom(int atom);
+INDIGO_EXPORT int indigoIsPseudoatom(int atom);
+INDIGO_EXPORT int indigoIsRSite(int atom);
+INDIGO_EXPORT int indigoIsTemplateAtom(int atom);
 
 // returns INDIGO_{ABS,OR,AND,EITHER}
 // or zero if the atom is not a stereoatom
-CEXPORT int indigoStereocenterType(int atom);
-CEXPORT int indigoChangeStereocenterType(int atom, int type);
+INDIGO_EXPORT int indigoStereocenterType(int atom);
+INDIGO_EXPORT int indigoChangeStereocenterType(int atom, int type);
 
-CEXPORT int indigoStereocenterGroup(int atom);
-CEXPORT int indigoSetStereocenterGroup(int atom, int group);
+INDIGO_EXPORT int indigoStereocenterGroup(int atom);
+INDIGO_EXPORT int indigoSetStereocenterGroup(int atom, int group);
 
 // returns 4 integers with atom indices that defines stereocenter pyramid
-CEXPORT const int* indigoStereocenterPyramid(int atom);
+INDIGO_EXPORT const int *indigoStereocenterPyramid(int atom);
 
-CEXPORT int indigoSingleAllowedRGroup(int rsite);
+INDIGO_EXPORT int indigoSingleAllowedRGroup(int rsite);
 
-CEXPORT int indigoAddStereocenter(int atom, int type, int v1, int v2, int v3, int v4);
+INDIGO_EXPORT int indigoAddStereocenter(int atom, int type, int v1, int v2, int v3, int v4);
 
 // Applicable to an R-Group, but not to a molecule
-CEXPORT int indigoIterateRGroupFragments(int rgroup);
+INDIGO_EXPORT int indigoIterateRGroupFragments(int rgroup);
 // Applicable to an R-Group and to a molecule
 // Returns maximal order of attachment points
-CEXPORT int indigoCountAttachmentPoints(int item);
-CEXPORT int indigoIterateAttachmentPoints(int item, int order);
+INDIGO_EXPORT int indigoCountAttachmentPoints(int item);
+INDIGO_EXPORT int indigoIterateAttachmentPoints(int item, int order);
 
-CEXPORT const char* indigoSymbol(int atom);
-CEXPORT int indigoDegree(int atom);
+INDIGO_EXPORT const char *indigoSymbol(int atom);
+INDIGO_EXPORT int indigoDegree(int atom);
 
 // Returns zero if the charge is ambiguous
 // If the charge is nonambiguous, returns 1 and writes *charge
-CEXPORT int indigoGetCharge(int atom, int* charge);
+INDIGO_EXPORT int indigoGetCharge(int atom, int *charge);
 // Same as indigoGetCharge
-CEXPORT int indigoGetExplicitValence(int atom, int* valence);
+INDIGO_EXPORT int indigoGetExplicitValence(int atom, int *valence);
 
-CEXPORT int indigoSetExplicitValence(int atom, int valence);
+INDIGO_EXPORT int indigoSetExplicitValence(int atom, int valence);
 
 // Returns a number of element from the periodic table.
 // Returns zero on ambiguous atom.
 // Can not be applied to pseudo-atoms and R-sites.
-CEXPORT int indigoAtomicNumber(int atom);
+INDIGO_EXPORT int indigoAtomicNumber(int atom);
 // Returns zero on unspecified or ambiguous isotope
-CEXPORT int indigoIsotope(int atom);
+INDIGO_EXPORT int indigoIsotope(int atom);
 // Not applicable to query molecules.
-CEXPORT int indigoValence(int atom);
+INDIGO_EXPORT int indigoValence(int atom);
 // Return atom hybridization
 // S = 1,
 // SP = 2,
@@ -423,324 +407,328 @@
 // SP3D3 = 7,
 // SP3D4 = 8,
 // SP2D = 9
-CEXPORT int indigoGetHybridization(int atom);
+INDIGO_EXPORT int indigoGetHybridization(int atom);
 // Returns zero if valence of the atom is wrong
-CEXPORT int indigoCheckValence(int atom);
+INDIGO_EXPORT int indigoCheckValence(int atom);
 
 // Returns one if atom or bond belongs Query or has any query feature
-CEXPORT int indigoCheckQuery(int item);
+INDIGO_EXPORT int indigoCheckQuery(int item);
 
 // Returns one if structure contains RGroup features (RSites, RGroups or attachment points
-CEXPORT int indigoCheckRGroups(int item);
+INDIGO_EXPORT int indigoCheckRGroups(int item);
 
 // Returns check result for Indigo object as text file for requested properties as JSON
-CEXPORT const char* indigoCheck(const char* item, const char* check_flags, const char* load_params);
+INDIGO_EXPORT const char *indigoCheck(const char *item, const char *check_flags, const char *load_params);
 
 // Returns check result for Indigo object for requested properties as JSON
-CEXPORT const char* indigoCheckObj(int item, const char* check_flags);
+INDIGO_EXPORT const char *indigoCheckObj(int item, const char *check_flags);
 
 // Returns check result for structure against requested properties
-CEXPORT const char* indigoCheckStructure(const char* structure, const char* props);
+INDIGO_EXPORT const char *indigoCheckStructure(const char *structure, const char *props);
 
 // Applicable to atoms, query atoms, and molecules. Can fail
 // (return zero) on query atoms where the number of hydrogens
 // is not definitely known. Otherwise, returns one and writes *hydro.
-CEXPORT int indigoCountHydrogens(int item, int* hydro);
+INDIGO_EXPORT int indigoCountHydrogens(int item, int *hydro);
 
 // Applicable to non-query molecules and atoms.
-CEXPORT int indigoCountImplicitHydrogens(int item);
+INDIGO_EXPORT int indigoCountImplicitHydrogens(int item);
 
 // On success, returns always the same pointer to a 3-element array;
 // you should not free() it, but rather memcpy() it if you want to keep it.
-CEXPORT float* indigoXYZ(int atom);
+INDIGO_EXPORT float *indigoXYZ(int atom);
 
-CEXPORT int indigoSetXYZ(int atom, float x, float y, float z);
+INDIGO_EXPORT int indigoSetXYZ(int atom, float x, float y, float z);
 
-CEXPORT int indigoCountSuperatoms(int molecule);
-CEXPORT int indigoCountDataSGroups(int molecule);
-CEXPORT int indigoCountRepeatingUnits(int molecule);
-CEXPORT int indigoCountMultipleGroups(int molecule);
-CEXPORT int indigoCountGenericSGroups(int molecule);
-CEXPORT int indigoIterateDataSGroups(int molecule);
-CEXPORT int indigoIterateSuperatoms(int molecule);
-CEXPORT int indigoIterateGenericSGroups(int molecule);
-CEXPORT int indigoIterateRepeatingUnits(int molecule);
-CEXPORT int indigoIterateMultipleGroups(int molecule);
+INDIGO_EXPORT int indigoCountSuperatoms(int molecule);
+INDIGO_EXPORT int indigoCountDataSGroups(int molecule);
+INDIGO_EXPORT int indigoCountRepeatingUnits(int molecule);
+INDIGO_EXPORT int indigoCountMultipleGroups(int molecule);
+INDIGO_EXPORT int indigoCountGenericSGroups(int molecule);
+INDIGO_EXPORT int indigoIterateDataSGroups(int molecule);
+INDIGO_EXPORT int indigoIterateSuperatoms(int molecule);
+INDIGO_EXPORT int indigoIterateGenericSGroups(int molecule);
+INDIGO_EXPORT int indigoIterateRepeatingUnits(int molecule);
+INDIGO_EXPORT int indigoIterateMultipleGroups(int molecule);
 
-CEXPORT int indigoIterateTGroups(int molecule);
-CEXPORT int indigoIterateSGroups(int molecule);
+INDIGO_EXPORT int indigoIterateTGroups(int molecule);
+INDIGO_EXPORT int indigoIterateSGroups(int molecule);
 
-CEXPORT int indigoGetSuperatom(int molecule, int index);
-CEXPORT int indigoGetDataSGroup(int molecule, int index);
-CEXPORT int indigoGetGenericSGroup(int molecule, int index);
-CEXPORT int indigoGetMultipleGroup(int molecule, int index);
-CEXPORT int indigoGetRepeatingUnit(int molecule, int index);
+INDIGO_EXPORT int indigoGetSuperatom(int molecule, int index);
+INDIGO_EXPORT int indigoGetDataSGroup(int molecule, int index);
+INDIGO_EXPORT int indigoGetGenericSGroup(int molecule, int index);
+INDIGO_EXPORT int indigoGetMultipleGroup(int molecule, int index);
+INDIGO_EXPORT int indigoGetRepeatingUnit(int molecule, int index);
 
-CEXPORT const char* indigoDescription(int data_sgroup);
-CEXPORT const char* indigoData(int data_sgroup);
+INDIGO_EXPORT const char *indigoDescription(int data_sgroup);
+INDIGO_EXPORT const char *indigoData(int data_sgroup);
 
-CEXPORT int indigoAddDataSGroup(int molecule, int natoms, int* atoms, int nbonds, int* bonds, const char* description, const char* data);
+INDIGO_EXPORT int
+indigoAddDataSGroup(int molecule, int natoms, int *atoms, int nbonds, int *bonds, const char *description,
+                    const char *data);
 
-CEXPORT int indigoAddSuperatom(int molecule, int natoms, int* atoms, const char* name);
+INDIGO_EXPORT int indigoAddSuperatom(int molecule, int natoms, int *atoms, const char *name);
 
-CEXPORT int indigoSetDataSGroupXY(int sgroup, float x, float y, const char* options);
+INDIGO_EXPORT int indigoSetDataSGroupXY(int sgroup, float x, float y, const char *options);
 
-CEXPORT int indigoSetSGroupData(int sgroup, const char* data);
-CEXPORT int indigoSetSGroupCoords(int sgroup, float x, float y);
-CEXPORT int indigoSetSGroupDescription(int sgroup, const char* description);
-CEXPORT int indigoSetSGroupFieldName(int sgroup, const char* name);
-CEXPORT int indigoSetSGroupQueryCode(int sgroup, const char* querycode);
-CEXPORT int indigoSetSGroupQueryOper(int sgroup, const char* queryoper);
-CEXPORT int indigoSetSGroupDisplay(int sgroup, const char* option);
-CEXPORT int indigoSetSGroupLocation(int sgroup, const char* option);
-CEXPORT int indigoSetSGroupTag(int sgroup, const char* tag);
-CEXPORT int indigoSetSGroupTagAlign(int sgroup, int tag_align);
-CEXPORT int indigoSetSGroupDataType(int sgroup, const char* type);
-CEXPORT int indigoSetSGroupXCoord(int sgroup, float x);
-CEXPORT int indigoSetSGroupYCoord(int sgroup, float y);
+INDIGO_EXPORT int indigoSetSGroupData(int sgroup, const char *data);
+INDIGO_EXPORT int indigoSetSGroupCoords(int sgroup, float x, float y);
+INDIGO_EXPORT int indigoSetSGroupDescription(int sgroup, const char *description);
+INDIGO_EXPORT int indigoSetSGroupFieldName(int sgroup, const char *name);
+INDIGO_EXPORT int indigoSetSGroupQueryCode(int sgroup, const char *querycode);
+INDIGO_EXPORT int indigoSetSGroupQueryOper(int sgroup, const char *queryoper);
+INDIGO_EXPORT int indigoSetSGroupDisplay(int sgroup, const char *option);
+INDIGO_EXPORT int indigoSetSGroupLocation(int sgroup, const char *option);
+INDIGO_EXPORT int indigoSetSGroupTag(int sgroup, const char *tag);
+INDIGO_EXPORT int indigoSetSGroupTagAlign(int sgroup, int tag_align);
+INDIGO_EXPORT int indigoSetSGroupDataType(int sgroup, const char *type);
+INDIGO_EXPORT int indigoSetSGroupXCoord(int sgroup, float x);
+INDIGO_EXPORT int indigoSetSGroupYCoord(int sgroup, float y);
 
-CEXPORT int indigoCreateSGroup(const char* type, int mapping, const char* name);
-CEXPORT const char* indigoGetSGroupClass(int sgroup);
-CEXPORT const char* indigoGetSGroupName(int sgroup);
-CEXPORT int indigoSetSGroupClass(int sgroup, const char* sgclass);
-CEXPORT int indigoSetSGroupName(int sgroup, const char* sgname);
-CEXPORT int indigoGetSGroupNumCrossBonds(int sgroup);
+INDIGO_EXPORT int indigoCreateSGroup(const char *type, int mapping, const char *name);
+INDIGO_EXPORT const char *indigoGetSGroupClass(int sgroup);
+INDIGO_EXPORT const char *indigoGetSGroupName(int sgroup);
+INDIGO_EXPORT int indigoSetSGroupClass(int sgroup, const char *sgclass);
+INDIGO_EXPORT int indigoSetSGroupName(int sgroup, const char *sgname);
+INDIGO_EXPORT int indigoGetSGroupNumCrossBonds(int sgroup);
 
-CEXPORT int indigoAddSGroupAttachmentPoint(int sgroup, int aidx, int lvidx, const char* apid);
-CEXPORT int indigoDeleteSGroupAttachmentPoint(int sgroup, int index);
-CEXPORT int indigoGetSGroupDisplayOption(int sgroup);
-CEXPORT int indigoSetSGroupDisplayOption(int sgroup, int option);
-CEXPORT int indigoGetSGroupSeqId(int sgroup);
-CEXPORT float* indigoGetSGroupCoords(int sgroup);
+INDIGO_EXPORT int indigoAddSGroupAttachmentPoint(int sgroup, int aidx, int lvidx, const char *apid);
+INDIGO_EXPORT int indigoDeleteSGroupAttachmentPoint(int sgroup, int index);
+INDIGO_EXPORT int indigoGetSGroupDisplayOption(int sgroup);
+INDIGO_EXPORT int indigoSetSGroupDisplayOption(int sgroup, int option);
+INDIGO_EXPORT int indigoGetSGroupSeqId(int sgroup);
+INDIGO_EXPORT float *indigoGetSGroupCoords(int sgroup);
 
-CEXPORT int indigoGetSGroupMultiplier(int sgroup);
-CEXPORT int indigoSetSGroupMultiplier(int sgroup, int multiplier);
+INDIGO_EXPORT int indigoGetSGroupMultiplier(int sgroup);
+INDIGO_EXPORT int indigoSetSGroupMultiplier(int sgroup, int multiplier);
 
-CEXPORT const char* indigoGetRepeatingUnitSubscript(int sgroup);
-CEXPORT int indigoGetRepeatingUnitConnectivity(int sgroup);
+INDIGO_EXPORT const char *indigoGetRepeatingUnitSubscript(int sgroup);
+INDIGO_EXPORT int indigoGetRepeatingUnitConnectivity(int sgroup);
 
-CEXPORT int indigoSetSGroupBrackets(int sgroup, int brk_style, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);
+INDIGO_EXPORT int
+indigoSetSGroupBrackets(int sgroup, int brk_style, float x1, float y1, float x2, float y2, float x3, float y3, float x4,
+                        float y4);
 
-CEXPORT int indigoFindSGroups(int item, const char* property, const char* value);
+INDIGO_EXPORT int indigoFindSGroups(int item, const char *property, const char *value);
 
-CEXPORT int indigoGetSGroupType(int item);
-CEXPORT int indigoGetSGroupIndex(int item);
+INDIGO_EXPORT int indigoGetSGroupType(int item);
+INDIGO_EXPORT int indigoGetSGroupIndex(int item);
 
-CEXPORT int indigoGetSGroupOriginalId(int sgroup);
-CEXPORT int indigoSetSGroupOriginalId(int sgroup, int original);
-CEXPORT int indigoGetSGroupParentId(int sgroup);
-CEXPORT int indigoSetSGroupParentId(int sgroup, int parent);
+INDIGO_EXPORT int indigoGetSGroupOriginalId(int sgroup);
+INDIGO_EXPORT int indigoSetSGroupOriginalId(int sgroup, int original);
+INDIGO_EXPORT int indigoGetSGroupParentId(int sgroup);
+INDIGO_EXPORT int indigoSetSGroupParentId(int sgroup, int parent);
 
-CEXPORT int indigoAddTemplate(int molecule, int templates, const char* tname);
-CEXPORT int indigoRemoveTemplate(int molecule, const char* tname);
-CEXPORT int indigoFindTemplate(int molecule, const char* tname);
+INDIGO_EXPORT int indigoAddTemplate(int molecule, int templates, const char *tname);
+INDIGO_EXPORT int indigoRemoveTemplate(int molecule, const char *tname);
+INDIGO_EXPORT int indigoFindTemplate(int molecule, const char *tname);
 
-CEXPORT const char* indigoGetTGroupClass(int tgroup);
-CEXPORT const char* indigoGetTGroupName(int tgroup);
-CEXPORT const char* indigoGetTGroupAlias(int tgroup);
+INDIGO_EXPORT const char *indigoGetTGroupClass(int tgroup);
+INDIGO_EXPORT const char *indigoGetTGroupName(int tgroup);
+INDIGO_EXPORT const char *indigoGetTGroupAlias(int tgroup);
 
-CEXPORT int indigoTransformSCSRtoCTAB(int item);
-CEXPORT int indigoTransformCTABtoSCSR(int molecule, int templates);
+INDIGO_EXPORT int indigoTransformSCSRtoCTAB(int item);
+INDIGO_EXPORT int indigoTransformCTABtoSCSR(int molecule, int templates);
 
-CEXPORT int indigoResetCharge(int atom);
-CEXPORT int indigoResetExplicitValence(int atom);
-CEXPORT int indigoResetIsotope(int atom);
+INDIGO_EXPORT int indigoResetCharge(int atom);
+INDIGO_EXPORT int indigoResetExplicitValence(int atom);
+INDIGO_EXPORT int indigoResetIsotope(int atom);
 
-CEXPORT int indigoSetAttachmentPoint(int atom, int order);
-CEXPORT int indigoClearAttachmentPoints(int item);
+INDIGO_EXPORT int indigoSetAttachmentPoint(int atom, int order);
+INDIGO_EXPORT int indigoClearAttachmentPoints(int item);
 
-CEXPORT int indigoRemoveConstraints(int item, const char* type);
-CEXPORT int indigoAddConstraint(int item, const char* type, const char* value);
-CEXPORT int indigoAddConstraintNot(int item, const char* type, const char* value);
-CEXPORT int indigoAddConstraintOr(int atom, const char* type, const char* value);
+INDIGO_EXPORT int indigoRemoveConstraints(int item, const char *type);
+INDIGO_EXPORT int indigoAddConstraint(int item, const char *type, const char *value);
+INDIGO_EXPORT int indigoAddConstraintNot(int item, const char *type, const char *value);
+INDIGO_EXPORT int indigoAddConstraintOr(int atom, const char *type, const char *value);
 
-CEXPORT int indigoResetStereo(int item);
-CEXPORT int indigoInvertStereo(int item);
+INDIGO_EXPORT int indigoResetStereo(int item);
+INDIGO_EXPORT int indigoInvertStereo(int item);
 
-CEXPORT int indigoCountAtoms(int molecule);
-CEXPORT int indigoCountBonds(int molecule);
-CEXPORT int indigoCountPseudoatoms(int molecule);
-CEXPORT int indigoCountRSites(int molecule);
+INDIGO_EXPORT int indigoCountAtoms(int molecule);
+INDIGO_EXPORT int indigoCountBonds(int molecule);
+INDIGO_EXPORT int indigoCountPseudoatoms(int molecule);
+INDIGO_EXPORT int indigoCountRSites(int molecule);
 
-CEXPORT int indigoIterateBonds(int molecule);
+INDIGO_EXPORT int indigoIterateBonds(int molecule);
 // Returns 1/2/3 if the bond is a single/double/triple bond
 // Returns 4 if the bond is an aromatic bond
 // Returns zero if the bond is ambiguous (query bond)
-CEXPORT int indigoBondOrder(int bond);
+INDIGO_EXPORT int indigoBondOrder(int bond);
 
 // Returns INDIGO_{UP/DOWN/EITHER/CIS/TRANS},
 // or zero if the bond is not a stereobond
-CEXPORT int indigoBondStereo(int bond);
+INDIGO_EXPORT int indigoBondStereo(int bond);
 
 // Returns INDIGO_{CHAIN/RING},
-CEXPORT int indigoTopology(int bond);
+INDIGO_EXPORT int indigoTopology(int bond);
 
 // Returns an iterator whose elements can be treated as atoms.
 // At the same time, they support indigoBond() call.
-CEXPORT int indigoIterateNeighbors(int atom);
+INDIGO_EXPORT int indigoIterateNeighbors(int atom);
 
 // Applicable exclusively to the "atom neighbors iterator".
 // Returns a bond to the neighbor atom.
-CEXPORT int indigoBond(int nei);
+INDIGO_EXPORT int indigoBond(int nei);
 
 // Accessing atoms and bonds by index
-CEXPORT int indigoGetAtom(int molecule, int idx);
-CEXPORT int indigoGetBond(int molecule, int idx);
+INDIGO_EXPORT int indigoGetAtom(int molecule, int idx);
+INDIGO_EXPORT int indigoGetBond(int molecule, int idx);
 
-CEXPORT int indigoSource(int bond);
-CEXPORT int indigoDestination(int bond);
+INDIGO_EXPORT int indigoSource(int bond);
+INDIGO_EXPORT int indigoDestination(int bond);
 
-CEXPORT int indigoClearCisTrans(int handle);
-CEXPORT int indigoClearStereocenters(int handle);
-CEXPORT int indigoCountStereocenters(int molecule);
-CEXPORT int indigoClearAlleneCenters(int molecule);
-CEXPORT int indigoCountAlleneCenters(int molecule);
+INDIGO_EXPORT int indigoClearCisTrans(int handle);
+INDIGO_EXPORT int indigoClearStereocenters(int handle);
+INDIGO_EXPORT int indigoCountStereocenters(int molecule);
+INDIGO_EXPORT int indigoClearAlleneCenters(int molecule);
+INDIGO_EXPORT int indigoCountAlleneCenters(int molecule);
 
-CEXPORT int indigoResetSymmetricCisTrans(int handle);
-CEXPORT int indigoResetSymmetricStereocenters(int handle);
-CEXPORT int indigoMarkEitherCisTrans(int handle);
-CEXPORT int indigoMarkStereobonds(int handle);
+INDIGO_EXPORT int indigoResetSymmetricCisTrans(int handle);
+INDIGO_EXPORT int indigoResetSymmetricStereocenters(int handle);
+INDIGO_EXPORT int indigoMarkEitherCisTrans(int handle);
+INDIGO_EXPORT int indigoMarkStereobonds(int handle);
 
-CEXPORT int indigoValidateChirality(int handle);
+INDIGO_EXPORT int indigoValidateChirality(int handle);
 
 // Accepts a symbol from the periodic table (like "C" or "Br"),
 // or a pseudoatom symbol, like "Pol". Returns the added atom.
-CEXPORT int indigoAddAtom(int molecule, const char* symbol);
+INDIGO_EXPORT int indigoAddAtom(int molecule, const char *symbol);
 // Set a new atom instead of specified
-CEXPORT int indigoResetAtom(int atom, const char* symbol);
+INDIGO_EXPORT int indigoResetAtom(int atom, const char *symbol);
 
-CEXPORT const char* indigoGetTemplateAtomClass(int atom);
-CEXPORT int indigoSetTemplateAtomClass(int atom, const char* name);
+INDIGO_EXPORT const char *indigoGetTemplateAtomClass(int atom);
+INDIGO_EXPORT int indigoSetTemplateAtomClass(int atom, const char *name);
 
 // Accepts Rsite name "R" (or just ""), "R1", "R2" or list with names "R1 R3"
-CEXPORT int indigoAddRSite(int molecule, const char* name);
-CEXPORT int indigoSetRSite(int atom, const char* name);
+INDIGO_EXPORT int indigoAddRSite(int molecule, const char *name);
+INDIGO_EXPORT int indigoSetRSite(int atom, const char *name);
 
-CEXPORT int indigoSetCharge(int atom, int charge);
-CEXPORT int indigoSetIsotope(int atom, int isotope);
+INDIGO_EXPORT int indigoSetCharge(int atom, int charge);
+INDIGO_EXPORT int indigoSetIsotope(int atom, int isotope);
 
 // If the radical is nonambiguous, returns 1 and writes *electrons
-CEXPORT int indigoGetRadicalElectrons(int atom, int* electrons);
+INDIGO_EXPORT int indigoGetRadicalElectrons(int atom, int *electrons);
 // If the radical is nonambiguous, returns 1 and writes *radical
-CEXPORT int indigoGetRadical(int atom, int* radical);
-CEXPORT int indigoSetRadical(int atom, int radical);
-CEXPORT int indigoResetRadical(int atom);
+INDIGO_EXPORT int indigoGetRadical(int atom, int *radical);
+INDIGO_EXPORT int indigoSetRadical(int atom, int radical);
+INDIGO_EXPORT int indigoResetRadical(int atom);
 
 // Used for hacks with aromatic molecules; not recommended to use
 // in other situations
-CEXPORT int indigoSetImplicitHCount(int atom, int impl_h);
+INDIGO_EXPORT int indigoSetImplicitHCount(int atom, int impl_h);
 
 // Accepts two atoms (source and destination) and the order of the new bond
 // (1/2/3/4 = single/double/triple/aromatic). Returns the added bond.
-CEXPORT int indigoAddBond(int source, int destination, int order);
+INDIGO_EXPORT int indigoAddBond(int source, int destination, int order);
 
-CEXPORT int indigoSetBondOrder(int bond, int order);
+INDIGO_EXPORT int indigoSetBondOrder(int bond, int order);
 
-CEXPORT int indigoMerge(int where_to, int what);
+INDIGO_EXPORT int indigoMerge(int where_to, int what);
 
 /* Highlighting */
 
 // Access atoms and bonds
-CEXPORT int indigoHighlight(int item);
+INDIGO_EXPORT int indigoHighlight(int item);
 
 // Access atoms, bonds, molecules, and reactions
-CEXPORT int indigoUnhighlight(int item);
+INDIGO_EXPORT int indigoUnhighlight(int item);
 
 // Access atoms and bonds
-CEXPORT int indigoIsHighlighted(int item);
+INDIGO_EXPORT int indigoIsHighlighted(int item);
 
 /* Selection */
 
 // Access atoms and bonds
-CEXPORT int indigoSelect(int item);
+INDIGO_EXPORT int indigoSelect(int item);
 
 // Access atoms, bonds, molecules, and reactions
-CEXPORT int indigoUnselect(int item);
+INDIGO_EXPORT int indigoUnselect(int item);
 
 // Access atoms and bonds
-CEXPORT int indigoIsSelected(int item);
+INDIGO_EXPORT int indigoIsSelected(int item);
 
 /* Connected components of molecules */
 
-CEXPORT int indigoCountComponents(int molecule);
-CEXPORT int indigoComponentIndex(int atom);
-CEXPORT int indigoIterateComponents(int molecule);
+INDIGO_EXPORT int indigoCountComponents(int molecule);
+INDIGO_EXPORT int indigoComponentIndex(int atom);
+INDIGO_EXPORT int indigoIterateComponents(int molecule);
 
 // Returns a 'molecule component' object, which can not be used as a
 // [query] molecule, but supports the indigo{Count,Iterate}{Atoms,Bonds} calls,
 // and also the indigoClone() call, which returns a [query] molecule.
-CEXPORT int indigoComponent(int molecule, int index);
+INDIGO_EXPORT int indigoComponent(int molecule, int index);
 
 /* Smallest Set of Smallest Rings */
 
-CEXPORT int indigoCountSSSR(int molecule);
-CEXPORT int indigoIterateSSSR(int molecule);
+INDIGO_EXPORT int indigoCountSSSR(int molecule);
+INDIGO_EXPORT int indigoIterateSSSR(int molecule);
 
-CEXPORT int indigoIterateSubtrees(int molecule, int min_atoms, int max_atoms);
-CEXPORT int indigoIterateRings(int molecule, int min_atoms, int max_atoms);
-CEXPORT int indigoIterateEdgeSubmolecules(int molecule, int min_bonds, int max_bonds);
+INDIGO_EXPORT int indigoIterateSubtrees(int molecule, int min_atoms, int max_atoms);
+INDIGO_EXPORT int indigoIterateRings(int molecule, int min_atoms, int max_atoms);
+INDIGO_EXPORT int indigoIterateEdgeSubmolecules(int molecule, int min_bonds, int max_bonds);
 
 /* Calculation on molecules */
 
-CEXPORT int indigoCountHeavyAtoms(int molecule);
-CEXPORT int indigoGrossFormula(int molecule);
-CEXPORT double indigoMolecularWeight(int molecule);
-CEXPORT double indigoMostAbundantMass(int molecule);
-CEXPORT double indigoMonoisotopicMass(int molecule);
-CEXPORT const char* indigoMassComposition(int molecule);
-CEXPORT double indigoTPSA(int molecule, int includeSP);
-CEXPORT int indigoNumRotatableBonds(int molecule);
-CEXPORT int indigoNumHydrogenBondAcceptors(int molecule);
-CEXPORT int indigoNumHydrogenBondDonors(int molecule);
-CEXPORT double indigoLogP(int molecule);
-CEXPORT double indigoMolarRefractivity(int molecule);
-CEXPORT double indigoPka(int molecule);
+INDIGO_EXPORT int indigoCountHeavyAtoms(int molecule);
+INDIGO_EXPORT int indigoGrossFormula(int molecule);
+INDIGO_EXPORT double indigoMolecularWeight(int molecule);
+INDIGO_EXPORT double indigoMostAbundantMass(int molecule);
+INDIGO_EXPORT double indigoMonoisotopicMass(int molecule);
+INDIGO_EXPORT const char *indigoMassComposition(int molecule);
+INDIGO_EXPORT double indigoTPSA(int molecule, int includeSP);
+INDIGO_EXPORT int indigoNumRotatableBonds(int molecule);
+INDIGO_EXPORT int indigoNumHydrogenBondAcceptors(int molecule);
+INDIGO_EXPORT int indigoNumHydrogenBondDonors(int molecule);
+INDIGO_EXPORT double indigoLogP(int molecule);
+INDIGO_EXPORT double indigoMolarRefractivity(int molecule);
+INDIGO_EXPORT double indigoPka(int molecule);
 
-CEXPORT const char* indigoCanonicalSmiles(int molecule);
-CEXPORT const char* indigoLayeredCode(int molecule);
+INDIGO_EXPORT const char *indigoCanonicalSmiles(int molecule);
+INDIGO_EXPORT const char *indigoLayeredCode(int molecule);
 
-CEXPORT int64_t indigoHash(int chemicalObject);
+INDIGO_EXPORT int64_t indigoHash(int chemicalObject);
 
-CEXPORT const int* indigoSymmetryClasses(int molecule, int* count_out);
+INDIGO_EXPORT const int *indigoSymmetryClasses(int molecule, int *count_out);
 
-CEXPORT int indigoHasCoord(int molecule);
-CEXPORT int indigoHasZCoord(int molecule);
-CEXPORT int indigoIsChiral(int molecule);
-CEXPORT int indigoCheckChirality(int molecule);
-CEXPORT int indigoCheck3DStereo(int molecule);
-CEXPORT int indigoCheckStereo(int molecule);
+INDIGO_EXPORT int indigoHasCoord(int molecule);
+INDIGO_EXPORT int indigoHasZCoord(int molecule);
+INDIGO_EXPORT int indigoIsChiral(int molecule);
+INDIGO_EXPORT int indigoCheckChirality(int molecule);
+INDIGO_EXPORT int indigoCheck3DStereo(int molecule);
+INDIGO_EXPORT int indigoCheckStereo(int molecule);
 
-CEXPORT int indigoIsPossibleFischerProjection(int molecule, const char* options);
+INDIGO_EXPORT int indigoIsPossibleFischerProjection(int molecule, const char *options);
 
-CEXPORT int indigoCreateSubmolecule(int molecule, int nvertices, int* vertices);
-CEXPORT int indigoCreateEdgeSubmolecule(int molecule, int nvertices, int* vertices, int nedges, int* edges);
+INDIGO_EXPORT int indigoCreateSubmolecule(int molecule, int nvertices, int *vertices);
+INDIGO_EXPORT int indigoCreateEdgeSubmolecule(int molecule, int nvertices, int *vertices, int nedges, int *edges);
 
-CEXPORT int indigoGetSubmolecule(int molecule, int nvertices, int* vertices);
+INDIGO_EXPORT int indigoGetSubmolecule(int molecule, int nvertices, int *vertices);
 
-CEXPORT int indigoRemoveAtoms(int molecule, int nvertices, int* vertices);
-CEXPORT int indigoRemoveBonds(int molecule, int nbonds, int* bonds);
+INDIGO_EXPORT int indigoRemoveAtoms(int molecule, int nvertices, int *vertices);
+INDIGO_EXPORT int indigoRemoveBonds(int molecule, int nbonds, int *bonds);
 
 // Determines and applies the best transformation to the given molecule
 // so that the specified atoms move as close as possible to the desired
 // positions. The size of desired_xyz is equal to 3 * natoms.
 // The return value is the root-mean-square measure of the difference
 // between the desired and obtained positions.
-CEXPORT float indigoAlignAtoms(int molecule, int natoms, int* atom_ids, float* desired_xyz);
+INDIGO_EXPORT float indigoAlignAtoms(int molecule, int natoms, int *atom_ids, float *desired_xyz);
 
 /* Things that work for both molecules and reactions */
 
-CEXPORT int indigoAromatize(int item);
-CEXPORT int indigoDearomatize(int item);
+INDIGO_EXPORT int indigoAromatize(int item);
+INDIGO_EXPORT int indigoDearomatize(int item);
 
-CEXPORT int indigoFoldHydrogens(int item);
-CEXPORT int indigoUnfoldHydrogens(int item);
+INDIGO_EXPORT int indigoFoldHydrogens(int item);
+INDIGO_EXPORT int indigoUnfoldHydrogens(int item);
 
-CEXPORT int indigoLayout(int object);
-CEXPORT int indigoClean2d(int object);
+INDIGO_EXPORT int indigoLayout(int object);
+INDIGO_EXPORT int indigoClean2d(int object);
 
-CEXPORT const char* indigoSmiles(int item);
-CEXPORT const char* indigoSmarts(int item);
-CEXPORT const char* indigoCanonicalSmarts(int item);
+INDIGO_EXPORT const char *indigoSmiles(int item);
+INDIGO_EXPORT const char *indigoSmarts(int item);
+INDIGO_EXPORT const char *indigoCanonicalSmarts(int item);
 
 // Returns a "mapping" if there is an exact match, zero otherwise
 // The flags string consists of space-separated flags.
@@ -751,55 +739,55 @@
 // "FRA": Connected fragments: disallows match of separate ions in salts
 // "ALL": All of the above
 // By default (with null or empty flags string) all flags are on.
-CEXPORT int indigoExactMatch(int item1, int item2, const char* flags);
+INDIGO_EXPORT int indigoExactMatch(int item1, int item2, const char *flags);
 
 // "beg" and "end" refer to the two ends of the tautomeric chain. Allowed
 // elements are separated by commas. '1' at the beginning means an aromatic
 // atom, while '0' means an aliphatic atom.
-CEXPORT int indigoSetTautomerRule(int id, const char* beg, const char* end);
+INDIGO_EXPORT int indigoSetTautomerRule(int id, const char *beg, const char *end);
 
-CEXPORT int indigoRemoveTautomerRule(int id);
+INDIGO_EXPORT int indigoRemoveTautomerRule(int id);
 
-CEXPORT int indigoClearTautomerRules();
+INDIGO_EXPORT int indigoClearTautomerRules();
 
-CEXPORT const char* indigoName(int handle);
-CEXPORT int indigoSetName(int handle, const char* name);
+INDIGO_EXPORT const char *indigoName(int handle);
+INDIGO_EXPORT int indigoSetName(int handle, const char *name);
 
 // You should not free() the obtained buffer, but rather memcpy() it if you want to keep it
-CEXPORT int indigoSerialize(int handle, byte** buf, int* size);
+INDIGO_EXPORT int indigoSerialize(int handle, byte **buf, int *size);
 
-CEXPORT int indigoUnserialize(const byte* buf, int size);
+INDIGO_EXPORT int indigoUnserialize(const byte *buf, int size);
 
 // Applicable to molecules/reactions obtained from SDF or RDF files,
 // and to their clones, and to their R-Group deconvolutions.
-CEXPORT int indigoHasProperty(int handle, const char* prop);
-CEXPORT const char* indigoGetProperty(int handle, const char* prop);
+INDIGO_EXPORT int indigoHasProperty(int handle, const char *prop);
+INDIGO_EXPORT const char *indigoGetProperty(int handle, const char *prop);
 
 // Applicable to newly created or cloned molecules/reactions,
 // and also to molecules/reactions obtained from SDF or RDF files.
 // If the property with the given name does not exist, it is created automatically.
-CEXPORT int indigoSetProperty(int item, const char* prop, const char* value);
+INDIGO_EXPORT int indigoSetProperty(int item, const char *prop, const char *value);
 
 // Does not raise an error if the given property does not exist
-CEXPORT int indigoRemoveProperty(int item, const char* prop);
+INDIGO_EXPORT int indigoRemoveProperty(int item, const char *prop);
 
 // Returns an iterator that one can pass to indigoName() to
 // know the name of the property. The value of the property can be
 // obtained via indigoGetProperty() call to the object
-CEXPORT int indigoIterateProperties(int handle);
+INDIGO_EXPORT int indigoIterateProperties(int handle);
 
 // Clears all properties of the molecule
-CEXPORT int indigoClearProperties(int handle);
+INDIGO_EXPORT int indigoClearProperties(int handle);
 
 // Accepts a molecule or reaction (but not query molecule or query reaction).
 // Returns a string describing the first encountered mistake with valence.
 // Returns an empty string if the input molecule/reaction is fine.
-CEXPORT const char* indigoCheckBadValence(int handle);
+INDIGO_EXPORT const char *indigoCheckBadValence(int handle);
 
 // Accepts a molecule or reaction (but not query molecule or query reaction).
 // Returns a string describing the first encountered mistake with ambiguous H counter.
 // Returns an empty string if the input molecule/reaction is fine.
-CEXPORT const char* indigoCheckAmbiguousH(int handle);
+INDIGO_EXPORT const char *indigoCheckAmbiguousH(int handle);
 
 /* Fingerprints */
 
@@ -817,119 +805,119 @@
 //                 substructure screening
 //   "full"    -- "Full fingerprint", which has all the mentioned
 //                 fingerprint types included
-CEXPORT int indigoFingerprint(int item, const char* type);
+INDIGO_EXPORT int indigoFingerprint(int item, const char *type);
 
 // Counts the nonzero (i.e. one) bits in a fingerprint
-CEXPORT int indigoCountBits(int fingerprint);
+INDIGO_EXPORT int indigoCountBits(int fingerprint);
 
 // Counts the number of the coinincident in two fingerprints
-CEXPORT int indigoCommonBits(int fingerprint1, int fingerprint2);
+INDIGO_EXPORT int indigoCommonBits(int fingerprint1, int fingerprint2);
 
 // Return one bits string for the fingerprint object
-CEXPORT const char* indigoOneBitsList(int fingerprint);
+INDIGO_EXPORT const char *indigoOneBitsList(int fingerprint);
 
 // Returns a 'fingerprint' object with data from 'buffer'
-CEXPORT int indigoLoadFingerprintFromBuffer(const byte* buffer, int size);
+INDIGO_EXPORT int indigoLoadFingerprintFromBuffer(const byte *buffer, int size);
 
 // Constructs a 'fingerprint' object from a normalized array of double descriptors
-CEXPORT int indigoLoadFingerprintFromDescriptors(const double* arr, int arr_len, int size, double density);
+INDIGO_EXPORT int indigoLoadFingerprintFromDescriptors(const double *arr, int arr_len, int size, double density);
 
 // Accepts two molecules, two reactions, or two fingerprints.
 // Returns the similarity measure between them.
 // Metrics: "tanimoto", "tversky", "tversky <alpha> <beta>", "euclid-sub" or "normalized-edit"
 // Zero pointer or empty string defaults to "tanimoto".
 // "tversky" without numbers defaults to alpha = beta = 0.5
-CEXPORT float indigoSimilarity(int item1, int item2, const char* metrics);
+INDIGO_EXPORT float indigoSimilarity(int item1, int item2, const char *metrics);
 
 /* Working with SDF/RDF/SMILES/CML/CDX files  */
 
-CEXPORT int indigoIterateSDF(int reader);
-CEXPORT int indigoIterateRDF(int reader);
-CEXPORT int indigoIterateSmiles(int reader);
-CEXPORT int indigoIterateCML(int reader);
-CEXPORT int indigoIterateCDX(int reader);
+INDIGO_EXPORT int indigoIterateSDF(int reader);
+INDIGO_EXPORT int indigoIterateRDF(int reader);
+INDIGO_EXPORT int indigoIterateSmiles(int reader);
+INDIGO_EXPORT int indigoIterateCML(int reader);
+INDIGO_EXPORT int indigoIterateCDX(int reader);
 
-CEXPORT int indigoIterateSDFile(const char* filename);
-CEXPORT int indigoIterateRDFile(const char* filename);
-CEXPORT int indigoIterateSmilesFile(const char* filename);
-CEXPORT int indigoIterateCMLFile(const char* filename);
-CEXPORT int indigoIterateCDXFile(const char* filename);
+INDIGO_EXPORT int indigoIterateSDFile(const char *filename);
+INDIGO_EXPORT int indigoIterateRDFile(const char *filename);
+INDIGO_EXPORT int indigoIterateSmilesFile(const char *filename);
+INDIGO_EXPORT int indigoIterateCMLFile(const char *filename);
+INDIGO_EXPORT int indigoIterateCDXFile(const char *filename);
 
 // Applicable to items returned by SDF/RDF iterators.
 // Returns the content of SDF/RDF item.
-CEXPORT const char* indigoRawData(int item);
+INDIGO_EXPORT const char *indigoRawData(int item);
 
 // Applicable to items returned by SDF/RDF iterators.
 // Returns the offset in the SDF/RDF file.
-CEXPORT int indigoTell(int handle);
-CEXPORT long long indigoTell64(int handle);
+INDIGO_EXPORT int indigoTell(int handle);
+INDIGO_EXPORT long long indigoTell64(int handle);
 
 // Saves the molecule to an SDF output stream
-CEXPORT int indigoSdfAppend(int output, int item);
+INDIGO_EXPORT int indigoSdfAppend(int output, int item);
 // Saves the molecule to a multiline SMILES output stream
-CEXPORT int indigoSmilesAppend(int output, int item);
+INDIGO_EXPORT int indigoSmilesAppend(int output, int item);
 
 // Similarly for RDF files, except that the header should be written first
-CEXPORT int indigoRdfHeader(int output);
-CEXPORT int indigoRdfAppend(int output, int item);
+INDIGO_EXPORT int indigoRdfHeader(int output);
+INDIGO_EXPORT int indigoRdfAppend(int output, int item);
 
 // Similarly for CML files, except that they have both header and footer
-CEXPORT int indigoCmlHeader(int output);
-CEXPORT int indigoCmlAppend(int output, int item);
-CEXPORT int indigoCmlFooter(int output);
+INDIGO_EXPORT int indigoCmlHeader(int output);
+INDIGO_EXPORT int indigoCmlAppend(int output, int item);
+INDIGO_EXPORT int indigoCmlFooter(int output);
 
 // Create saver objects that can be used to save molecules or reactions
 // Supported formats: 'sdf', 'smi' or 'smiles', 'cml', 'rdf'
 // Format argument is case-insensitive
 // Saver should be closed with indigoClose function
-CEXPORT int indigoCreateSaver(int output, const char* format);
-CEXPORT int indigoCreateFileSaver(const char* filename, const char* format);
+INDIGO_EXPORT int indigoCreateSaver(int output, const char *format);
+INDIGO_EXPORT int indigoCreateFileSaver(const char *filename, const char *format);
 
 // Append object to a specified saver stream
-CEXPORT int indigoAppend(int saver, int object);
+INDIGO_EXPORT int indigoAppend(int saver, int object);
 
 /* Arrays */
 
-CEXPORT int indigoCreateArray();
+INDIGO_EXPORT int indigoCreateArray();
 // Note: a clone of the object is added, not the object itself
-CEXPORT int indigoArrayAdd(int arr, int object);
-CEXPORT int indigoAt(int item, int index);
-CEXPORT int indigoCount(int item);
-CEXPORT int indigoClear(int arr);
-CEXPORT int indigoIterateArray(int arr);
+INDIGO_EXPORT int indigoArrayAdd(int arr, int object);
+INDIGO_EXPORT int indigoAt(int item, int index);
+INDIGO_EXPORT int indigoCount(int item);
+INDIGO_EXPORT int indigoClear(int arr);
+INDIGO_EXPORT int indigoIterateArray(int arr);
 
 /* Substructure matching */
 
 // Returns a new 'matcher' object
 // 'mode' is reserved for future use; currently its value is ignored
-CEXPORT int indigoSubstructureMatcher(int target, const char* mode);
+INDIGO_EXPORT int indigoSubstructureMatcher(int target, const char *mode);
 
 // Ignore target atom in the substructure matcher
-CEXPORT int indigoIgnoreAtom(int matcher, int atom_object);
+INDIGO_EXPORT int indigoIgnoreAtom(int matcher, int atom_object);
 
 // Ignore target atom in the substructure matcher
-CEXPORT int indigoUnignoreAtom(int matcher, int atom_object);
+INDIGO_EXPORT int indigoUnignoreAtom(int matcher, int atom_object);
 
 // Clear list of ignored target atoms in the substructure matcher
-CEXPORT int indigoUnignoreAllAtoms(int matcher);
+INDIGO_EXPORT int indigoUnignoreAllAtoms(int matcher);
 
 // Returns a new 'match' object on success, zero on fail
 //    matcher is an matcher object returned by indigoSubstructureMatcher
-CEXPORT int indigoMatch(int matcher, int query);
+INDIGO_EXPORT int indigoMatch(int matcher, int query);
 
 // Counts the number of embeddings of the query structure into the target
-CEXPORT int indigoCountMatches(int matcher, int query);
+INDIGO_EXPORT int indigoCountMatches(int matcher, int query);
 
 // Counts the number of embeddings of the query structure into the target
 // If number of embeddings is more then limit then limit is returned
-CEXPORT int indigoCountMatchesWithLimit(int matcher, int query, int embeddings_limit);
+INDIGO_EXPORT int indigoCountMatchesWithLimit(int matcher, int query, int embeddings_limit);
 
 // Returns substructure matches iterator
-CEXPORT int indigoIterateMatches(int matcher, int query);
+INDIGO_EXPORT int indigoIterateMatches(int matcher, int query);
 
 // Accepts a 'match' object obtained from indigoMatchSubstructure.
 // Returns a new molecule which has the query highlighted.
-CEXPORT int indigoHighlightedTarget(int match);
+INDIGO_EXPORT int indigoHighlightedTarget(int match);
 
 // Accepts an atom from the query, not an atom index.
 //   You can use indigoGetAtom() to obtain the atom by its index.
@@ -937,7 +925,7 @@
 // atom doesn't match particular atom in the target (R-group or explicit
 // hydrogen) then return value is zero.
 //   You can use indigoIndex() to obtain the index of the returned atom.
-CEXPORT int indigoMapAtom(int handle, int atom);
+INDIGO_EXPORT int indigoMapAtom(int handle, int atom);
 
 // Accepts a bond from the query, not a bond index.
 //   You can use indigoGetBond() to obtain the bond by its index.
@@ -945,7 +933,7 @@
 // bond doesn't match particular bond in the target (R-group or explicit
 // hydrogen) then return value is zero.
 //   You can use indigoIndex() to obtain the index of the returned bond.
-CEXPORT int indigoMapBond(int handle, int bond);
+INDIGO_EXPORT int indigoMapBond(int handle, int bond);
 
 // Accepts a molecule from the query reaction, not a molecule index.
 //   You can use indigoGetMolecule() to obtain the bond by its index.
@@ -953,11 +941,11 @@
 // molecule doesn't match particular molecule in the target then return
 // value is zero.
 //   You can use indigoIndex() to obtain the index of the returned molecule.
-CEXPORT int indigoMapMolecule(int handle, int molecule);
+INDIGO_EXPORT int indigoMapMolecule(int handle, int molecule);
 
 // Accepts a molecule and options for tautomer enumeration algorithms
 // Returns an iterator object over the molecules that are tautomers of this molecule.
-CEXPORT int indigoIterateTautomers(int molecule, const char* options);
+INDIGO_EXPORT int indigoIterateTautomers(int molecule, const char *options);
 
 /* Scaffold detection */
 
@@ -966,91 +954,93 @@
 //   (i) treated as a structure: the maximum (by the number of rings) common
 //       substructure of the given structures.
 //  (ii) passed to indigoAllScaffolds()
-CEXPORT int indigoExtractCommonScaffold(int structures, const char* options);
+INDIGO_EXPORT int indigoExtractCommonScaffold(int structures, const char *options);
 
 // Returns an array of all possible scaffolds.
 // The input parameter is the value returned by indigoExtractCommonScaffold().
-CEXPORT int indigoAllScaffolds(int extracted);
+INDIGO_EXPORT int indigoAllScaffolds(int extracted);
 
 /* R-Group deconvolution */
 
 // Returns a ``decomposition'' object that can be passed to
 // indigoDecomposedMoleculeScaffold() and
 // indigoIterateDecomposedMolecules()
-CEXPORT int indigoDecomposeMolecules(int scaffold, int structures);
+INDIGO_EXPORT int indigoDecomposeMolecules(int scaffold, int structures);
 
 // Returns a scaffold molecule with r-sites marking the place
 // for substituents to add to form the structures given above.
-CEXPORT int indigoDecomposedMoleculeScaffold(int decomp);
+INDIGO_EXPORT int indigoDecomposedMoleculeScaffold(int decomp);
 
 // Returns an iterator which corresponds to the given collection of structures.
 // indigoDecomposedMoleculeHighlighted() and
 // indigoDecomposedMoleculeWithRGroups() are applicable to the
 // values returned by the iterator.
-CEXPORT int indigoIterateDecomposedMolecules(int decomp);
+INDIGO_EXPORT int indigoIterateDecomposedMolecules(int decomp);
 
 // Returns a molecule with highlighted scaffold
-CEXPORT int indigoDecomposedMoleculeHighlighted(int decomp);
+INDIGO_EXPORT int indigoDecomposedMoleculeHighlighted(int decomp);
 
 // Returns a query molecule with r-sites and "R1=...", "R2=..."
 // substituents defined. The 'scaffold' part of the molecule
 // is identical to the indigoDecomposedMoleculeScaffold()
-CEXPORT int indigoDecomposedMoleculeWithRGroups(int decomp);
+INDIGO_EXPORT int indigoDecomposedMoleculeWithRGroups(int decomp);
 
 /*
  * Decomposition Iteration API
  */
 // Returns a 'decomposition' object
-CEXPORT int indigoCreateDecomposer(int scaffold);
+INDIGO_EXPORT int indigoCreateDecomposer(int scaffold);
 // Returns a 'decomposition' item
-CEXPORT int indigoDecomposeMolecule(int decomp, int mol);
+INDIGO_EXPORT int indigoDecomposeMolecule(int decomp, int mol);
 // Returns decomposition iterator
-CEXPORT int indigoIterateDecompositions(int deco_item);
+INDIGO_EXPORT int indigoIterateDecompositions(int deco_item);
 // Adds the input decomposition to a full scaffold
-CEXPORT int indigoAddDecomposition(int decomp, int q_match);
+INDIGO_EXPORT int indigoAddDecomposition(int decomp, int q_match);
 
 /* R-Group convolution */
 
-CEXPORT int indigoGetFragmentedMolecule(int elem, const char* options);
-CEXPORT int indigoRGroupComposition(int molecule, const char* options);
+INDIGO_EXPORT int indigoGetFragmentedMolecule(int elem, const char *options);
+INDIGO_EXPORT int indigoRGroupComposition(int molecule, const char *options);
 
 /*
  * Abbreviations
  */
-CEXPORT int indigoExpandAbbreviations(int molecule);
+INDIGO_EXPORT int indigoExpandAbbreviations(int molecule);
 
 /* Other */
 
-CEXPORT const char* indigoToString(int handle);
-CEXPORT const char* indigoToBase64String(int handle);
-CEXPORT int indigoToBuffer(int handle, char** buf, int* size);
+INDIGO_EXPORT const char *indigoToString(int handle);
+INDIGO_EXPORT const char *indigoToBase64String(int handle);
+INDIGO_EXPORT int indigoToBuffer(int handle, char **buf, int *size);
 
 /* Reaction products enumeration */
 
 // Accepts a query reaction with markd R-sites, and array of arrays
 // of substituents corresponding to the R-Sites. Returns an array of
 // reactions with R-Sites replaced by the actual substituents.
-CEXPORT int indigoReactionProductEnumerate(int reaction, int monomers);
+INDIGO_EXPORT int indigoReactionProductEnumerate(int reaction, int monomers);
 
-CEXPORT int indigoTransform(int reaction, int monomers);
+INDIGO_EXPORT int indigoTransform(int reaction, int monomers);
 
-CEXPORT int indigoTransformHELMtoSCSR(int monomer);
+INDIGO_EXPORT int indigoTransformHELMtoSCSR(int monomer);
 
 /* Debug functionality */
 
 // Returns internal type of an object
-CEXPORT const char* indigoDbgInternalType(int object);
+INDIGO_EXPORT const char *indigoDbgInternalType(int object);
 
 // Internal breakpoint
-CEXPORT void indigoDbgBreakpoint(void);
+INDIGO_EXPORT void indigoDbgBreakpoint(void);
 
 // Methods that returns profiling infromation in a human readable format
-CEXPORT const char* indigoDbgProfiling(int /*bool*/ whole_session);
+INDIGO_EXPORT const char *indigoDbgProfiling(int /*bool*/ whole_session);
 
 // Reset profiling counters either for the current state or for the whole session
-CEXPORT int indigoDbgResetProfiling(int /*bool*/ whole_session);
+INDIGO_EXPORT int indigoDbgResetProfiling(int /*bool*/ whole_session);
 
 // Methods that returns profiling counter value for a particular counter
-CEXPORT qword indigoDbgProfilingGetCounter(const char* name, int /*bool*/ whole_session);
-
+INDIGO_EXPORT qword indigoDbgProfilingGetCounter(const char *name, int /*bool*/ whole_session);
+#ifdef __cplusplus
+}
+#endif
 #endif
Index: rdkit-src/rdkit/Code/GraphMol/Canon.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/Canon.cpp b/rdkit-src/rdkit/Code/GraphMol/Canon.cpp
--- a/rdkit-src/rdkit/Code/GraphMol/Canon.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/Canon.cpp	(date 1693030079721)
@@ -79,7 +79,7 @@
            !details::isUnsaturated(atom, mol)));
 }
 
-auto _possibleCompare = [](const PossibleType &arg1, const PossibleType &arg2) {
+const auto _possibleCompare = [](const PossibleType &arg1, const PossibleType &arg2) {
   return (std::get<0>(arg1) < std::get<0>(arg2));
 };
 
Index: rdkit-src/rdkit/Code/ForceField/MMFF/Params.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/ForceField/MMFF/Params.cpp b/rdkit-src/rdkit/Code/ForceField/MMFF/Params.cpp
--- a/rdkit-src/rdkit/Code/ForceField/MMFF/Params.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/ForceField/MMFF/Params.cpp	(date 1693030079440)
@@ -10,7 +10,7 @@
 //  which is included in the file license.txt, found at the root
 //  of the RDKit source tree.
 //
-#ifdef WIN32
+#if defined(WIN32) && !defined(_USE_MATH_DEFINES)
 #define _USE_MATH_DEFINES
 #endif
 #include <cmath>
Index: yaehmop-src/yaehmop/tightbind/charge_mat.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/yaehmop-src/yaehmop/tightbind/charge_mat.c b/yaehmop-src/yaehmop/tightbind/charge_mat.c
--- a/yaehmop-src/yaehmop/tightbind/charge_mat.c	(revision c81f41694bcffccf38e17a63627a862628294613)
+++ b/yaehmop-src/yaehmop/tightbind/charge_mat.c	(date 1693030079857)
@@ -159,7 +159,7 @@
  *     num_atoms * num_orbs
  *
  ****************************************************************************/
-void reduced_charge_mat(num_atoms,num_orbs,orbital_lookup_table,Chg_matrix,RChg_matrix)
+void reduced_charge_matrix(num_atoms,num_orbs,orbital_lookup_table,Chg_matrix,RChg_matrix)
   int num_atoms,num_orbs,*orbital_lookup_table;
   real *Chg_matrix;
   real *RChg_matrix;
@@ -193,4 +193,4 @@
       }
     }
   }
-}
\ No newline at end of file
+}
Index: yaehmop-src/yaehmop/tightbind/abfns.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/yaehmop-src/yaehmop/tightbind/abfns.c b/yaehmop-src/yaehmop/tightbind/abfns.c
--- a/yaehmop-src/yaehmop/tightbind/abfns.c	(revision c81f41694bcffccf38e17a63627a862628294613)
+++ b/yaehmop-src/yaehmop/tightbind/abfns.c	(date 1693030079836)
@@ -2,7 +2,15 @@
 Produced by gmFortran V30.59(10/26/17) on 9/17/18 at 9:45:37
 */
 #define LPROTOTYPE
-#include "fortran.h"
+#include <math.h>
+#include <stdlib.h>
+#ifndef min
+#define min(x, y) ({				\
+	typeof(x) _min1 = (x);			\
+	typeof(y) _min2 = (y);			\
+	(void) (&_min1 == &_min2);		\
+	_min1 < _min2 ? _min1 : _min2; })
+#endif
 /*
 */
 void abfns(double *a,double *b,double *sk1,double *sk2,double *rr,int *l1,
@@ -55,7 +63,7 @@
     }
     ix = j;
     ir = fabs(2.e0*rho2);
-    is = fifmin0(ir+1,19);
+    is = min(ir+1,19);
     if(rho2 == 0) goto S35;
     d = exp(rho2);
     h = 1.e0/d;
Index: indigo-src/indigo/api/c/indigo/src/indigo_calc.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_calc.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_calc.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_calc.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_calc.cpp	(date 1693030077046)
@@ -37,7 +37,7 @@
     ReactionGrossFormula::toString_Hill(*gross, str, self.gross_formula_options.add_rsites);
 }
 
-CEXPORT int indigoGrossFormula(int object)
+int indigoGrossFormula(int object)
 {
     INDIGO_BEGIN
     {
@@ -81,7 +81,7 @@
     }
 }
 
-CEXPORT double indigoMolecularWeight(int molecule)
+double indigoMolecularWeight(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -93,7 +93,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT double indigoMostAbundantMass(int molecule)
+double indigoMostAbundantMass(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -105,7 +105,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT double indigoMonoisotopicMass(int molecule)
+double indigoMonoisotopicMass(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -117,7 +117,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoMassComposition(int molecule)
+const char* indigoMassComposition(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -133,7 +133,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT double indigoTPSA(const int molecule, const int includeSP)
+double indigoTPSA(const int molecule, const int includeSP)
 {
     INDIGO_BEGIN
     {
@@ -148,7 +148,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoNumRotatableBonds(const int molecule)
+int indigoNumRotatableBonds(const int molecule)
 {
     INDIGO_BEGIN
     {
@@ -163,7 +163,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoNumHydrogenBondAcceptors(const int molecule)
+int indigoNumHydrogenBondAcceptors(const int molecule)
 {
     INDIGO_BEGIN
     {
@@ -178,7 +178,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoNumHydrogenBondDonors(const int molecule)
+int indigoNumHydrogenBondDonors(const int molecule)
 {
     INDIGO_BEGIN
     {
@@ -193,7 +193,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT double indigoLogP(const int molecule)
+double indigoLogP(const int molecule)
 {
     INDIGO_BEGIN
     {
@@ -208,7 +208,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT double indigoMolarRefractivity(const int molecule)
+double indigoMolarRefractivity(const int molecule)
 {
     INDIGO_BEGIN
     {
@@ -223,7 +223,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT double indigoPka(const int molecule)
+double indigoPka(const int molecule)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_misc.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_misc.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_misc.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_misc.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_misc.cpp	(date 1693030077093)
@@ -42,7 +42,7 @@
 #include "indigo_savers.h"
 #include "indigo_structure_checker.h"
 
-CEXPORT int indigoAromatize(int object)
+int indigoAromatize(int object)
 {
     INDIGO_BEGIN
     {
@@ -58,7 +58,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoDearomatize(int object)
+int indigoDearomatize(int object)
 {
     INDIGO_BEGIN
     {
@@ -78,7 +78,7 @@
 }
 
 #define INDIGO_SET_OPTION(SUFFIX, TYPE)                                                                                                                        \
-    CEXPORT int indigoSetOption##SUFFIX(const char* name, TYPE value)                                                                                          \
+    int indigoSetOption##SUFFIX(const char* name, TYPE value)                                                                                          \
     {                                                                                                                                                          \
         INDIGO_BEGIN                                                                                                                                           \
         {                                                                                                                                                      \
@@ -93,7 +93,7 @@
 INDIGO_SET_OPTION(Bool, int)
 INDIGO_SET_OPTION(Float, float)
 
-CEXPORT int indigoSetOptionColor(const char* name, float r, float g, float b)
+int indigoSetOptionColor(const char* name, float r, float g, float b)
 {
     INDIGO_BEGIN
     {
@@ -102,7 +102,7 @@
     }
     INDIGO_END(-1);
 }
-CEXPORT int indigoSetOptionXY(const char* name, int x, int y)
+int indigoSetOptionXY(const char* name, int x, int y)
 {
     INDIGO_BEGIN
     {
@@ -112,7 +112,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoGetOption(const char* name)
+const char* indigoGetOption(const char* name)
 {
     INDIGO_BEGIN
     {
@@ -123,7 +123,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoGetOptionInt(const char* name, int* value)
+int indigoGetOptionInt(const char* name, int* value)
 {
     INDIGO_BEGIN
     {
@@ -136,7 +136,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetOptionBool(const char* name, int* value)
+int indigoGetOptionBool(const char* name, int* value)
 {
     INDIGO_BEGIN
     {
@@ -149,7 +149,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetOptionFloat(const char* name, float* value)
+int indigoGetOptionFloat(const char* name, float* value)
 {
     INDIGO_BEGIN
     {
@@ -162,7 +162,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetOptionColor(const char* name, float* r, float* g, float* b)
+int indigoGetOptionColor(const char* name, float* r, float* g, float* b)
 {
     INDIGO_BEGIN
     {
@@ -175,7 +175,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetOptionXY(const char* name, int* x, int* y)
+int indigoGetOptionXY(const char* name, int* x, int* y)
 {
     INDIGO_BEGIN
     {
@@ -188,7 +188,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoGetOptionType(const char* name)
+const char* indigoGetOptionType(const char* name)
 {
     INDIGO_BEGIN
     {
@@ -199,7 +199,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoResetOptions()
+int indigoResetOptions()
 {
     INDIGO_BEGIN
     {
@@ -229,7 +229,7 @@
     }
 }
 
-CEXPORT const char* indigoCheckBadValence(int handle)
+const char* indigoCheckBadValence(int handle)
 {
     INDIGO_BEGIN
     {
@@ -318,7 +318,7 @@
         }
 }
 
-CEXPORT const char* indigoCheckAmbiguousH(int handle)
+const char* indigoCheckAmbiguousH(int handle)
 {
     INDIGO_BEGIN
     {
@@ -375,7 +375,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoSmiles(int item)
+const char* indigoSmiles(int item)
 {
     INDIGO_BEGIN
     {
@@ -387,7 +387,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoCanonicalSmiles(int item)
+const char* indigoCanonicalSmiles(int item)
 {
     INDIGO_BEGIN
     {
@@ -400,7 +400,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int64_t indigoHash(int item)
+int64_t indigoHash(int item)
 {
     INDIGO_BEGIN
     {
@@ -421,7 +421,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoSmarts(int item)
+const char* indigoSmarts(int item)
 {
     INDIGO_BEGIN
     {
@@ -434,7 +434,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoCanonicalSmarts(int item)
+const char* indigoCanonicalSmarts(int item)
 {
     INDIGO_BEGIN
     {
@@ -447,7 +447,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoUnfoldHydrogens(int item)
+int indigoUnfoldHydrogens(int item)
 {
     INDIGO_BEGIN
     {
@@ -499,7 +499,7 @@
     return to_remove.size() > 0;
 }
 
-CEXPORT int indigoFoldHydrogens(int item)
+int indigoFoldHydrogens(int item)
 {
     INDIGO_BEGIN
     {
@@ -523,7 +523,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetName(int handle, const char* name)
+int indigoSetName(int handle, const char* name)
 {
     INDIGO_BEGIN
     {
@@ -540,7 +540,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoName(int handle)
+const char* indigoName(int handle)
 {
     INDIGO_BEGIN
     {
@@ -549,7 +549,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoRawData(int handler)
+const char* indigoRawData(int handler)
 {
     INDIGO_BEGIN
     {
@@ -579,7 +579,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoRemove(int item)
+int indigoRemove(int item)
 {
     INDIGO_BEGIN
     {
@@ -591,7 +591,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAt(int item, int index)
+int indigoAt(int item, int index)
 {
     INDIGO_BEGIN
     {
@@ -636,7 +636,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCount(int item)
+int indigoCount(int item)
 {
     INDIGO_BEGIN
     {
@@ -659,7 +659,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSerialize(int item, byte** buf, int* size)
+int indigoSerialize(int item, byte** buf, int* size)
 {
     INDIGO_BEGIN
     {
@@ -696,7 +696,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoUnserialize(const byte* buf, int size)
+int indigoUnserialize(const byte* buf, int size)
 {
     INDIGO_BEGIN
     {
@@ -722,7 +722,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClear(int item)
+int indigoClear(int item)
 {
     INDIGO_BEGIN
     {
@@ -745,7 +745,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoHighlight(int item)
+int indigoHighlight(int item)
 {
     INDIGO_BEGIN
     {
@@ -771,7 +771,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoUnhighlight(int item)
+int indigoUnhighlight(int item)
 {
     INDIGO_BEGIN
     {
@@ -809,7 +809,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIsHighlighted(int item)
+int indigoIsHighlighted(int item)
 {
     INDIGO_BEGIN
     {
@@ -835,7 +835,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSelect(int item)
+int indigoSelect(int item)
 {
     INDIGO_BEGIN
     {
@@ -861,7 +861,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoUnselect(int item)
+int indigoUnselect(int item)
 {
     INDIGO_BEGIN
     {
@@ -899,7 +899,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIsSelected(int item)
+int indigoIsSelected(int item)
 {
     INDIGO_BEGIN
     {
@@ -925,7 +925,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoOptimize(int query, const char* options)
+int indigoOptimize(int query, const char* options)
 {
     INDIGO_BEGIN
     {
@@ -981,17 +981,17 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoHasZCoord(int item)
+int indigoHasZCoord(int item)
 {
     return _indigoHasCoord(item, BaseMolecule::hasZCoord, "indigoHasZCoord");
 }
 
-CEXPORT int indigoHasCoord(int item)
+int indigoHasCoord(int item)
 {
     return _indigoHasCoord(item, BaseMolecule::hasCoord, "indigoHasCoord");
 }
 
-CEXPORT const char* indigoDbgInternalType(int object)
+const char* indigoDbgInternalType(int object)
 {
     INDIGO_BEGIN
     {
@@ -1006,7 +1006,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoNormalize(int structure, const char* options)
+int indigoNormalize(int structure, const char* options)
 {
     INDIGO_BEGIN
     {
@@ -1057,7 +1057,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoStandardize(int object)
+int indigoStandardize(int object)
 {
     INDIGO_BEGIN
     {
@@ -1082,7 +1082,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIonize(int object, float pH, float pH_toll)
+int indigoIonize(int object, float pH, float pH_toll)
 {
     INDIGO_BEGIN
     {
@@ -1094,7 +1094,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoBuildPkaModel(int max_level, float threshold, const char* filename)
+int indigoBuildPkaModel(int max_level, float threshold, const char* filename)
 {
     INDIGO_BEGIN
     {
@@ -1106,7 +1106,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT float* indigoGetAcidPkaValue(int object, int atom, int level, int min_level)
+float* indigoGetAcidPkaValue(int object, int atom, int level, int min_level)
 {
     INDIGO_BEGIN
     {
@@ -1129,7 +1129,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT float* indigoGetBasicPkaValue(int object, int atom, int level, int min_level)
+float* indigoGetBasicPkaValue(int object, int atom, int level, int min_level)
 {
     INDIGO_BEGIN
     {
@@ -1152,7 +1152,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoIsPossibleFischerProjection(int object, const char* options)
+int indigoIsPossibleFischerProjection(int object, const char* options)
 {
     INDIGO_BEGIN
     {
@@ -1205,7 +1205,7 @@
     }
 }
 
-CEXPORT int indigoTransformHELMtoSCSR(int object)
+int indigoTransformHELMtoSCSR(int object)
 {
     INDIGO_BEGIN
     {
@@ -1254,7 +1254,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCheckQuery(int item)
+int indigoCheckQuery(int item)
 {
     INDIGO_BEGIN
     {
@@ -1297,7 +1297,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCheckChirality(int item)
+int indigoCheckChirality(int item)
 {
     INDIGO_BEGIN
     {
@@ -1321,7 +1321,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCheck3DStereo(int item)
+int indigoCheck3DStereo(int item)
 {
     INDIGO_BEGIN
     {
@@ -1358,7 +1358,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCheckStereo(int item)
+int indigoCheckStereo(int item)
 {
     INDIGO_BEGIN
     {
@@ -1401,7 +1401,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoCheck(const char* item, const char* check_flags, const char* load_params)
+const char* indigoCheck(const char* item, const char* check_flags, const char* load_params)
 {
     INDIGO_BEGIN
     {
@@ -1416,7 +1416,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoCheckObj(int item, const char* check_flags)
+const char* indigoCheckObj(int item, const char* check_flags)
 {
     INDIGO_BEGIN
     {
@@ -1430,7 +1430,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoCheckStructure(const char* structure, const char* props)
+const char* indigoCheckStructure(const char* structure, const char* props)
 {
     INDIGO_BEGIN
     {
@@ -1456,7 +1456,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoJson(int item)
+const char* indigoJson(int item)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_savers.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_savers.h b/indigo-src/indigo/api/c/indigo/src/indigo_savers.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_savers.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_savers.h	(date 1693030077124)
@@ -26,7 +26,7 @@
 
 #include "indigo_internal.h"
 
-class DLLEXPORT IndigoSaver : public IndigoObject
+class INDIGO_EXPORT IndigoSaver : public IndigoObject
 {
 public:
     IndigoSaver(Output& output);
Index: indigo-src/indigo/api/c/indigo/src/indigo_match.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_match.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_match.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_match.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_match.cpp	(date 1693030077093)
@@ -72,7 +72,7 @@
     label_list.push(Element::fromString(buf.ptr()));
 }
 
-CEXPORT int indigoSetTautomerRule(int n, const char* beg, const char* end)
+int indigoSetTautomerRule(int n, const char* beg, const char* end)
 {
     INDIGO_BEGIN
     {
@@ -91,7 +91,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClearTautomerRules()
+int indigoClearTautomerRules()
 {
     INDIGO_BEGIN
     {
@@ -101,7 +101,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoRemoveTautomerRule(int n)
+int indigoRemoveTautomerRule(int n)
 {
     INDIGO_BEGIN
     {
@@ -111,7 +111,7 @@
     INDIGO_END(-1);
 }
 
-DLLEXPORT bool _indigoParseTautomerFlags(const char* flags, IndigoTautomerParams& params)
+bool _indigoParseTautomerFlags(const char* flags, IndigoTautomerParams& params)
 {
     if (flags == 0)
         return false;
@@ -135,7 +135,7 @@
     return true;
 }
 
-DLLEXPORT int _indigoParseExactFlags(const char* flags, bool reaction, float* rms_threshold)
+int _indigoParseExactFlags(const char* flags, bool reaction, float* rms_threshold)
 {
     if (flags == 0)
         throw IndigoError("_indigoParseExactFlags(): zero string pointer");
@@ -243,7 +243,7 @@
     return res;
 }
 
-CEXPORT int indigoExactMatch(int handler1, int handler2, const char* flags)
+int indigoExactMatch(int handler1, int handler2, const char* flags)
 {
     INDIGO_BEGIN
     {
@@ -727,7 +727,7 @@
     return true;
 }
 
-CEXPORT int indigoSubstructureMatcher(int target, const char* mode_str)
+int indigoSubstructureMatcher(int target, const char* mode_str)
 {
     INDIGO_BEGIN
     {
@@ -797,7 +797,7 @@
                                        method);
 }
 
-CEXPORT int indigoIgnoreAtom(int target_matcher, int atom_object)
+int indigoIgnoreAtom(int target_matcher, int atom_object)
 {
     INDIGO_BEGIN
     {
@@ -811,7 +811,7 @@
 }
 
 // Ignore target atom in the substructure matcher
-CEXPORT int indigoUnignoreAtom(int target_matcher, int atom_object)
+int indigoUnignoreAtom(int target_matcher, int atom_object)
 {
     INDIGO_BEGIN
     {
@@ -824,7 +824,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoUnignoreAllAtoms(int target_matcher)
+int indigoUnignoreAllAtoms(int target_matcher)
 {
     INDIGO_BEGIN
     {
@@ -835,7 +835,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoMatch(int target_matcher, int query)
+int indigoMatch(int target_matcher, int query)
 {
     INDIGO_BEGIN
     {
@@ -947,7 +947,7 @@
     return indigoCountMatchesWithLimit(target_matcher, query, 0);
 }
 
-CEXPORT int indigoCountMatchesWithLimit(int target_matcher, int query, int embeddings_limit)
+int indigoCountMatchesWithLimit(int target_matcher, int query, int embeddings_limit)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_fingerprints.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_fingerprints.h b/indigo-src/indigo/api/c/indigo/src/indigo_fingerprints.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_fingerprints.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_fingerprints.h	(date 1693030077061)
@@ -26,7 +26,7 @@
 #pragma warning(disable : 4251)
 #endif
 
-class DLLEXPORT IndigoFingerprint : public IndigoObject
+class INDIGO_EXPORT IndigoFingerprint : public IndigoObject
 {
 public:
     IndigoFingerprint();
Index: indigo-src/indigo/api/c/indigo/src/indigo_basic.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_basic.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_basic.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_basic.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_basic.cpp	(date 1693030077046)
@@ -21,7 +21,7 @@
 #include "indigo_internal.h"
 #include <memory>
 
-CEXPORT int indigoNext(int iter)
+int indigoNext(int iter)
 {
     INDIGO_BEGIN
     {
@@ -35,7 +35,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoHasNext(int iter)
+int indigoHasNext(int iter)
 {
     INDIGO_BEGIN
     {
@@ -44,7 +44,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIndex(int handle)
+int indigoIndex(int handle)
 {
     INDIGO_BEGIN
     {
@@ -53,7 +53,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClone(int object)
+int indigoClone(int object)
 {
     INDIGO_BEGIN
     {
Index: yaehmop-src/yaehmop/tightbind/cboris.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/yaehmop-src/yaehmop/tightbind/cboris.c b/yaehmop-src/yaehmop/tightbind/cboris.c
--- a/yaehmop-src/yaehmop/tightbind/cboris.c	(revision c81f41694bcffccf38e17a63627a862628294613)
+++ b/yaehmop-src/yaehmop/tightbind/cboris.c	(date 1693030079854)
@@ -2,7 +2,7 @@
 Produced by gmFortran V30.59(10/26/17) on 9/18/18 at 9:02:32
 */
 #define LPROTOTYPE
-#include "fortran.h"
+#include <math.h>
 void cboris(int *n,int *nd,double *a,double *b,double *c,double *d,double *e,
     double *f,int *fail)
 {
Index: openbabel-src/openbabel/include/openbabel/tree/tree.hh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/include/openbabel/tree/tree.hh b/openbabel-src/openbabel/include/openbabel/tree/tree.hh
--- a/openbabel-src/openbabel/include/openbabel/tree/tree.hh	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/include/openbabel/tree/tree.hh	(date 1693030078608)
@@ -542,8 +542,8 @@
 template <class T, class tree_node_allocator>
 void tree<T, tree_node_allocator>::head_initialise_()
    {
-   head = alloc_.allocate(1,nullptr); // MSVC does not have default second argument
-	feet = alloc_.allocate(1,nullptr);
+   head = alloc_.allocate(1);
+   feet = alloc_.allocate(1);
 
    head->parent=nullptr;
    head->first_child=nullptr;
@@ -869,7 +869,7 @@
 	assert(position.node!=head);
 	assert(position.node);
 
-	tree_node *tmp=alloc_.allocate(1,0);
+	tree_node *tmp=alloc_.allocate(1);
 	kp::constructor(&tmp->data);
 	tmp->first_child=0;
 	tmp->last_child=0;
@@ -894,7 +894,7 @@
 	assert(position.node!=head);
 	assert(position.node);
 
-	tree_node *tmp=alloc_.allocate(1,0);
+	tree_node *tmp=alloc_.allocate(1);
 	kp::constructor(&tmp->data);
 	tmp->first_child=0;
 	tmp->last_child=0;
@@ -923,7 +923,7 @@
 	assert(position.node!=head);
 	assert(position.node);
 
-	tree_node* tmp = alloc_.allocate(1,nullptr);
+	tree_node* tmp = alloc_.allocate(1);
 	kp::constructor(&tmp->data, x);
 	tmp->first_child=nullptr;
 	tmp->last_child=nullptr;
@@ -948,7 +948,7 @@
 	assert(position.node!=head);
 	assert(position.node);
 
-	tree_node* tmp = alloc_.allocate(1,0);
+	tree_node* tmp = alloc_.allocate(1);
 	kp::constructor(&tmp->data, x);
 	tmp->first_child=0;
 	tmp->last_child=0;
@@ -1035,7 +1035,7 @@
 		position.node=feet; // Backward compatibility: when calling insert on a null node,
 		                    // insert before the feet.
 		}
-	tree_node* tmp = alloc_.allocate(1,nullptr);
+	tree_node* tmp = alloc_.allocate(1);
 	kp::constructor(&tmp->data, x);
 	tmp->first_child=nullptr;
 	tmp->last_child=nullptr;
@@ -1057,7 +1057,7 @@
 template <class T, class tree_node_allocator>
 typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::insert(sibling_iterator position, const T& x)
 	{
-	tree_node* tmp = alloc_.allocate(1,0);
+	tree_node* tmp = alloc_.allocate(1);
 	kp::constructor(&tmp->data, x);
 	tmp->first_child=0;
 	tmp->last_child=0;
@@ -1087,7 +1087,7 @@
 template <class iter>
 iter tree<T, tree_node_allocator>::insert_after(iter position, const T& x)
 	{
-	tree_node* tmp = alloc_.allocate(1,0);
+	tree_node* tmp = alloc_.allocate(1);
 	kp::constructor(&tmp->data, x);
 	tmp->first_child=0;
 	tmp->last_child=0;
@@ -1159,7 +1159,7 @@
 //	std::cout << "warning!" << position.node << std::endl;
 	erase_children(position);
 //	std::cout << "no warning!" << std::endl;
-	tree_node* tmp = alloc_.allocate(1,0);
+	tree_node* tmp = alloc_.allocate(1);
 	kp::constructor(&tmp->data, (*from));
 	tmp->first_child=0;
 	tmp->last_child=0;
Index: indigo-src/indigo/api/c/indigo/src/indigo_fingerprints.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_fingerprints.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_fingerprints.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_fingerprints.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_fingerprints.cpp	(date 1693030077061)
@@ -118,7 +118,7 @@
         throw IndigoError("unknown molecule fingerprint type: %s", type);
 }
 
-CEXPORT int indigoFingerprint(int item, const char* type)
+int indigoFingerprint(int item, const char* type)
 {
     INDIGO_BEGIN
     {
@@ -153,7 +153,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoLoadFingerprintFromBuffer(const byte* buffer, int size)
+int indigoLoadFingerprintFromBuffer(const byte* buffer, int size)
 {
     INDIGO_BEGIN
     {
@@ -164,7 +164,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoLoadFingerprintFromDescriptors(const double* arr, int arr_len, int size, double density)
+int indigoLoadFingerprintFromDescriptors(const double* arr, int arr_len, int size, double density)
 {
     INDIGO_BEGIN
     {
@@ -402,7 +402,7 @@
     return 1;
 }
 
-CEXPORT float indigoSimilarity(int item1, int item2, const char* metrics)
+float indigoSimilarity(int item1, int item2, const char* metrics)
 {
     INDIGO_BEGIN
     {
@@ -459,7 +459,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountBits(int fingerprint)
+int indigoCountBits(int fingerprint)
 {
     INDIGO_BEGIN
     {
@@ -469,7 +469,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCommonBits(int fingerprint1, int fingerprint2)
+int indigoCommonBits(int fingerprint1, int fingerprint2)
 {
     INDIGO_BEGIN
     {
@@ -484,7 +484,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoOneBitsList(int fingerprint)
+const char* indigoOneBitsList(int fingerprint)
 {
     INDIGO_BEGIN
     {
@@ -509,4 +509,4 @@
         return tmp.string.ptr();
     }
     INDIGO_END(0);
-}
\ No newline at end of file
+}
Index: indigo-src/indigo/api/c/indigo/src/indigo_array.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_array.h b/indigo-src/indigo/api/c/indigo/src/indigo_array.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_array.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_array.h	(date 1693030077046)
@@ -26,7 +26,7 @@
 #pragma warning(disable : 4251)
 #endif
 
-class DLLEXPORT IndigoArray : public IndigoObject
+class INDIGO_EXPORT IndigoArray : public IndigoObject
 {
 public:
     IndigoArray();
@@ -41,7 +41,7 @@
     PtrArray<IndigoObject> objects;
 };
 
-class DLLEXPORT IndigoArrayElement : public IndigoObject
+class INDIGO_EXPORT IndigoArrayElement : public IndigoObject
 {
 public:
     IndigoArrayElement(IndigoArray& arr, int idx_);
Index: indigo-src/indigo/core/indigo-core/molecule/src/inchi_wrapper.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/core/indigo-core/molecule/src/inchi_wrapper.cpp b/indigo-src/indigo/core/indigo-core/molecule/src/inchi_wrapper.cpp
--- a/indigo-src/indigo/core/indigo-core/molecule/src/inchi_wrapper.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/core/indigo-core/molecule/src/inchi_wrapper.cpp	(date 1693030077171)
@@ -17,6 +17,7 @@
  ***************************************************************************/
 
 #include <algorithm>
+#define TARGET_LIB_FOR_WINCHI
 #include <mode.h>
 
 #include "molecule/inchi_wrapper.h"
Index: yaehmop-src/yaehmop/tightbind/postprocess.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/yaehmop-src/yaehmop/tightbind/postprocess.c b/yaehmop-src/yaehmop/tightbind/postprocess.c
--- a/yaehmop-src/yaehmop/tightbind/postprocess.c	(revision c81f41694bcffccf38e17a63627a862628294613)
+++ b/yaehmop-src/yaehmop/tightbind/postprocess.c	(date 1693030079904)
@@ -739,7 +739,7 @@
 
     /* this stores the reduced charge matrix */
     if( details->Rchg_mat_PRT ){
-      reduced_charge_mat(cell->num_atoms,num_orbs,orbital_lookup_table,
+      reduced_charge_matrix(cell->num_atoms,num_orbs,orbital_lookup_table,
                        properties->chg_mat,properties->Rchg_mat);
     }
 
Index: openbabel-src/openbabel/include/openbabel/math/matrix3x3.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/include/openbabel/math/matrix3x3.h b/openbabel-src/openbabel/include/openbabel/math/matrix3x3.h
--- a/openbabel-src/openbabel/include/openbabel/math/matrix3x3.h	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/include/openbabel/math/matrix3x3.h	(date 1693030078608)
@@ -281,7 +281,7 @@
       friend OBAPI std::ostream& operator<< ( std::ostream&, const matrix3x3 & ) ;
 
       //! Eigenvalue calculation
-      static void jacobi(unsigned int n, double *a, double *d, double *v);
+      static void jacobi(int n, double *a, double *d, double *v);
     };
 
 #ifndef SWIG
Index: indigo-src/indigo/api/c/indigo/src/indigo_deconvolution.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_deconvolution.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_deconvolution.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_deconvolution.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_deconvolution.cpp	(date 1693030077061)
@@ -1564,7 +1564,7 @@
     return false;
 }
 
-CEXPORT int indigoDecomposeMolecules(int scaffold, int structures)
+int indigoDecomposeMolecules(int scaffold, int structures)
 {
     INDIGO_BEGIN
     {
@@ -1585,7 +1585,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateDecomposedMolecules(int decomp)
+int indigoIterateDecomposedMolecules(int decomp)
 {
     INDIGO_BEGIN
     {
@@ -1601,7 +1601,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoDecomposedMoleculeScaffold(int decomp)
+int indigoDecomposedMoleculeScaffold(int decomp)
 {
     INDIGO_BEGIN
     {
@@ -1658,7 +1658,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoDecomposedMoleculeHighlighted(int decomp)
+int indigoDecomposedMoleculeHighlighted(int decomp)
 {
     INDIGO_BEGIN
     {
@@ -1694,7 +1694,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoDecomposedMoleculeSubstituents(int decomp)
+int indigoDecomposedMoleculeSubstituents(int decomp)
 {
     INDIGO_BEGIN
     {
@@ -1732,7 +1732,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoDecomposedMoleculeWithRGroups(int decomp)
+int indigoDecomposedMoleculeWithRGroups(int decomp)
 {
     INDIGO_BEGIN
     {
@@ -1775,7 +1775,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCreateDecomposer(int scaffold)
+int indigoCreateDecomposer(int scaffold)
 {
     INDIGO_BEGIN
     {
@@ -1792,7 +1792,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoDecomposeMolecule(int decomp, int mol)
+int indigoDecomposeMolecule(int decomp, int mol)
 {
     INDIGO_BEGIN
     {
@@ -1813,7 +1813,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateDecompositions(int deco_item)
+int indigoIterateDecompositions(int deco_item)
 {
     INDIGO_BEGIN
     {
@@ -1837,7 +1837,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddDecomposition(int decomp, int q_match)
+int indigoAddDecomposition(int decomp, int q_match)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_properties.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_properties.h b/indigo-src/indigo/api/c/indigo/src/indigo_properties.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_properties.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_properties.h	(date 1693030077108)
@@ -25,7 +25,7 @@
     class PropertiesMap;
 }
 
-class DLLEXPORT IndigoProperty : public IndigoObject
+class INDIGO_EXPORT IndigoProperty : public IndigoObject
 {
 public:
     IndigoProperty(indigo::PropertiesMap& props, int idx);
Index: indigo-src/indigo/api/c/indigo/src/indigo_io.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_io.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_io.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_io.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_io.cpp	(date 1693030077077)
@@ -86,7 +86,7 @@
     throw IndigoError("%s is not an output", obj.debugInfo());
 }
 
-CEXPORT int indigoReadFile(const char* filename)
+int indigoReadFile(const char* filename)
 {
     INDIGO_BEGIN
     {
@@ -95,7 +95,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoReadString(const char* str)
+int indigoReadString(const char* str)
 {
     INDIGO_BEGIN
     {
@@ -104,7 +104,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoReadBuffer(const char* buffer, int size)
+int indigoReadBuffer(const char* buffer, int size)
 {
     INDIGO_BEGIN
     {
@@ -113,7 +113,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoLoadString(const char* str)
+int indigoLoadString(const char* str)
 {
     INDIGO_BEGIN
     {
@@ -122,7 +122,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoLoadBuffer(const char* buffer, int size)
+int indigoLoadBuffer(const char* buffer, int size)
 {
     INDIGO_BEGIN
     {
@@ -131,7 +131,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoWriteFile(const char* filename)
+int indigoWriteFile(const char* filename)
 {
     INDIGO_BEGIN
     {
@@ -140,7 +140,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClose(int output)
+int indigoClose(int output)
 {
     INDIGO_BEGIN
     {
@@ -163,7 +163,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoWriteBuffer(void)
+int indigoWriteBuffer(void)
 {
     INDIGO_BEGIN
     {
@@ -172,7 +172,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoToString(int handle)
+const char* indigoToString(int handle)
 {
     INDIGO_BEGIN
     {
@@ -187,7 +187,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoToBase64String(int handle)
+const char* indigoToBase64String(int handle)
 {
     INDIGO_BEGIN
     {
@@ -200,7 +200,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoToBuffer(int handle, char** buf, int* size)
+int indigoToBuffer(int handle, char** buf, int* size)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_composition.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_composition.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_composition.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_composition.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_composition.cpp	(date 1693030077061)
@@ -23,7 +23,7 @@
 
 using MoleculeIter = MoleculeRGroupsComposition::MoleculeIter;
 
-class DLLEXPORT IndigoCompositionElem : public IndigoObject
+class IndigoCompositionElem : public IndigoObject
 {
 public:
     IndigoCompositionElem() : IndigoObject(COMPOSITION_ELEM)
@@ -37,7 +37,7 @@
     MoleculeRGroups variants[RGCOMP_OPT_COUNT];
 };
 
-CEXPORT int indigoGetFragmentedMolecule(int elem, const char* options)
+int indigoGetFragmentedMolecule(int elem, const char* options)
 {
     INDIGO_BEGIN
     {
@@ -72,7 +72,7 @@
     INDIGO_END(-1);
 }
 
-class DLLEXPORT IndigoCompositionIter : public IndigoObject
+class IndigoCompositionIter : public IndigoObject
 {
 public:
     IndigoCompositionIter(BaseMolecule& mol) : IndigoObject(COMPOSITION_ITER), _composition(mol), _it(_composition.begin()), _end(_composition.end())
@@ -112,7 +112,7 @@
     bool _hasNext = true;
 };
 
-CEXPORT int indigoRGroupComposition(int molecule, const char* options)
+int indigoRGroupComposition(int molecule, const char* options)
 {
     INDIGO_BEGIN
     {
@@ -120,4 +120,4 @@
         return self.addObject(new IndigoCompositionIter(target));
     }
     INDIGO_END(-1);
-}
\ No newline at end of file
+}
Index: indigo-src/indigo/api/c/indigo/src/indigo_abbreviations_expand.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_abbreviations_expand.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_abbreviations_expand.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_abbreviations_expand.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_abbreviations_expand.cpp	(date 1693030077046)
@@ -769,7 +769,7 @@
         //
         // Interface functions
         //
-        CEXPORT int indigoExpandAbbreviations(int molecule)
+        int indigoExpandAbbreviations(int molecule)
         {
             INDIGO_BEGIN
             {
Index: indigo-src/indigo/api/c/indigo/src/indigo.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo.cpp b/indigo-src/indigo/api/c/indigo/src/indigo.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo.cpp	(date 1693030077030)
@@ -41,12 +41,12 @@
 
 static _SessionLocalContainer<Indigo> indigo_self;
 
-DLLEXPORT Indigo& indigoGetInstance()
+Indigo& indigoGetInstance()
 {
     return indigo_self.getLocalCopy();
 }
 
-CEXPORT const char* indigoVersion()
+const char* indigoVersion()
 {
     return INDIGO_VERSION "-" INDIGO_PLATFORM;
 }
@@ -257,7 +257,7 @@
     };
 }
 
-CEXPORT qword indigoAllocSessionId()
+qword indigoAllocSessionId()
 {
     qword id = TL_ALLOC_SESSION_ID();
     TL_SET_SESSION_ID(id);
@@ -275,12 +275,12 @@
     return id;
 }
 
-CEXPORT void indigoSetSessionId(qword id)
+void indigoSetSessionId(qword id)
 {
     TL_SET_SESSION_ID(id);
 }
 
-CEXPORT void indigoReleaseSessionId(qword id)
+void indigoReleaseSessionId(qword id)
 {
     TL_SET_SESSION_ID(id);
     indigoGetInstance().removeAllObjects();
@@ -294,17 +294,17 @@
 #endif
 }
 
-CEXPORT const char* indigoGetLastError(void)
+const char* indigoGetLastError(void)
 {
     return Indigo::getErrorMessage().ptr();
 }
 
-CEXPORT void indigoSetErrorHandler(INDIGO_ERROR_HANDLER handler, void* context)
+void indigoSetErrorHandler(INDIGO_ERROR_HANDLER handler, void* context)
 {
     Indigo::setErrorHandler(handler, context);
 }
 
-CEXPORT int indigoFree(int handle)
+int indigoFree(int handle)
 {
     // In some runtimes (e.g. Python) session could be removed before objects during resource releasing stage)
     if (indigo_self.hasLocalCopy())
@@ -321,13 +321,13 @@
     return 1;
 }
 
-CEXPORT int indigoFreeAllObjects()
+int indigoFreeAllObjects()
 {
     indigoGetInstance().removeAllObjects();
     return 1;
 }
 
-CEXPORT int indigoCountReferences(void)
+int indigoCountReferences(void)
 {
     INDIGO_BEGIN
     {
@@ -336,7 +336,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT void indigoSetErrorMessage(const char* message)
+void indigoSetErrorMessage(const char* message)
 {
     Indigo& self = indigoGetInstance();
     self.setErrorMessage(message);
@@ -456,9 +456,9 @@
 // Debug methods
 //
 
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
 #include <Windows.h>
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__MINGW32__)
 #include <fcntl.h>
 #include <unistd.h>
 #elif defined(__APPLE__)
@@ -472,7 +472,7 @@
 {
     void sleepMs(int ms)
     {
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
         Sleep(ms);
 #else
         sleep(ms * 1e-3);
@@ -481,7 +481,7 @@
 
     bool debuggerIsAttached()
     {
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
         return IsDebuggerPresent();
 #elif defined(__APPLE__)
         int mib[4];
@@ -514,9 +514,9 @@
     }
 }
 
-CEXPORT void indigoDbgBreakpoint(void)
+void indigoDbgBreakpoint(void)
 {
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
     if (!IsDebuggerPresent())
     {
         char msg[200];
@@ -539,7 +539,7 @@
 #endif
 }
 
-CEXPORT const char* indigoDbgProfiling(int whole_session)
+const char* indigoDbgProfiling(int whole_session)
 {
     INDIGO_BEGIN
     {
@@ -553,7 +553,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoDbgResetProfiling(int whole_session)
+int indigoDbgResetProfiling(int whole_session)
 {
     INDIGO_BEGIN
     {
@@ -567,7 +567,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT qword indigoDbgProfilingGetCounter(const char* name, int whole_session)
+qword indigoDbgProfilingGetCounter(const char* name, int whole_session)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_internal.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_internal.h b/indigo-src/indigo/api/c/indigo/src/indigo_internal.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_internal.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_internal.h	(date 1693030077077)
@@ -67,9 +67,7 @@
     typedef ObjArray<PropertiesMap> MonomersProperties;
 } // namespace indigo
 
-extern DLLEXPORT sf::safe_shared_hide_obj<IndigoOptionManager>& indigoGetOptionManager(const qword id = TL_GET_SESSION_ID());
-
-class DLLEXPORT IndigoObject
+class INDIGO_EXPORT IndigoObject
 {
 public:
     explicit IndigoObject(int type_);
@@ -228,7 +226,7 @@
     std::unique_ptr<std::pair<PtrArray<GROSS_UNITS>, PtrArray<GROSS_UNITS>>> gross;
 };
 
-struct DLLEXPORT ProductEnumeratorParams
+struct INDIGO_EXPORT ProductEnumeratorParams
 {
     ProductEnumeratorParams()
     {
@@ -255,7 +253,7 @@
     int max_product_count;
 };
 
-class DLLEXPORT Indigo
+class INDIGO_EXPORT Indigo
 {
 public:
     Indigo();
@@ -375,7 +373,7 @@
     int _indigo_id;
 };
 
-class DLLEXPORT IndigoPluginContext
+class INDIGO_EXPORT IndigoPluginContext
 {
 public:
     IndigoPluginContext();
@@ -414,9 +412,9 @@
     return fail;                                                                                                                                               \
     }
 
-DLLEXPORT Indigo& indigoGetInstance();
+INDIGO_EXPORT Indigo& indigoGetInstance();
 
-class DLLEXPORT IndigoError : public Exception
+class INDIGO_EXPORT IndigoError : public Exception
 {
 public:
     explicit IndigoError(const char* format, ...);
Index: indigo-src/indigo/api/c/indigo/src/indigo_molecule.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_molecule.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_molecule.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_molecule.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_molecule.cpp	(date 1693030077108)
@@ -470,7 +470,7 @@
     return new IndigoBond(_mol, _idx);
 }
 
-CEXPORT int indigoLoadMolecule(int source)
+int indigoLoadMolecule(int source)
 {
     INDIGO_BEGIN
     {
@@ -501,7 +501,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoLoadQueryMolecule(int source)
+int indigoLoadQueryMolecule(int source)
 {
     INDIGO_BEGIN
     {
@@ -525,7 +525,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoLoadSmarts(int source)
+int indigoLoadSmarts(int source)
 {
     INDIGO_BEGIN
     {
@@ -551,7 +551,7 @@
     return isIn(string, ">>") || startWith(string, "$RXN") || isIn(string, "<reactantList>");
 }
 
-CEXPORT int indigoLoadStructureFromString(const char* string, const char* params)
+int indigoLoadStructureFromString(const char* string, const char* params)
 {
     INDIGO_BEGIN
     {
@@ -604,7 +604,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoLoadStructureFromBuffer(const byte* buff, int bufferSize, const char* params)
+int indigoLoadStructureFromBuffer(const byte* buff, int bufferSize, const char* params)
 {
     BufferScanner scanner(buff, bufferSize);
     Array<char> arr;
@@ -613,7 +613,7 @@
     return indigoLoadStructureFromString(arr.ptr(), params);
 }
 
-CEXPORT int indigoLoadStructureFromFile(const char* filename, const char* params)
+int indigoLoadStructureFromFile(const char* filename, const char* params)
 {
     INDIGO_BEGIN
     {
@@ -735,7 +735,7 @@
     return self.addObject(new IndigoAtomsIter(&self.getObject(molecule).getBaseMolecule(), type));
 }
 
-CEXPORT int indigoIterateAtoms(int molecule)
+int indigoIterateAtoms(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -782,7 +782,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateBonds(int molecule)
+int indigoIterateBonds(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -829,7 +829,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountAtoms(int molecule)
+int indigoCountAtoms(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -863,7 +863,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountBonds(int molecule)
+int indigoCountBonds(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -897,7 +897,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountPseudoatoms(int molecule)
+int indigoCountPseudoatoms(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -913,7 +913,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountRSites(int molecule)
+int indigoCountRSites(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -929,7 +929,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIteratePseudoatoms(int molecule)
+int indigoIteratePseudoatoms(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -938,7 +938,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateRSites(int molecule)
+int indigoIterateRSites(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -947,7 +947,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateStereocenters(int molecule)
+int indigoIterateStereocenters(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -956,7 +956,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateAlleneCenters(int molecule)
+int indigoIterateAlleneCenters(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -965,7 +965,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoSymbol(int atom)
+const char* indigoSymbol(int atom)
 {
     INDIGO_BEGIN
     {
@@ -978,7 +978,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoIsPseudoatom(int atom)
+int indigoIsPseudoatom(int atom)
 {
     INDIGO_BEGIN
     {
@@ -991,7 +991,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIsRSite(int atom)
+int indigoIsRSite(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1004,7 +1004,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIsTemplateAtom(int atom)
+int indigoIsTemplateAtom(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1017,7 +1017,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSingleAllowedRGroup(int rsite)
+int indigoSingleAllowedRGroup(int rsite)
 {
     INDIGO_BEGIN
     {
@@ -1058,7 +1058,7 @@
 {
 }
 
-CEXPORT int indigoIterateRGroups(int molecule)
+int indigoIterateRGroups(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -1173,7 +1173,7 @@
     return new IndigoRGroupFragment(_mol, _rgroup_idx, _frag_idx);
 }
 
-CEXPORT int indigoIterateRGroupFragments(int rgroup)
+int indigoIterateRGroupFragments(int rgroup)
 {
     INDIGO_BEGIN
     {
@@ -1183,7 +1183,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountRGroups(int molecule)
+int indigoCountRGroups(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -1223,7 +1223,7 @@
     return rgroup.release();
 }
 
-CEXPORT int indigoCountAttachmentPoints(int rgroup)
+int indigoCountAttachmentPoints(int rgroup)
 {
     INDIGO_BEGIN
     {
@@ -1238,7 +1238,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoDegree(int atom)
+int indigoDegree(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1249,7 +1249,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetCharge(int atom, int* charge)
+int indigoGetCharge(int atom, int* charge)
 {
     INDIGO_BEGIN
     {
@@ -1266,7 +1266,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoValence(int atom)
+int indigoValence(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1276,7 +1276,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetHybridization(int atom)
+int indigoGetHybridization(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1287,7 +1287,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCheckValence(int atom)
+int indigoCheckValence(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1303,7 +1303,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetExplicitValence(int atom, int* valence)
+int indigoGetExplicitValence(int atom, int* valence)
 {
     INDIGO_BEGIN
     {
@@ -1320,7 +1320,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetExplicitValence(int atom, int valence)
+int indigoSetExplicitValence(int atom, int valence)
 {
     INDIGO_BEGIN
     {
@@ -1331,7 +1331,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIsotope(int atom)
+int indigoIsotope(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1342,7 +1342,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAtomicNumber(int atom)
+int indigoAtomicNumber(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1359,7 +1359,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetRadicalElectrons(int atom, int* electrons)
+int indigoGetRadicalElectrons(int atom, int* electrons)
 {
     INDIGO_BEGIN
     {
@@ -1411,7 +1411,7 @@
     }
 }
 
-CEXPORT int indigoGetRadical(int atom, int* radical)
+int indigoGetRadical(int atom, int* radical)
 {
     INDIGO_BEGIN
     {
@@ -1429,7 +1429,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetRadical(int atom, int radical)
+int indigoSetRadical(int atom, int radical)
 {
     INDIGO_BEGIN
     {
@@ -1440,7 +1440,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT float* indigoXYZ(int atom)
+float* indigoXYZ(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1457,7 +1457,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoSetXYZ(int atom, float x, float y, float z)
+int indigoSetXYZ(int atom, float x, float y, float z)
 {
     INDIGO_BEGIN
     {
@@ -1471,7 +1471,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoResetCharge(int atom)
+int indigoResetCharge(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1487,7 +1487,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoResetExplicitValence(int atom)
+int indigoResetExplicitValence(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1503,7 +1503,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoResetRadical(int atom)
+int indigoResetRadical(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1519,7 +1519,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoResetIsotope(int atom)
+int indigoResetIsotope(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1535,7 +1535,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoResetRsite(int atom)
+int indigoResetRsite(int atom)
 {
     INDIGO_BEGIN
     {
@@ -1548,7 +1548,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetAttachmentPoint(int atom, int order)
+int indigoSetAttachmentPoint(int atom, int order)
 {
     INDIGO_BEGIN
     {
@@ -1560,7 +1560,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClearAttachmentPoints(int item)
+int indigoClearAttachmentPoints(int item)
 {
     INDIGO_BEGIN
     {
@@ -1571,7 +1571,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoRemoveConstraints(int item, const char* str_type)
+int indigoRemoveConstraints(int item, const char* str_type)
 {
     INDIGO_BEGIN
     {
@@ -1595,7 +1595,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddConstraint(int atom, const char* type, const char* value)
+int indigoAddConstraint(int atom, const char* type, const char* value)
 {
     INDIGO_BEGIN
     {
@@ -1614,7 +1614,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddConstraintNot(int atom, const char* type, const char* value)
+int indigoAddConstraintNot(int atom, const char* type, const char* value)
 {
     INDIGO_BEGIN
     {
@@ -1633,7 +1633,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddConstraintOr(int atom, const char* type, const char* value)
+int indigoAddConstraintOr(int atom, const char* type, const char* value)
 {
     INDIGO_BEGIN
     {
@@ -1653,7 +1653,7 @@
 }
 
 /*
-CEXPORT int indigoAddConstraintOrNot(int atom, const char* type, const char* value)
+int indigoAddConstraintOrNot(int atom, const char* type, const char* value)
 {
    INDIGO_BEGIN
    {
@@ -1673,7 +1673,7 @@
 }
  * */
 
-CEXPORT const int* indigoSymmetryClasses(int molecule, int* count_out)
+const int* indigoSymmetryClasses(int molecule, int* count_out)
 {
     INDIGO_BEGIN
     {
@@ -1711,7 +1711,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoLayeredCode(int molecule)
+const char* indigoLayeredCode(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -1729,7 +1729,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoCreateSubmolecule(int molecule, int nvertices, int* vertices)
+int indigoCreateSubmolecule(int molecule, int nvertices, int* vertices)
 {
     INDIGO_BEGIN
     {
@@ -1757,7 +1757,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetSubmolecule(int molecule, int nvertices, int* vertices)
+int indigoGetSubmolecule(int molecule, int nvertices, int* vertices)
 {
     INDIGO_BEGIN
     {
@@ -1786,7 +1786,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCreateEdgeSubmolecule(int molecule, int nvertices, int* vertices, int nedges, int* edges)
+int indigoCreateEdgeSubmolecule(int molecule, int nvertices, int* vertices, int nedges, int* edges)
 {
     INDIGO_BEGIN
     {
@@ -1816,7 +1816,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoRemoveAtoms(int molecule, int nvertices, int* vertices)
+int indigoRemoveAtoms(int molecule, int nvertices, int* vertices)
 {
     INDIGO_BEGIN
     {
@@ -1831,7 +1831,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoRemoveBonds(int molecule, int nbonds, int* bonds)
+int indigoRemoveBonds(int molecule, int nbonds, int* bonds)
 {
     INDIGO_BEGIN
     {
@@ -1879,7 +1879,7 @@
     return _nei_counters;
 }
 
-CEXPORT int indigoIsChiral(int molecule)
+int indigoIsChiral(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -1889,7 +1889,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoBondOrder(int bond)
+int indigoBondOrder(int bond)
 {
     INDIGO_BEGIN
     {
@@ -1901,7 +1901,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoTopology(int bond)
+int indigoTopology(int bond)
 {
     INDIGO_BEGIN
     {
@@ -1917,7 +1917,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetAtom(int molecule, int idx)
+int indigoGetAtom(int molecule, int idx)
 {
     INDIGO_BEGIN
     {
@@ -1928,7 +1928,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetBond(int molecule, int idx)
+int indigoGetBond(int molecule, int idx)
 {
     INDIGO_BEGIN
     {
@@ -1939,7 +1939,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSource(int bond)
+int indigoSource(int bond)
 {
     INDIGO_BEGIN
     {
@@ -1949,7 +1949,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoDestination(int bond)
+int indigoDestination(int bond)
 {
     INDIGO_BEGIN
     {
@@ -2008,7 +2008,7 @@
     return vertex.neiNext(_nei_idx) != vertex.neiEnd();
 }
 
-CEXPORT int indigoIterateNeighbors(int atom)
+int indigoIterateNeighbors(int atom)
 {
     INDIGO_BEGIN
     {
@@ -2019,7 +2019,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoBond(int nei)
+int indigoBond(int nei)
 {
     INDIGO_BEGIN
     {
@@ -2035,7 +2035,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT float indigoAlignAtoms(int molecule, int natoms, int* atom_ids, float* desired_xyz)
+float indigoAlignAtoms(int molecule, int natoms, int* atom_ids, float* desired_xyz)
 {
     INDIGO_BEGIN
     {
@@ -2076,7 +2076,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountSuperatoms(int molecule)
+int indigoCountSuperatoms(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2086,7 +2086,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountDataSGroups(int molecule)
+int indigoCountDataSGroups(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2096,7 +2096,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountRepeatingUnits(int molecule)
+int indigoCountRepeatingUnits(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2106,7 +2106,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountMultipleGroups(int molecule)
+int indigoCountMultipleGroups(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2116,7 +2116,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountGenericSGroups(int molecule)
+int indigoCountGenericSGroups(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2157,7 +2157,7 @@
     return sgroup.release();
 }
 
-CEXPORT int indigoIterateDataSGroups(int molecule)
+int indigoIterateDataSGroups(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2458,7 +2458,7 @@
     return sgroup.release();
 }
 
-CEXPORT int indigoIterateGenericSGroups(int molecule)
+int indigoIterateGenericSGroups(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2544,7 +2544,7 @@
     return sgroup.release();
 }
 
-CEXPORT int indigoIterateSGroups(int molecule)
+int indigoIterateSGroups(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2632,7 +2632,7 @@
     return tgroup.release();
 }
 
-CEXPORT int indigoIterateTGroups(int molecule)
+int indigoIterateTGroups(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2642,7 +2642,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateRepeatingUnits(int molecule)
+int indigoIterateRepeatingUnits(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2655,7 +2655,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateMultipleGroups(int molecule)
+int indigoIterateMultipleGroups(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2668,7 +2668,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateSuperatoms(int molecule)
+int indigoIterateSuperatoms(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -2681,7 +2681,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetSuperatom(int molecule, int index)
+int indigoGetSuperatom(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -2698,7 +2698,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetDataSGroup(int molecule, int index)
+int indigoGetDataSGroup(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -2715,7 +2715,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetGenericSGroup(int molecule, int index)
+int indigoGetGenericSGroup(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -2732,7 +2732,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetMultipleGroup(int molecule, int index)
+int indigoGetMultipleGroup(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -2749,7 +2749,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetRepeatingUnit(int molecule, int index)
+int indigoGetRepeatingUnit(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -2766,7 +2766,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoDescription(int data_sgroup)
+const char* indigoDescription(int data_sgroup)
 {
     INDIGO_BEGIN
     {
@@ -2778,7 +2778,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoData(int data_sgroup)
+const char* indigoData(int data_sgroup)
 {
     INDIGO_BEGIN
     {
@@ -2790,7 +2790,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoAddDataSGroup(int molecule, int natoms, int* atoms, int nbonds, int* bonds, const char* name, const char* data)
+int indigoAddDataSGroup(int molecule, int natoms, int* atoms, int nbonds, int* bonds, const char* name, const char* data)
 {
     INDIGO_BEGIN
     {
@@ -2814,7 +2814,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddSuperatom(int molecule, int natoms, int* atoms, const char* name)
+int indigoAddSuperatom(int molecule, int natoms, int* atoms, const char* name)
 {
     INDIGO_BEGIN
     {
@@ -2833,7 +2833,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetDataSGroupXY(int sgroup, float x, float y, const char* options)
+int indigoSetDataSGroupXY(int sgroup, float x, float y, const char* options)
 {
     INDIGO_BEGIN
     {
@@ -2858,7 +2858,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupData(int sgroup, const char* data)
+int indigoSetSGroupData(int sgroup, const char* data)
 {
     INDIGO_BEGIN
     {
@@ -2872,7 +2872,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupCoords(int sgroup, float x, float y)
+int indigoSetSGroupCoords(int sgroup, float x, float y)
 {
     INDIGO_BEGIN
     {
@@ -2886,7 +2886,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupDescription(int sgroup, const char* description)
+int indigoSetSGroupDescription(int sgroup, const char* description)
 {
     INDIGO_BEGIN
     {
@@ -2900,7 +2900,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupFieldName(int sgroup, const char* name)
+int indigoSetSGroupFieldName(int sgroup, const char* name)
 {
     INDIGO_BEGIN
     {
@@ -2914,7 +2914,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupQueryCode(int sgroup, const char* querycode)
+int indigoSetSGroupQueryCode(int sgroup, const char* querycode)
 {
     INDIGO_BEGIN
     {
@@ -2928,7 +2928,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupQueryOper(int sgroup, const char* queryoper)
+int indigoSetSGroupQueryOper(int sgroup, const char* queryoper)
 {
     INDIGO_BEGIN
     {
@@ -2942,7 +2942,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupDisplay(int sgroup, const char* option)
+int indigoSetSGroupDisplay(int sgroup, const char* option)
 {
     INDIGO_BEGIN
     {
@@ -2963,7 +2963,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupLocation(int sgroup, const char* option)
+int indigoSetSGroupLocation(int sgroup, const char* option)
 {
     INDIGO_BEGIN
     {
@@ -2984,7 +2984,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupTag(int sgroup, const char* tag)
+int indigoSetSGroupTag(int sgroup, const char* tag)
 {
     INDIGO_BEGIN
     {
@@ -3000,7 +3000,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupTagAlign(int sgroup, int tag_align)
+int indigoSetSGroupTagAlign(int sgroup, int tag_align)
 {
     INDIGO_BEGIN
     {
@@ -3016,7 +3016,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupDataType(int sgroup, const char* data_type)
+int indigoSetSGroupDataType(int sgroup, const char* data_type)
 {
     INDIGO_BEGIN
     {
@@ -3032,7 +3032,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupXCoord(int sgroup, float x)
+int indigoSetSGroupXCoord(int sgroup, float x)
 {
     INDIGO_BEGIN
     {
@@ -3045,7 +3045,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupYCoord(int sgroup, float y)
+int indigoSetSGroupYCoord(int sgroup, float y)
 {
     INDIGO_BEGIN
     {
@@ -3058,7 +3058,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCreateSGroup(const char* type, int mapping, const char* name)
+int indigoCreateSGroup(const char* type, int mapping, const char* name)
 {
     INDIGO_BEGIN
     {
@@ -3115,7 +3115,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupClass(int sgroup, const char* sgclass)
+int indigoSetSGroupClass(int sgroup, const char* sgclass)
 {
     INDIGO_BEGIN
     {
@@ -3127,7 +3127,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoGetSGroupClass(int sgroup)
+const char* indigoGetSGroupClass(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3139,7 +3139,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoSetSGroupName(int sgroup, const char* sgname)
+int indigoSetSGroupName(int sgroup, const char* sgname)
 {
     INDIGO_BEGIN
     {
@@ -3151,7 +3151,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoGetSGroupName(int sgroup)
+const char* indigoGetSGroupName(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3163,7 +3163,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoGetSGroupNumCrossBonds(int sgroup)
+int indigoGetSGroupNumCrossBonds(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3173,7 +3173,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddSGroupAttachmentPoint(int sgroup, int aidx, int lvidx, const char* apid)
+int indigoAddSGroupAttachmentPoint(int sgroup, int aidx, int lvidx, const char* apid)
 {
     INDIGO_BEGIN
     {
@@ -3188,7 +3188,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoDeleteSGroupAttachmentPoint(int sgroup, int ap_idx)
+int indigoDeleteSGroupAttachmentPoint(int sgroup, int ap_idx)
 {
     INDIGO_BEGIN
     {
@@ -3199,7 +3199,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetSGroupDisplayOption(int sgroup)
+int indigoGetSGroupDisplayOption(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3212,7 +3212,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupDisplayOption(int sgroup, int option)
+int indigoSetSGroupDisplayOption(int sgroup, int option)
 {
     INDIGO_BEGIN
     {
@@ -3224,7 +3224,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetSGroupSeqId(int sgroup)
+int indigoGetSGroupSeqId(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3236,7 +3236,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT float* indigoGetSGroupCoords(int sgroup)
+float* indigoGetSGroupCoords(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3252,7 +3252,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoGetSGroupMultiplier(int sgroup)
+int indigoGetSGroupMultiplier(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3262,7 +3262,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoGetRepeatingUnitSubscript(int sgroup)
+const char* indigoGetRepeatingUnitSubscript(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3272,7 +3272,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoGetRepeatingUnitConnectivity(int sgroup)
+int indigoGetRepeatingUnitConnectivity(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3282,7 +3282,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupMultiplier(int sgroup, int multiplier)
+int indigoSetSGroupMultiplier(int sgroup, int multiplier)
 {
     INDIGO_BEGIN
     {
@@ -3294,7 +3294,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupBrackets(int sgroup, int brk_style, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4)
+int indigoSetSGroupBrackets(int sgroup, int brk_style, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4)
 {
     INDIGO_BEGIN
     {
@@ -3323,7 +3323,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoFindSGroups(int item, const char* property, const char* value)
+int indigoFindSGroups(int item, const char* property, const char* value)
 {
     INDIGO_BEGIN
     {
@@ -3338,7 +3338,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetSGroupType(int sgroup)
+int indigoGetSGroupType(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3348,7 +3348,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetSGroupIndex(int sgroup)
+int indigoGetSGroupIndex(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3358,7 +3358,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetSGroupOriginalId(int sgroup)
+int indigoGetSGroupOriginalId(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3368,7 +3368,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupOriginalId(int sgroup, int new_original)
+int indigoSetSGroupOriginalId(int sgroup, int new_original)
 {
     INDIGO_BEGIN
     {
@@ -3398,7 +3398,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetSGroupParentId(int sgroup)
+int indigoGetSGroupParentId(int sgroup)
 {
     INDIGO_BEGIN
     {
@@ -3408,7 +3408,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetSGroupParentId(int sgroup, int parent)
+int indigoSetSGroupParentId(int sgroup, int parent)
 {
     INDIGO_BEGIN
     {
@@ -3431,7 +3431,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddTemplate(int molecule, int templates, const char* tname)
+int indigoAddTemplate(int molecule, int templates, const char* tname)
 {
     INDIGO_BEGIN
     {
@@ -3449,7 +3449,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoRemoveTemplate(int molecule, const char* tname)
+int indigoRemoveTemplate(int molecule, const char* tname)
 {
     INDIGO_BEGIN
     {
@@ -3464,7 +3464,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoFindTemplate(int molecule, const char* tname)
+int indigoFindTemplate(int molecule, const char* tname)
 {
     INDIGO_BEGIN
     {
@@ -3479,7 +3479,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoGetTGroupClass(int tgroup)
+const char* indigoGetTGroupClass(int tgroup)
 {
     INDIGO_BEGIN
     {
@@ -3491,7 +3491,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoGetTGroupName(int tgroup)
+const char* indigoGetTGroupName(int tgroup)
 {
     INDIGO_BEGIN
     {
@@ -3503,7 +3503,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoGetTGroupAlias(int tgroup)
+const char* indigoGetTGroupAlias(int tgroup)
 {
     INDIGO_BEGIN
     {
@@ -3515,7 +3515,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoTransformSCSRtoCTAB(int molecule)
+int indigoTransformSCSRtoCTAB(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -3528,7 +3528,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoTransformCTABtoSCSR(int molecule, int templates)
+int indigoTransformCTABtoSCSR(int molecule, int templates)
 {
     INDIGO_BEGIN
     {
@@ -3550,7 +3550,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountHeavyAtoms(int molecule)
+int indigoCountHeavyAtoms(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -3566,7 +3566,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountComponents(int molecule)
+int indigoCountComponents(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -3577,7 +3577,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCloneComponent(int molecule, int index)
+int indigoCloneComponent(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -3593,7 +3593,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoComponentIndex(int atom)
+int indigoComponentIndex(int atom)
 {
     INDIGO_BEGIN
     {
@@ -3604,7 +3604,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoComponent(int molecule, int index)
+int indigoComponent(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -3711,7 +3711,7 @@
     return idx;
 }
 
-CEXPORT int indigoIterateComponents(int molecule)
+int indigoIterateComponents(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -3722,7 +3722,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateComponentAtoms(int molecule, int index)
+int indigoIterateComponentAtoms(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -3733,7 +3733,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateComponentBonds(int molecule, int index)
+int indigoIterateComponentBonds(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -3744,7 +3744,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountComponentAtoms(int molecule, int index)
+int indigoCountComponentAtoms(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -3755,7 +3755,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountComponentBonds(int molecule, int index)
+int indigoCountComponentBonds(int molecule, int index)
 {
     INDIGO_BEGIN
     {
@@ -3766,7 +3766,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCreateMolecule()
+int indigoCreateMolecule()
 {
     INDIGO_BEGIN
     {
@@ -3776,7 +3776,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCreateQueryMolecule()
+int indigoCreateQueryMolecule()
 {
     INDIGO_BEGIN
     {
@@ -3785,7 +3785,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoMerge(int where, int what)
+int indigoMerge(int where, int what)
 {
     INDIGO_BEGIN
     {
@@ -3801,7 +3801,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddAtom(int molecule, const char* symbol)
+int indigoAddAtom(int molecule, const char* symbol)
 {
     INDIGO_BEGIN
     {
@@ -3833,7 +3833,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoResetAtom(int atom, const char* symbol)
+int indigoResetAtom(int atom, const char* symbol)
 {
     INDIGO_BEGIN
     {
@@ -3871,7 +3871,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoGetTemplateAtomClass(int atom)
+const char* indigoGetTemplateAtomClass(int atom)
 {
     INDIGO_BEGIN
     {
@@ -3892,7 +3892,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoSetTemplateAtomClass(int atom, const char* name)
+int indigoSetTemplateAtomClass(int atom, const char* name)
 {
     INDIGO_BEGIN
     {
@@ -3948,7 +3948,7 @@
         mol.allowRGroupOnRSite(atom_index, rsites[i]);
 }
 
-CEXPORT int indigoAddRSite(int molecule, const char* name)
+int indigoAddRSite(int molecule, const char* name)
 {
     INDIGO_BEGIN
     {
@@ -3971,7 +3971,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetRSite(int atom, const char* name)
+int indigoSetRSite(int atom, const char* name)
 {
     INDIGO_BEGIN
     {
@@ -3985,7 +3985,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetCharge(int atom, int charge)
+int indigoSetCharge(int atom, int charge)
 {
     INDIGO_BEGIN
     {
@@ -3997,7 +3997,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetIsotope(int atom, int isotope)
+int indigoSetIsotope(int atom, int isotope)
 {
     INDIGO_BEGIN
     {
@@ -4009,7 +4009,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetImplicitHCount(int atom, int impl_h)
+int indigoSetImplicitHCount(int atom, int impl_h)
 {
     INDIGO_BEGIN
     {
@@ -4021,7 +4021,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddBond(int source, int destination, int order)
+int indigoAddBond(int source, int destination, int order)
 {
     INDIGO_BEGIN
     {
@@ -4042,7 +4042,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetBondOrder(int bond, int order)
+int indigoSetBondOrder(int bond, int order)
 {
     INDIGO_BEGIN
     {
@@ -4181,7 +4181,7 @@
     return new IndigoBond(_submol.getOriginalMolecule(), _submol.edges[_idx]);
 }
 
-CEXPORT int indigoCountSSSR(int molecule)
+int indigoCountSSSR(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -4192,7 +4192,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateSSSR(int molecule)
+int indigoIterateSSSR(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -4271,7 +4271,7 @@
     return res.release();
 }
 
-CEXPORT int indigoIterateSubtrees(int molecule, int min_atoms, int max_atoms)
+int indigoIterateSubtrees(int molecule, int min_atoms, int max_atoms)
 {
     INDIGO_BEGIN
     {
@@ -4321,7 +4321,7 @@
     return res.release();
 }
 
-CEXPORT int indigoIterateRings(int molecule, int min_atoms, int max_atoms)
+int indigoIterateRings(int molecule, int min_atoms, int max_atoms)
 {
     INDIGO_BEGIN
     {
@@ -4374,7 +4374,7 @@
     return res.release();
 }
 
-CEXPORT int indigoIterateEdgeSubmolecules(int molecule, int min_bonds, int max_bonds)
+int indigoIterateEdgeSubmolecules(int molecule, int min_bonds, int max_bonds)
 {
     INDIGO_BEGIN
     {
@@ -4385,7 +4385,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountHydrogens(int item, int* hydro)
+int indigoCountHydrogens(int item, int* hydro)
 {
     INDIGO_BEGIN
     {
@@ -4423,7 +4423,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountImplicitHydrogens(int item)
+int indigoCountImplicitHydrogens(int item)
 {
     INDIGO_BEGIN
     {
@@ -4476,7 +4476,7 @@
     return _mol.getAttachmentPoint(_order, _index + 1) != -1;
 }
 
-CEXPORT int indigoIterateAttachmentPoints(int molecule, int order)
+int indigoIterateAttachmentPoints(int molecule, int order)
 {
     INDIGO_BEGIN
     {
@@ -4494,7 +4494,7 @@
 name - a name to parse
 params - a string containing parsing options or nullptr if no options are changed
 */
-CEXPORT int indigoNameToStructure(const char* name, const char* params)
+int indigoNameToStructure(const char* name, const char* params)
 {
     INDIGO_BEGIN
     {
@@ -4528,7 +4528,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCheckRGroups(int item)
+int indigoCheckRGroups(int item)
 {
     INDIGO_BEGIN
     {
Index: yaehmop-src/yaehmop/tightbind/prototypes.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/yaehmop-src/yaehmop/tightbind/prototypes.h b/yaehmop-src/yaehmop/tightbind/prototypes.h
--- a/yaehmop-src/yaehmop/tightbind/prototypes.h	(revision c81f41694bcffccf38e17a63627a862628294613)
+++ b/yaehmop-src/yaehmop/tightbind/prototypes.h	(date 1693030079919)
@@ -136,7 +136,7 @@
 extern void eval_charge_matrix PROTO((cell_type *, eigenset_type,
                                       hermetian_matrix_type, int, int *, real *,
                                       real *));
-extern void reduced_charge_mat PROTO((int, int, int *, real *, real *));
+extern void reduced_charge_matrix PROTO((int, int, int *, real *, real *));
 extern void check_a_cell PROTO((atom_type *, point_type, int, real, char *));
 extern void check_nn_contacts PROTO((cell_type *, detail_type *details));
 extern void build_distance_matrix PROTO((cell_type *, detail_type *details));
Index: rdkit-src/rdkit/Code/ML/Cluster/Murtagh/f2c.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/ML/Cluster/Murtagh/f2c.h b/rdkit-src/rdkit/Code/ML/Cluster/Murtagh/f2c.h
--- a/rdkit-src/rdkit/Code/ML/Cluster/Murtagh/f2c.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/ML/Cluster/Murtagh/f2c.h	(date 1693030079721)
@@ -4,7 +4,6 @@
 
         - From The Shogakukan DICTIONARY OF NEW ENGLISH (Second edition) */
 
-#include <RDGeneral/export.h>
 #ifndef F2C_INCLUDE
 #define F2C_INCLUDE
 
Index: cairo-src/cairo/src/cairoint.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cairo-src/cairo/src/cairoint.h b/cairo-src/cairo/src/cairoint.h
--- a/cairo-src/cairo/src/cairoint.h	(revision c3b672634f0635af1ad0ffa8c15b34fc7c1035cf)
+++ b/cairo-src/cairo/src/cairoint.h	(date 1693030076936)
@@ -48,8 +48,10 @@
 
 #include "config.h"
 
-#ifdef _MSC_VER
-#define cairo_public __declspec(dllexport)
+#include "cairo_export.h"
+
+#ifndef cairo_public
+#define cairo_public CAIRO_EXPORT
 #endif
 
 #include <assert.h>
Index: indigo-src/indigo/api/c/indigo/src/indigo_mapping.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_mapping.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_mapping.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_mapping.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_mapping.cpp	(date 1693030077093)
@@ -62,7 +62,7 @@
     return res_ptr.release();
 }
 
-CEXPORT int indigoMapAtom(int handle, int atom)
+int indigoMapAtom(int handle, int atom)
 {
     INDIGO_BEGIN
     {
@@ -105,7 +105,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoMapBond(int handle, int bond)
+int indigoMapBond(int handle, int bond)
 {
     INDIGO_BEGIN
     {
@@ -190,7 +190,7 @@
     }
 }
 
-CEXPORT int indigoHighlightedTarget(int item)
+int indigoHighlightedTarget(int item)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_structure_checker.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_structure_checker.h b/indigo-src/indigo/api/c/indigo/src/indigo_structure_checker.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_structure_checker.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_structure_checker.h	(date 1693030077140)
@@ -28,7 +28,7 @@
 namespace indigo
 {
 
-    class DLLEXPORT IndigoStructureChecker : public StructureChecker
+    class INDIGO_EXPORT IndigoStructureChecker : public StructureChecker
     {
     public:
         IndigoStructureChecker();
Index: indigo-src/indigo/api/c/indigo/src/indigo_loaders.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_loaders.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_loaders.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_loaders.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_loaders.cpp	(date 1693030077077)
@@ -510,7 +510,7 @@
     return next();
 }
 
-CEXPORT int indigoIterateSDF(int reader)
+int indigoIterateSDF(int reader)
 {
     INDIGO_BEGIN
     {
@@ -521,7 +521,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateRDF(int reader)
+int indigoIterateRDF(int reader)
 {
     INDIGO_BEGIN
     {
@@ -532,7 +532,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateSmiles(int reader)
+int indigoIterateSmiles(int reader)
 {
     INDIGO_BEGIN
     {
@@ -543,7 +543,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoTell(int handle)
+int indigoTell(int handle)
 {
     INDIGO_BEGIN
     {
@@ -584,7 +584,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT long long indigoTell64(int handle)
+long long indigoTell64(int handle)
 {
     INDIGO_BEGIN
     {
@@ -617,7 +617,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateSDFile(const char* filename)
+int indigoIterateSDFile(const char* filename)
 {
     INDIGO_BEGIN
     {
@@ -626,7 +626,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateRDFile(const char* filename)
+int indigoIterateRDFile(const char* filename)
 {
     INDIGO_BEGIN
     {
@@ -635,7 +635,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateSmilesFile(const char* filename)
+int indigoIterateSmilesFile(const char* filename)
 {
     INDIGO_BEGIN
     {
@@ -774,7 +774,7 @@
         return new IndigoCmlMolecule(loader->data, counter, offset);
 }
 
-CEXPORT int indigoIterateCML(int reader)
+int indigoIterateCML(int reader)
 {
     INDIGO_BEGIN
     {
@@ -785,7 +785,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateCMLFile(const char* filename)
+int indigoIterateCMLFile(const char* filename)
 {
     INDIGO_BEGIN
     {
@@ -936,7 +936,7 @@
         return new IndigoCdxMolecule(loader->data, loader->properties, index, 0);
 }
 
-CEXPORT int indigoIterateCDX(int reader)
+int indigoIterateCDX(int reader)
 {
     INDIGO_BEGIN
     {
@@ -947,7 +947,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateCDXFile(const char* filename)
+int indigoIterateCDXFile(const char* filename)
 {
     INDIGO_BEGIN
     {
Index: yaehmop-src/yaehmop/tightbind/Zmat.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/yaehmop-src/yaehmop/tightbind/Zmat.c b/yaehmop-src/yaehmop/tightbind/Zmat.c
--- a/yaehmop-src/yaehmop/tightbind/Zmat.c	(revision c81f41694bcffccf38e17a63627a862628294613)
+++ b/yaehmop-src/yaehmop/tightbind/Zmat.c	(date 1693030079950)
@@ -60,6 +60,7 @@
   sprintf(err_string,"Can't find atom %d (of %d) in find_atom.\n",
           which,num_atoms);
   FATAL_BUG(err_string);
+  return -1;
 }
 
 
Index: indigo-src/indigo/api/c/indigo/src/indigo_layout.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_layout.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_layout.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_layout.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_layout.cpp	(date 1693030077077)
@@ -27,7 +27,7 @@
 #include <algorithm>
 #include <vector>
 
-CEXPORT int indigoLayout(int object)
+int indigoLayout(int object)
 {
     INDIGO_BEGIN
     {
@@ -126,7 +126,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClean2d(int object)
+int indigoClean2d(int object)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_stereo.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_stereo.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_stereo.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_stereo.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_stereo.cpp	(date 1693030077124)
@@ -22,7 +22,7 @@
 #include "molecule/molecule_exact_matcher.h"
 #include "reaction/reaction.h"
 
-CEXPORT int indigoStereocenterType(int atom)
+int indigoStereocenterType(int atom)
 {
     INDIGO_BEGIN
     {
@@ -65,7 +65,7 @@
     }
 }
 
-CEXPORT int indigoStereocenterGroup(int atom)
+int indigoStereocenterGroup(int atom)
 {
     INDIGO_BEGIN
     {
@@ -79,7 +79,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetStereocenterGroup(int atom, int group)
+int indigoSetStereocenterGroup(int atom, int group)
 {
     INDIGO_BEGIN
     {
@@ -94,7 +94,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoChangeStereocenterType(int atom, int type)
+int indigoChangeStereocenterType(int atom, int type)
 {
     INDIGO_BEGIN
     {
@@ -113,7 +113,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddStereocenter(int atom, int type, int v1, int v2, int v3, int v4)
+int indigoAddStereocenter(int atom, int type, int v1, int v2, int v3, int v4)
 {
     INDIGO_BEGIN
     {
@@ -145,7 +145,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const int* indigoStereocenterPyramid(int atom)
+const int* indigoStereocenterPyramid(int atom)
 {
     INDIGO_BEGIN
     {
@@ -159,7 +159,7 @@
     INDIGO_END(NULL);
 }
 
-CEXPORT int indigoCountStereocenters(int molecule)
+int indigoCountStereocenters(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -170,7 +170,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClearAlleneCenters(int molecule)
+int indigoClearAlleneCenters(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -182,7 +182,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountAlleneCenters(int molecule)
+int indigoCountAlleneCenters(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -193,7 +193,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoBondStereo(int bond)
+int indigoBondStereo(int bond)
 {
     INDIGO_BEGIN
     {
@@ -220,7 +220,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoInvertStereo(int item)
+int indigoInvertStereo(int item)
 {
     INDIGO_BEGIN
     {
@@ -261,7 +261,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoResetStereo(int item)
+int indigoResetStereo(int item)
 {
     INDIGO_BEGIN
     {
@@ -290,7 +290,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClearStereocenters(int object)
+int indigoClearStereocenters(int object)
 {
     INDIGO_BEGIN
     {
@@ -319,7 +319,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClearCisTrans(int object)
+int indigoClearCisTrans(int object)
 {
     INDIGO_BEGIN
     {
@@ -433,7 +433,7 @@
     return sum;
 }
 
-CEXPORT int indigoResetSymmetricCisTrans(int handle)
+int indigoResetSymmetricCisTrans(int handle)
 {
     INDIGO_BEGIN
     {
@@ -455,7 +455,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoResetSymmetricStereocenters(int handle)
+int indigoResetSymmetricStereocenters(int handle)
 {
     INDIGO_BEGIN
     {
@@ -477,7 +477,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoMarkEitherCisTrans(int handle)
+int indigoMarkEitherCisTrans(int handle)
 {
     INDIGO_BEGIN
     {
@@ -499,7 +499,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoMarkStereobonds(int handle)
+int indigoMarkStereobonds(int handle)
 {
     INDIGO_BEGIN
     {
@@ -552,7 +552,7 @@
     }
 }
 
-CEXPORT int indigoValidateChirality(int handle)
+int indigoValidateChirality(int handle)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_tautomer_enumerator.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_tautomer_enumerator.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_tautomer_enumerator.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_tautomer_enumerator.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_tautomer_enumerator.cpp	(date 1693030077140)
@@ -19,7 +19,7 @@
 #include "indigo_tautomer_enumerator.h"
 #include "indigo_molecule.h"
 
-CEXPORT int indigoIterateTautomers(int molecule, const char* options)
+int indigoIterateTautomers(int molecule, const char* options)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_properties.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_properties.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_properties.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_properties.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_properties.cpp	(date 1693030077108)
@@ -19,7 +19,7 @@
 #include "indigo_properties.h"
 #include "base_cpp/properties_map.h"
 
-CEXPORT int indigoHasProperty(int handle, const char* prop)
+int indigoHasProperty(int handle, const char* prop)
 {
     INDIGO_BEGIN
     {
@@ -35,7 +35,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoGetProperty(int handle, const char* prop)
+const char* indigoGetProperty(int handle, const char* prop)
 {
     INDIGO_BEGIN
     {
@@ -52,7 +52,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT int indigoSetProperty(int handle, const char* prop, const char* value)
+int indigoSetProperty(int handle, const char* prop, const char* value)
 {
     INDIGO_BEGIN
     {
@@ -70,7 +70,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoRemoveProperty(int handle, const char* prop)
+int indigoRemoveProperty(int handle, const char* prop)
 {
     INDIGO_BEGIN
     {
@@ -138,7 +138,7 @@
     return new IndigoProperty(_props, _idx);
 }
 
-CEXPORT int indigoIterateProperties(int handle)
+int indigoIterateProperties(int handle)
 {
     INDIGO_BEGIN
     {
@@ -150,7 +150,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClearProperties(int handle)
+int indigoClearProperties(int handle)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_match.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_match.h b/indigo-src/indigo/api/c/indigo/src/indigo_match.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_match.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_match.h	(date 1693030077093)
@@ -101,7 +101,7 @@
 };
 
 // Matcher class for matching queries on a specified target molecule
-class DLLEXPORT IndigoMoleculeSubstructureMatcher : public IndigoObject
+class INDIGO_EXPORT IndigoMoleculeSubstructureMatcher : public IndigoObject
 {
 public:
     enum
@@ -145,7 +145,7 @@
     MoleculeAtomNeighbourhoodCounters _nei_counters, _nei_counters_h_unfolded;
 };
 
-class DLLEXPORT IndigoReactionSubstructureMatcher : public IndigoObject
+class INDIGO_EXPORT IndigoReactionSubstructureMatcher : public IndigoObject
 {
 public:
     IndigoReactionSubstructureMatcher(Reaction& target);
@@ -164,8 +164,8 @@
     Array<int> mol_mapping;
 };
 
-DLLEXPORT bool _indigoParseTautomerFlags(const char* flags, IndigoTautomerParams& params);
-DLLEXPORT int _indigoParseExactFlags(const char* flags, bool reaction, float* rms_threshold);
+INDIGO_EXPORT bool _indigoParseTautomerFlags(const char* flags, IndigoTautomerParams& params);
+INDIGO_EXPORT int _indigoParseExactFlags(const char* flags, bool reaction, float* rms_threshold);
 
 #ifdef _WIN32
 #pragma warning(pop)
Index: yaehmop-src/yaehmop/tightbind/lovlap.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/yaehmop-src/yaehmop/tightbind/lovlap.c b/yaehmop-src/yaehmop/tightbind/lovlap.c
--- a/yaehmop-src/yaehmop/tightbind/lovlap.c	(revision c81f41694bcffccf38e17a63627a862628294613)
+++ b/yaehmop-src/yaehmop/tightbind/lovlap.c	(date 1693030079904)
@@ -2,7 +2,7 @@
 Produced by gmFortran V30.59(10/26/17) on 9/17/18 at 9:45:37
 */
 #define LPROTOTYPE
-#include "fortran.h"
+#include <math.h>
 /*
 */
 void lovlap(double *strad,double *a,double *b,double *sk1,double *sk2,double *r,
Index: indigo-src/indigo/api/c/indigo/src/indigo_savers.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_savers.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_savers.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_savers.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_savers.cpp	(date 1693030077124)
@@ -146,7 +146,7 @@
     append(_output, object);
 }
 
-CEXPORT int indigoSdfAppend(int output, int molecule)
+int indigoSdfAppend(int output, int molecule)
 {
     INDIGO_BEGIN
     {
@@ -274,7 +274,7 @@
     append(_output, object);
 }
 
-CEXPORT int indigoSmilesAppend(int output, int item)
+int indigoSmilesAppend(int output, int item)
 {
     INDIGO_BEGIN
     {
@@ -419,7 +419,7 @@
     appendFooter(_output);
 }
 
-CEXPORT int indigoCmlHeader(int output)
+int indigoCmlHeader(int output)
 {
     INDIGO_BEGIN
     {
@@ -430,7 +430,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCmlFooter(int output)
+int indigoCmlFooter(int output)
 {
     INDIGO_BEGIN
     {
@@ -441,7 +441,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCmlAppend(int output, int item)
+int indigoCmlAppend(int output, int item)
 {
     INDIGO_BEGIN
     {
@@ -520,7 +520,7 @@
     appendHeader(_output);
 }
 
-CEXPORT int indigoRdfHeader(int output)
+int indigoRdfHeader(int output)
 {
     INDIGO_BEGIN
     {
@@ -531,7 +531,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoRdfAppend(int output, int item)
+int indigoRdfAppend(int output, int item)
 {
     INDIGO_BEGIN
     {
@@ -546,7 +546,7 @@
 //
 // Saving functions
 //
-CEXPORT int indigoCreateSaver(int output, const char* format)
+int indigoCreateSaver(int output, const char* format)
 {
     INDIGO_BEGIN
     {
@@ -556,7 +556,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCreateFileSaver(const char* filename, const char* format)
+int indigoCreateFileSaver(const char* filename, const char* format)
 {
     INDIGO_BEGIN
     {
@@ -568,7 +568,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSaveMolfile(int molecule, int output)
+int indigoSaveMolfile(int molecule, int output)
 {
     INDIGO_BEGIN
     {
@@ -581,7 +581,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSaveJson(int item, int output)
+int indigoSaveJson(int item, int output)
 {
     INDIGO_BEGIN
     {
@@ -610,7 +610,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSaveCml(int item, int output)
+int indigoSaveCml(int item, int output)
 {
     INDIGO_BEGIN
     {
@@ -643,7 +643,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSaveMDLCT(int item, int output)
+int indigoSaveMDLCT(int item, int output)
 {
     INDIGO_BEGIN
     {
@@ -671,7 +671,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSaveRxnfile(int reaction, int output)
+int indigoSaveRxnfile(int reaction, int output)
 {
     INDIGO_BEGIN
     {
@@ -689,7 +689,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAppend(int saver_id, int object)
+int indigoAppend(int saver_id, int object)
 {
     INDIGO_BEGIN
     {
@@ -704,7 +704,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSaveCdxml(int item, int output)
+int indigoSaveCdxml(int item, int output)
 {
     INDIGO_BEGIN
     {
@@ -748,7 +748,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSaveCdx(int item, int output)
+int indigoSaveCdx(int item, int output)
 {
     INDIGO_BEGIN
     {
Index: openbabel-src/openbabel/src/config.h.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/config.h.cmake b/openbabel-src/openbabel/src/config.h.cmake
--- a/openbabel-src/openbabel/src/config.h.cmake	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/config.h.cmake	(date 1693030079030)
@@ -16,23 +16,12 @@
 /* The file extension used for shared modules */
 #define MODULE_EXTENSION "@MODULE_EXTENSION@"
 
+#include <openbabel_export.hpp>
 // If we are using a recent GCC version with visibility support use it
-#ifdef HAVE_GCC_VISIBILITY
-  #define OB_EXPORT __attribute__ ((visibility("default")))
-  #define OB_IMPORT __attribute__ ((visibility("default")))
-  #define OB_HIDDEN __attribute__ ((visibility("hidden")))
-#elif defined(WIN32) && defined(USING_DYNAMIC_LIBS) && !defined(__MINGW32__)
- #define OB_EXPORT __declspec(dllexport)
- #define OB_IMPORT __declspec(dllimport)
- #define OB_HIDDEN
-#else
- #define OB_EXPORT
- #define OB_IMPORT
- #define OB_HIDDEN
+#ifndef OB_EXPORT
+#define OB_EXPORT OPENBABEL_EXPORT
 #endif
 
-/* Used to export symbols for DLL / shared library builds */
-#if defined(MAKE_OBDLL) // e.g. in src/main.cpp
  #ifndef OB_EXTERN
   #define OB_EXTERN   OB_EXPORT extern
  #endif
@@ -60,39 +49,6 @@
  #ifndef OBDEPICT
   #define OBDEPICT OB_EXPORT
  #endif
-
-#else   // defined(MAKE_OBDLL)
-
- #ifndef OB_EXTERN
-  #define OB_EXTERN   OB_IMPORT extern
- #endif
- #ifndef OBAPI
-  #define OBAPI    OB_IMPORT
- #endif
- #ifndef OBCOMMON
-  #define OBCOMMON OB_IMPORT
- #endif
- #ifndef OBCONV
-  #define OBCONV   OB_IMPORT
- #endif
- #ifndef OBERROR
-  #define OBERROR  OB_IMPORT
- #endif
- #ifndef OBFPRT
-  #define OBFPRT   OB_IMPORT
- #endif
- #ifndef OBFPTR
-  #define OBFPTR   OB_IMPORT
- #endif
- #ifndef OBMCDL
- #define OBMCDL    OB_IMPORT
-  #ifndef OBDEPICT
- #define OBDEPICT  OB_IMPORT
- #endif
-
- #endif
-
-#endif
 
 #ifdef _MSC_VER
  // Suppress warning on deprecated functions
@@ -149,6 +105,22 @@
 /* have struct clock_t */
 #cmakedefine HAVE_CLOCK_T 1
 
+#cmakedefine HAVE_REGEX_H 1
+
+#cmakedefine HAVE_SHARED_POINTER 1
+
+#cmakedefine HAVE_EIGEN 1
+
+#cmakedefine HAVE_EIGEN3 1
+
+#cmakedefine HAVE_STATIC_INCHI 1
+
+#cmakedefine HAVE_LIBZ 1
+
+#cmakedefine HAVE_STATIC_LIBXML 1
+
+#cmakedefine HAVE_RPC_XDR_H 1
+
 /* shared pointer implementation to be used */
 #cmakedefine OB_SHARED_PTR_IMPLEMENTATION @OB_SHARED_PTR_IMPLEMENTATION@
 
Index: openbabel-src/openbabel/src/RDKitConv.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/RDKitConv.cpp b/openbabel-src/openbabel/src/RDKitConv.cpp
--- a/openbabel-src/openbabel/src/RDKitConv.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/RDKitConv.cpp	(date 1693030079237)
@@ -23,6 +23,9 @@
 ***********************************************************************/
 
 #include <openbabel/babelconfig.h>
+#include <openbabel/oberror.h>
+#include <openbabel/bond.h>
+#include <openbabel/bondtyper.h>
 #include <RDKitConv.h>
 
 using OpenBabel::OBMolAtomIter;
@@ -45,7 +48,7 @@
   {
     //bond order >3 needs doing properly
     //assume RDKit atom indices start at 0
-    RDMol.addBond(b->GetBeginAtomIdx()-1, b->GetEndAtomIdx()-1, (RDKit::Bond::BondType)b->GetBO());
+    RDMol.addBond(b->GetBeginAtomIdx()-1, b->GetEndAtomIdx()-1, (RDKit::Bond::BondType)b->GetBondOrder());
   }
   std::string msg("RWMol made from ");
   if(pOBMol->GetTitle())
Index: indigo-src/indigo/api/c/indigo/src/indigo_array.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_array.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_array.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_array.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_array.cpp	(date 1693030077046)
@@ -139,7 +139,7 @@
     return _idx + 1 < _arr->objects.size();
 }
 
-CEXPORT int indigoCreateArray()
+int indigoCreateArray()
 {
     INDIGO_BEGIN
     {
@@ -148,7 +148,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoArrayAdd(int arr, int handle)
+int indigoArrayAdd(int arr, int handle)
 {
     INDIGO_BEGIN
     {
@@ -163,7 +163,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateArray(int arr)
+int indigoIterateArray(int arr)
 {
     INDIGO_BEGIN
     {
Index: indigo-src/indigo/api/c/indigo/src/indigo_reaction.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_reaction.h b/indigo-src/indigo/api/c/indigo/src/indigo_reaction.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_reaction.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_reaction.h	(date 1693030077124)
@@ -29,7 +29,7 @@
 #pragma warning(disable : 4251)
 #endif
 
-class DLLEXPORT IndigoBaseReaction : public IndigoObject
+class INDIGO_EXPORT IndigoBaseReaction : public IndigoObject
 {
 public:
     explicit IndigoBaseReaction(int type_);
@@ -59,7 +59,7 @@
     indigo::PropertiesMap _properties;
 };
 
-class DLLEXPORT IndigoReaction : public IndigoBaseReaction
+class INDIGO_EXPORT IndigoReaction : public IndigoBaseReaction
 {
 public:
     IndigoReaction();
@@ -78,7 +78,7 @@
     Reaction rxn;
 };
 
-class DLLEXPORT IndigoQueryReaction : public IndigoBaseReaction
+class INDIGO_EXPORT IndigoQueryReaction : public IndigoBaseReaction
 {
 public:
     IndigoQueryReaction();
Index: indigo-src/indigo/api/c/indigo/src/indigo_molecule.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_molecule.h b/indigo-src/indigo/api/c/indigo/src/indigo_molecule.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_molecule.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_molecule.h	(date 1693030077108)
@@ -33,7 +33,7 @@
 #include "molecule/molecule_neighbourhood_counters.h"
 #include "molecule/query_molecule.h"
 
-class DLLEXPORT IndigoBaseMolecule : public IndigoObject
+class INDIGO_EXPORT IndigoBaseMolecule : public IndigoObject
 {
 public:
     explicit IndigoBaseMolecule(int type_);
@@ -52,7 +52,7 @@
     indigo::PropertiesMap _properties;
 };
 
-class DLLEXPORT IndigoQueryMolecule : public IndigoBaseMolecule
+class INDIGO_EXPORT IndigoQueryMolecule : public IndigoBaseMolecule
 {
 public:
     IndigoQueryMolecule();
@@ -80,7 +80,7 @@
     int _nei_counters_edit_revision;
 };
 
-class DLLEXPORT IndigoMolecule : public IndigoBaseMolecule
+class INDIGO_EXPORT IndigoMolecule : public IndigoBaseMolecule
 {
 public:
     IndigoMolecule();
@@ -102,7 +102,7 @@
     Molecule mol;
 };
 
-class DLLEXPORT IndigoAtom : public IndigoObject
+class INDIGO_EXPORT IndigoAtom : public IndigoObject
 {
 public:
     IndigoAtom(BaseMolecule& mol_, int idx_);
@@ -122,7 +122,7 @@
     const char* debugInfo() const override;
 };
 
-class DLLEXPORT IndigoRGroup : public IndigoObject
+class INDIGO_EXPORT IndigoRGroup : public IndigoObject
 {
 public:
     IndigoRGroup();
@@ -136,7 +136,7 @@
     int idx;
 };
 
-class DLLEXPORT IndigoRGroupFragment : public IndigoObject
+class INDIGO_EXPORT IndigoRGroupFragment : public IndigoObject
 {
 public:
     IndigoRGroupFragment(IndigoRGroup& rgp, int idx);
@@ -156,7 +156,7 @@
     int frag_idx;
 };
 
-class DLLEXPORT IndigoBond : public IndigoObject
+class INDIGO_EXPORT IndigoBond : public IndigoObject
 {
 public:
     IndigoBond(BaseMolecule& mol_, int idx_);
Index: ncnn-src/ncnn/src/modelbin.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ncnn-src/ncnn/src/modelbin.cpp b/ncnn-src/ncnn/src/modelbin.cpp
--- a/ncnn-src/ncnn/src/modelbin.cpp	(revision 903ec7c2c9417e1ee11cb667d2198cc3607458ed)
+++ b/ncnn-src/ncnn/src/modelbin.cpp	(date 1693030077665)
@@ -92,7 +92,6 @@
 
 Mat ModelBinFromDataReader::load(int w, int type) const
 {
-    Mat m;
 
     if (type == 0)
     {
@@ -124,15 +123,6 @@
             // half-precision data
             size_t align_data_size = alignSize(w * sizeof(unsigned short), 4);
 
-            // try reference data
-            const void* refbuf = 0;
-            nread = d->dr.reference(align_data_size, &refbuf);
-            if (nread == align_data_size)
-            {
-                m = Mat::from_float16((const unsigned short*)refbuf, w);
-            }
-            else
-            {
                 std::vector<unsigned short> float16_weights;
                 float16_weights.resize(align_data_size);
                 nread = d->dr.read(&float16_weights[0], align_data_size);
@@ -142,25 +132,12 @@
                     return Mat();
                 }
 
-                m = Mat::from_float16(&float16_weights[0], w);
-            }
-
-            return m;
+                return Mat::from_float16(float16_weights.data(), w);
         }
         else if (flag_struct.tag == 0x000D4B38)
         {
             // int8 data
             size_t align_data_size = alignSize(w, 4);
-
-            // try reference data
-            const void* refbuf = 0;
-            nread = d->dr.reference(align_data_size, &refbuf);
-            if (nread == align_data_size)
-            {
-                m = Mat(w, (void*)refbuf, (size_t)1u);
-            }
-            else
-            {
                 std::vector<signed char> int8_weights;
                 int8_weights.resize(align_data_size);
                 nread = d->dr.read(&int8_weights[0], align_data_size);
@@ -170,27 +147,17 @@
                     return Mat();
                 }
 
-                m.create(w, (size_t)1u);
+                Mat m(w, (size_t)1u);
                 if (m.empty())
                     return m;
 
                 memcpy(m.data, &int8_weights[0], w);
-            }
 
             return m;
         }
         else if (flag_struct.tag == 0x0002C056)
         {
-            // try reference data
-            const void* refbuf = 0;
-            nread = d->dr.reference(w * sizeof(float), &refbuf);
-            if (nread == w * sizeof(float))
-            {
-                m = Mat(w, (void*)refbuf);
-            }
-            else
-            {
-                m.create(w);
+            Mat m(w);
                 if (m.empty())
                     return m;
 
@@ -201,17 +168,14 @@
                     NCNN_LOGE("ModelBin read weight_data failed %zd", nread);
                     return Mat();
                 }
-            }
 
             return m;
         }
-
-        if (flag != 0)
-        {
-            m.create(w);
+        Mat m(w);
             if (m.empty())
                 return m;
-
+        if (flag != 0)
+        {
             // quantized data
             float quantization_value[256];
             nread = d->dr.read(quantization_value, 256 * sizeof(float));
@@ -239,19 +203,6 @@
         }
         else if (flag_struct.f0 == 0)
         {
-            // try reference data
-            const void* refbuf = 0;
-            nread = d->dr.reference(w * sizeof(float), &refbuf);
-            if (nread == w * sizeof(float))
-            {
-                m = Mat(w, (void*)refbuf);
-            }
-            else
-            {
-                m.create(w);
-                if (m.empty())
-                    return m;
-
                 // raw data
                 nread = d->dr.read(m, w * sizeof(float));
                 if (nread != w * sizeof(float))
@@ -260,22 +211,11 @@
                     return Mat();
                 }
             }
-        }
-
         return m;
     }
     else if (type == 1)
     {
-        // try reference data
-        const void* refbuf = 0;
-        size_t nread = d->dr.reference(w * sizeof(float), &refbuf);
-        if (nread == w * sizeof(float))
-        {
-            m = Mat(w, (void*)refbuf);
-        }
-        else
-        {
-            m.create(w);
+            Mat m(w);
             if (m.empty())
                 return m;
 
@@ -286,8 +226,6 @@
                 NCNN_LOGE("ModelBin read weight_data failed %zd", nread);
                 return Mat();
             }
-        }
-
         return m;
     }
     else
Index: indigo-src/indigo/api/c/indigo/src/option_manager.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/option_manager.cpp b/indigo-src/indigo/api/c/indigo/src/option_manager.cpp
--- a/indigo-src/indigo/api/c/indigo/src/option_manager.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/option_manager.cpp	(date 1693030077140)
@@ -29,7 +29,7 @@
     return mgr;
 }
 
-DLLEXPORT sf::safe_shared_hide_obj<IndigoOptionManager>& indigoGetOptionManager(const qword id)
+sf::safe_shared_hide_obj<IndigoOptionManager>& indigoGetOptionManager(const qword id)
 {
     return IndigoOptionManager::getIndigoOptionManager().getLocalCopy(id);
 }
Index: openbabel-src/openbabel/src/zipstreamimpl.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/zipstreamimpl.h b/openbabel-src/openbabel/src/zipstreamimpl.h
--- a/openbabel-src/openbabel/src/zipstreamimpl.h	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/zipstreamimpl.h	(date 1693030079268)
@@ -176,8 +176,7 @@
     }
     while(_err == Z_OK);
 
-    if(&_ostream)
-			_ostream.flush();
+    _ostream.flush();
 
     return total_written_byte_size;
 }
Index: openbabel-src/openbabel/src/format.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/format.cpp b/openbabel-src/openbabel/src/format.cpp
--- a/openbabel-src/openbabel/src/format.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/format.cpp	(date 1693030079092)
@@ -23,11 +23,6 @@
 using namespace std;
 namespace OpenBabel
 {
-#if defined(__CYGWIN__) || defined(__MINGW32__)
-  // macro to implement static OBPlugin::PluginMapType& Map()
-  PLUGIN_CPP_FILE(OBFormat)
-#endif
-
 int OBFormat::RegisterFormat(const char* ID, const char* MIME)
 {
   GetMap()[ID] = this;
Index: ncnn-src/ncnn/src/datareader.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ncnn-src/ncnn/src/datareader.h b/ncnn-src/ncnn/src/datareader.h
--- a/ncnn-src/ncnn/src/datareader.h	(revision 903ec7c2c9417e1ee11cb667d2198cc3607458ed)
+++ b/ncnn-src/ncnn/src/datareader.h	(date 1693030077634)
@@ -44,10 +44,6 @@
     // read binary param and model data
     // return bytes read
     virtual size_t read(void* buf, size_t size) const;
-
-    // get model data reference
-    // return bytes referenced
-    virtual size_t reference(size_t size, const void** buf) const;
 };
 
 #if NCNN_STDIO
@@ -83,7 +79,6 @@
     virtual int scan(const char* format, void* p) const;
 #endif // NCNN_STRING
     virtual size_t read(void* buf, size_t size) const;
-    virtual size_t reference(size_t size, const void** buf) const;
 
 private:
     DataReaderFromMemory(const DataReaderFromMemory&);
Index: indigo-src/indigo/api/c/indigo/src/indigo_scaffold.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_scaffold.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_scaffold.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_scaffold.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_scaffold.cpp	(date 1693030077124)
@@ -31,7 +31,7 @@
 {
 }
 
-CEXPORT int indigoExtractCommonScaffold(int structures, const char* options)
+int indigoExtractCommonScaffold(int structures, const char* options)
 {
     INDIGO_BEGIN
     {
@@ -104,7 +104,7 @@
     return max_scaffold;
 }
 
-CEXPORT int indigoAllScaffolds(int extracted)
+int indigoAllScaffolds(int extracted)
 {
     INDIGO_BEGIN
     {
Index: openbabel-src/openbabel/src/mcdlutil.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/mcdlutil.cpp b/openbabel-src/openbabel/src/mcdlutil.cpp
--- a/openbabel-src/openbabel/src/mcdlutil.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/mcdlutil.cpp	(date 1693030079108)
@@ -5033,7 +5033,7 @@
 
     if (bondLabel != nullptr && nBonds() > 0) {
       bondLabel->resize(molecule1->nBonds());
-      if (test2) for (j=0; j<molecule1->nBonds(); j++) if (bSTested[j]>=0) (*bondLabel)[j]=1; else (*bondLabel)[j]=0;
+      if (test2) for (j=0; j<molecule1->nBonds(); j++) { if (bSTested[j]>=0) (*bondLabel)[j]=1; else (*bondLabel)[j]=0; }
     };
     result=test2;
 
@@ -5102,7 +5102,7 @@
   std::vector<TEditedMolecule *> TemplateRedraw::queryData;
 
   bool TemplateRedraw::loadTemplates() {
-    std::ifstream ifs;
+    std::istringstream ifs;
     string filename("templates.sdf");//("e:\\templates.sdf");
     TEditedMolecule sm;
     TEditedMolecule * em;
Index: indigo-src/indigo/api/c/indigo/src/indigo_macros.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_macros.c b/indigo-src/indigo/api/c/indigo/src/indigo_macros.c
--- a/indigo-src/indigo/api/c/indigo/src/indigo_macros.c	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_macros.c	(date 1693030077077)
@@ -19,7 +19,7 @@
 #include "indigo.h"
 
 #define WRAPPER_LOAD_FROM_STRING(name)                                                                                                                         \
-    CEXPORT int name##FromString(const char* string)                                                                                                           \
+    INDIGO_EXPORT int name##FromString(const char* string)                                                                                                           \
     {                                                                                                                                                          \
         int source = indigoReadString(string);                                                                                                                 \
         int result;                                                                                                                                            \
@@ -33,7 +33,7 @@
     }
 
 #define WRAPPER_LOAD_FROM_FILE(name)                                                                                                                           \
-    CEXPORT int name##FromFile(const char* filename)                                                                                                           \
+    INDIGO_EXPORT int name##FromFile(const char* filename)                                                                                                           \
     {                                                                                                                                                          \
         int source = indigoReadFile(filename);                                                                                                                 \
         int result;                                                                                                                                            \
@@ -47,7 +47,7 @@
     }
 
 #define WRAPPER_LOAD_FROM_BUFFER(name)                                                                                                                         \
-    CEXPORT int name##FromBuffer(const char* buf, int size)                                                                                                    \
+    INDIGO_EXPORT int name##FromBuffer(const char* buf, int size)                                                                                                    \
     {                                                                                                                                                          \
         int source = indigoReadBuffer(buf, size);                                                                                                              \
         int result;                                                                                                                                            \
@@ -84,7 +84,7 @@
 WRAPPER_LOAD_FROM_FILE(indigoLoadReactionSmarts)
 WRAPPER_LOAD_FROM_BUFFER(indigoLoadReactionSmarts)
 
-CEXPORT int indigoSaveMolfileToFile(int molecule, const char* filename)
+INDIGO_EXPORT int indigoSaveMolfileToFile(int molecule, const char* filename)
 {
     int f = indigoWriteFile(filename);
     int res;
@@ -98,7 +98,7 @@
     return res;
 }
 
-CEXPORT int indigoSaveJsonToFile(int item, const char* filename)
+INDIGO_EXPORT int indigoSaveJsonToFile(int item, const char* filename)
 {
     int f = indigoWriteFile(filename);
     int res;
@@ -112,7 +112,7 @@
     return res;
 }
 
-CEXPORT int indigoSaveCmlToFile(int molecule, const char* filename)
+INDIGO_EXPORT int indigoSaveCmlToFile(int molecule, const char* filename)
 {
     int f = indigoWriteFile(filename);
     int res;
@@ -126,7 +126,7 @@
     return res;
 }
 
-CEXPORT const char* indigoMolfile(int molecule)
+INDIGO_EXPORT const char* indigoMolfile(int molecule)
 {
     int b = indigoWriteBuffer();
     const char* res;
@@ -142,7 +142,7 @@
     return res;
 }
 
-CEXPORT const char* indigoCdxBase64(int object)
+INDIGO_EXPORT const char* indigoCdxBase64(int object)
 {
     int b = indigoWriteBuffer();
     const char* res;
@@ -158,7 +158,7 @@
     return res;
 }
 
-CEXPORT const char* indigoCml(int molecule)
+INDIGO_EXPORT const char* indigoCml(int molecule)
 {
     int b = indigoWriteBuffer();
     const char* res;
@@ -174,7 +174,7 @@
     return res;
 }
 
-CEXPORT int indigoSaveRxnfileToFile(int reaction, const char* filename)
+INDIGO_EXPORT int indigoSaveRxnfileToFile(int reaction, const char* filename)
 {
     int f = indigoWriteFile(filename);
     int res;
@@ -188,7 +188,7 @@
     return res;
 }
 
-CEXPORT const char* indigoRxnfile(int molecule)
+INDIGO_EXPORT const char* indigoRxnfile(int molecule)
 {
     int b = indigoWriteBuffer();
     const char* res;
@@ -204,7 +204,7 @@
     return res;
 }
 
-CEXPORT int indigoSaveCdxmlToFile(int item, const char* filename)
+INDIGO_EXPORT int indigoSaveCdxmlToFile(int item, const char* filename)
 {
     int f = indigoWriteFile(filename);
     int res;
@@ -218,7 +218,7 @@
     return res;
 }
 
-CEXPORT int indigoSaveCdxToFile(int item, const char* filename)
+INDIGO_EXPORT int indigoSaveCdxToFile(int item, const char* filename)
 {
     int f = indigoWriteFile(filename);
     int res;
@@ -232,7 +232,7 @@
     return res;
 }
 
-CEXPORT const char* indigoCdxml(int item)
+INDIGO_EXPORT const char* indigoCdxml(int item)
 {
     int b = indigoWriteBuffer();
     const char* res;
Index: indigo-src/indigo/api/c/indigo/src/indigo_deconvolution.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_deconvolution.h b/indigo-src/indigo/api/c/indigo/src/indigo_deconvolution.h
--- a/indigo-src/indigo/api/c/indigo/src/indigo_deconvolution.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_deconvolution.h	(date 1693030077061)
@@ -37,7 +37,7 @@
 class IndigoDeconvolutionElem;
 class IndigoDecompositionMatch;
 
-class DLLEXPORT IndigoDeconvolution : public IndigoObject
+class INDIGO_EXPORT IndigoDeconvolution : public IndigoObject
 {
 private:
     enum
@@ -143,7 +143,7 @@
     ObjArray<IndigoDeconvolutionElem> _deconvolutionElems;
 };
 
-class DLLEXPORT IndigoDeconvolutionElem : public IndigoObject
+class INDIGO_EXPORT IndigoDeconvolutionElem : public IndigoObject
 {
 public:
     IndigoDeconvolutionElem(Molecule& mol);
@@ -169,7 +169,7 @@
     indigo::PropertiesMap _properties;
 };
 
-class DLLEXPORT IndigoDecompositionMatch : public IndigoObject
+class INDIGO_EXPORT IndigoDecompositionMatch : public IndigoObject
 {
 public:
     IndigoDecompositionMatch();
@@ -205,7 +205,7 @@
     bool _completeScaffold;
 };
 
-class DLLEXPORT IndigoDeconvolutionIter : public IndigoObject
+class INDIGO_EXPORT IndigoDeconvolutionIter : public IndigoObject
 {
 public:
     IndigoDeconvolutionIter(ObjArray<IndigoDeconvolutionElem>& items);
@@ -218,7 +218,7 @@
     int _index;
     ObjArray<IndigoDeconvolutionElem>& _items;
 };
-class DLLEXPORT IndigoDecompositionMatchIter : public IndigoObject
+class INDIGO_EXPORT IndigoDecompositionMatchIter : public IndigoObject
 {
 public:
     IndigoDecompositionMatchIter(ObjArray<IndigoDecompositionMatch>& matches);
Index: cairo-src/cairo/src/cairo-compiler-private.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cairo-src/cairo/src/cairo-compiler-private.h b/cairo-src/cairo/src/cairo-compiler-private.h
--- a/cairo-src/cairo/src/cairo-compiler-private.h	(revision c3b672634f0635af1ad0ffa8c15b34fc7c1035cf)
+++ b/cairo-src/cairo/src/cairo-compiler-private.h	(date 1693030076921)
@@ -84,7 +84,7 @@
  * don't need to be hidden and re-exported using the slim hidden
  * macros.
  */
-#if __GNUC__ >= 3 && defined(__ELF__) && !defined(__sun)
+#if 0 && __GNUC__ >= 3 && defined(__ELF__) && !defined(__sun) && !defined(__clang__)
 # define slim_hidden_proto(name)		slim_hidden_proto1(name, slim_hidden_int_name(name)) cairo_private
 # define slim_hidden_proto_no_warn(name)	slim_hidden_proto1(name, slim_hidden_int_name(name)) cairo_private_no_warn
 # define slim_hidden_def(name)			slim_hidden_def1(name, slim_hidden_int_name(name))
Index: indigo-src/indigo/api/c/indigo/src/indigo_reaction.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo/src/indigo_reaction.cpp b/indigo-src/indigo/api/c/indigo/src/indigo_reaction.cpp
--- a/indigo-src/indigo/api/c/indigo/src/indigo_reaction.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo/src/indigo_reaction.cpp	(date 1693030077124)
@@ -352,7 +352,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoLoadReaction(int source)
+int indigoLoadReaction(int source)
 {
     INDIGO_BEGIN
     {
@@ -374,7 +374,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoLoadQueryReaction(int source)
+int indigoLoadQueryReaction(int source)
 {
     INDIGO_BEGIN
     {
@@ -395,27 +395,27 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoIterateReactants(int reaction)
+int indigoIterateReactants(int reaction)
 {
     return _indigoIterateReaction(reaction, IndigoReactionIter::REACTANTS);
 }
 
-CEXPORT int indigoIterateProducts(int reaction)
+int indigoIterateProducts(int reaction)
 {
     return _indigoIterateReaction(reaction, IndigoReactionIter::PRODUCTS);
 }
 
-CEXPORT int indigoIterateCatalysts(int reaction)
+int indigoIterateCatalysts(int reaction)
 {
     return _indigoIterateReaction(reaction, IndigoReactionIter::CATALYSTS);
 }
 
-CEXPORT int indigoIterateMolecules(int reaction)
+int indigoIterateMolecules(int reaction)
 {
     return _indigoIterateReaction(reaction, IndigoReactionIter::MOLECULES);
 }
 
-CEXPORT int indigoCreateReaction(void)
+int indigoCreateReaction(void)
 {
     INDIGO_BEGIN
     {
@@ -424,7 +424,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCreateQueryReaction(void)
+int indigoCreateQueryReaction(void)
 {
     INDIGO_BEGIN
     {
@@ -433,7 +433,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddReactant(int reaction, int molecule)
+int indigoAddReactant(int reaction, int molecule)
 {
     INDIGO_BEGIN
     {
@@ -445,7 +445,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddProduct(int reaction, int molecule)
+int indigoAddProduct(int reaction, int molecule)
 {
     INDIGO_BEGIN
     {
@@ -457,7 +457,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoAddCatalyst(int reaction, int molecule)
+int indigoAddCatalyst(int reaction, int molecule)
 {
     INDIGO_BEGIN
     {
@@ -469,7 +469,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountReactants(int reaction)
+int indigoCountReactants(int reaction)
 {
     INDIGO_BEGIN
     {
@@ -478,7 +478,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountProducts(int reaction)
+int indigoCountProducts(int reaction)
 {
     INDIGO_BEGIN
     {
@@ -487,7 +487,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountCatalysts(int reaction)
+int indigoCountCatalysts(int reaction)
 {
     INDIGO_BEGIN
     {
@@ -496,7 +496,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCountMolecules(int handle)
+int indigoCountMolecules(int handle)
 {
     INDIGO_BEGIN
     {
@@ -510,7 +510,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetMolecule(int reaction, int index)
+int indigoGetMolecule(int reaction, int index)
 {
     INDIGO_BEGIN
     {
@@ -530,7 +530,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoMapMolecule(int handle, int molecule)
+int indigoMapMolecule(int handle, int molecule)
 {
     INDIGO_BEGIN
     {
@@ -596,7 +596,7 @@
     return nmode;
 }
 
-CEXPORT int indigoAutomap(int reaction, const char* mode)
+int indigoAutomap(int reaction, const char* mode)
 {
     INDIGO_BEGIN
     {
@@ -639,7 +639,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetAtomMappingNumber(int reaction, int reaction_atom)
+int indigoGetAtomMappingNumber(int reaction, int reaction_atom)
 {
     INDIGO_BEGIN
     {
@@ -656,7 +656,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetAtomMappingNumber(int reaction, int reaction_atom, int number)
+int indigoSetAtomMappingNumber(int reaction, int reaction_atom, int number)
 {
     INDIGO_BEGIN
     {
@@ -676,7 +676,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoGetReactingCenter(int reaction, int reaction_bond, int* rc)
+int indigoGetReactingCenter(int reaction, int reaction_bond, int* rc)
 {
     INDIGO_BEGIN
     {
@@ -694,7 +694,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoSetReactingCenter(int reaction, int reaction_bond, int rc)
+int indigoSetReactingCenter(int reaction, int reaction_bond, int rc)
 {
     INDIGO_BEGIN
     {
@@ -714,7 +714,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoClearAAM(int reaction)
+int indigoClearAAM(int reaction)
 {
     INDIGO_BEGIN
     {
@@ -725,7 +725,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoCorrectReactingCenters(int reaction)
+int indigoCorrectReactingCenters(int reaction)
 {
     INDIGO_BEGIN
     {
@@ -738,7 +738,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoLoadReactionSmarts(int source)
+int indigoLoadReactionSmarts(int source)
 {
     INDIGO_BEGIN
     {
@@ -756,7 +756,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoCanonicalRSmiles(int reaction)
+const char* indigoCanonicalRSmiles(int reaction)
 {
     INDIGO_BEGIN
     {
Index: ncnn-src/ncnn/src/gpu.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ncnn-src/ncnn/src/gpu.h b/ncnn-src/ncnn/src/gpu.h
--- a/ncnn-src/ncnn/src/gpu.h	(revision 903ec7c2c9417e1ee11cb667d2198cc3607458ed)
+++ b/ncnn-src/ncnn/src/gpu.h	(date 1693030077650)
@@ -214,7 +214,7 @@
     GpuInfo& operator=(const GpuInfo&);
 
 private:
-    friend int create_gpu_instance();
+    friend NCNN_EXPORT int create_gpu_instance();
     GpuInfoPrivate* const d;
 };
 
Index: yaehmop-src/yaehmop/tightbind/diag.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/yaehmop-src/yaehmop/tightbind/diag.c b/yaehmop-src/yaehmop/tightbind/diag.c
--- a/yaehmop-src/yaehmop/tightbind/diag.c	(revision c81f41694bcffccf38e17a63627a862628294613)
+++ b/yaehmop-src/yaehmop/tightbind/diag.c	(date 1693030079888)
@@ -2,7 +2,9 @@
 Produced by gmFortran V30.59(10/26/17) on 9/18/18 at 9:02:32
 */
 #define LPROTOTYPE
-#include "fortran.h"
+#include "bind.h"
+#include <math.h>
+
 void cchol(int *n,int *nd,double *a,int *fail)
 {
 static int i,ia,j,k,ka;
@@ -431,7 +433,7 @@
 */
         p = (d[l]-d[l-1])/(2.0e0*e[l-1]);
         r = sqrt(1.0e0+p*p);
-        h = d[l-1]-e[l-1]/(p+fdsign(r,p));
+        h = d[l-1]-e[l-1]/(p+d_sign(r,p));
 /*
 */
         for(i=l; i<=*n; i++) {
Index: openbabel-src/openbabel/src/bondtyper.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/bondtyper.cpp b/openbabel-src/openbabel/src/bondtyper.cpp
--- a/openbabel-src/openbabel/src/bondtyper.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/bondtyper.cpp	(date 1693030079014)
@@ -24,8 +24,6 @@
 #include <openbabel/bondtyper.h>
 #include <openbabel/elements.h>
 
-// data header with default parameters
-#include "bondtyp.h"
 
 using namespace std;
 
@@ -54,7 +52,7 @@
     _envvar = "BABEL_DATADIR";
     _filename = "bondtyp.txt";
     _subdir = "data";
-    _dataptr = BondTypeData;
+    _dataptr = nullptr;
   }
 
   void OBBondTyper::ParseLine(const char *buffer)
Index: indigo-src/indigo/api/c/bingo-nosql/bingo-nosql.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/bingo-nosql/bingo-nosql.h b/indigo-src/indigo/api/c/bingo-nosql/bingo-nosql.h
--- a/indigo-src/indigo/api/c/bingo-nosql/bingo-nosql.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/bingo-nosql/bingo-nosql.h	(date 1693030077030)
@@ -20,63 +20,64 @@
 #define __indigo_bingo__
 
 #include "indigo.h"
+#include "bingo_nosql_export.h"
 
-CEXPORT const char* bingoVersion();
+BINGO_NOSQL_EXPORT const char* bingoVersion();
 
 // options = "id: <property-name>"
-CEXPORT int bingoCreateDatabaseFile(const char* location, const char* type, const char* options);
-CEXPORT int bingoLoadDatabaseFile(const char* location, const char* options);
-CEXPORT int bingoCloseDatabase(int db);
+BINGO_NOSQL_EXPORT int bingoCreateDatabaseFile(const char* location, const char* type, const char* options);
+BINGO_NOSQL_EXPORT int bingoLoadDatabaseFile(const char* location, const char* options);
+BINGO_NOSQL_EXPORT int bingoCloseDatabase(int db);
 
 //
 // Record insertion/deletion
 //
-CEXPORT int bingoInsertRecordObj(int db, int obj);
-CEXPORT int bingoInsertIteratorObj(int db, int iterator_obj_id);
-CEXPORT int bingoInsertRecordObjWithId(int db, int obj, int id);
-CEXPORT int bingoInsertRecordObjWithExtFP(int db, int obj, int fp);
-CEXPORT int bingoInsertRecordObjWithIdAndExtFP(int db, int obj, int id, int fp);
-CEXPORT int bingoDeleteRecord(int db, int id);
-CEXPORT int bingoGetRecordObj(int db, int id);
+BINGO_NOSQL_EXPORT int bingoInsertRecordObj(int db, int obj);
+BINGO_NOSQL_EXPORT int bingoInsertIteratorObj(int db, int iterator_obj_id);
+BINGO_NOSQL_EXPORT int bingoInsertRecordObjWithId(int db, int obj, int id);
+BINGO_NOSQL_EXPORT int bingoInsertRecordObjWithExtFP(int db, int obj, int fp);
+BINGO_NOSQL_EXPORT int bingoInsertRecordObjWithIdAndExtFP(int db, int obj, int id, int fp);
+BINGO_NOSQL_EXPORT int bingoDeleteRecord(int db, int id);
+BINGO_NOSQL_EXPORT int bingoGetRecordObj(int db, int id);
 
-CEXPORT int bingoOptimize(int db);
+BINGO_NOSQL_EXPORT int bingoOptimize(int db);
 
 // Search methods that returns search object
 // Search object is an iterator
-CEXPORT int bingoSearchSub(int db, int query_obj, const char* options);
-CEXPORT int bingoSearchExact(int db, int query_obj, const char* options);
-CEXPORT int bingoSearchMolFormula(int db, const char* query, const char* options);
-CEXPORT int bingoSearchSim(int db, int query_obj, float min, float max, const char* options);
-CEXPORT int bingoSearchSimWithExtFP(int db, int query_obj, float min, float max, int fp, const char* options);
+BINGO_NOSQL_EXPORT int bingoSearchSub(int db, int query_obj, const char* options);
+BINGO_NOSQL_EXPORT int bingoSearchExact(int db, int query_obj, const char* options);
+BINGO_NOSQL_EXPORT int bingoSearchMolFormula(int db, const char* query, const char* options);
+BINGO_NOSQL_EXPORT int bingoSearchSim(int db, int query_obj, float min, float max, const char* options);
+BINGO_NOSQL_EXPORT int bingoSearchSimWithExtFP(int db, int query_obj, float min, float max, int fp, const char* options);
 
-CEXPORT int bingoSearchSimTopN(int db, int query_obj, int limit, float min, const char* options);
-CEXPORT int bingoSearchSimTopNWithExtFP(int db, int query_obj, int limit, float min, int fp, const char* options);
+BINGO_NOSQL_EXPORT int bingoSearchSimTopN(int db, int query_obj, int limit, float min, const char* options);
+BINGO_NOSQL_EXPORT int bingoSearchSimTopNWithExtFP(int db, int query_obj, int limit, float min, int fp, const char* options);
 
-CEXPORT int bingoEnumerateId(int db);
+BINGO_NOSQL_EXPORT int bingoEnumerateId(int db);
 
 //
 // Search object methods
 //
-CEXPORT int bingoNext(int search_obj);
-CEXPORT int bingoGetCurrentId(int search_obj);
-CEXPORT float bingoGetCurrentSimilarityValue(int search_obj);
+BINGO_NOSQL_EXPORT int bingoNext(int search_obj);
+BINGO_NOSQL_EXPORT int bingoGetCurrentId(int search_obj);
+BINGO_NOSQL_EXPORT float bingoGetCurrentSimilarityValue(int search_obj);
 
 // Estimation methods
-CEXPORT int bingoEstimateRemainingResultsCount(int search_obj);
-CEXPORT int bingoEstimateRemainingResultsCountError(int search_obj);
-CEXPORT int bingoEstimateRemainingTime(int search_obj, float* time_sec);
-CEXPORT int bingoContainersCount(int search_obj);
-CEXPORT int bingoCellsCount(int search_obj);
-CEXPORT int bingoCurrentCell(int search_obj);
-CEXPORT int bingoMinCell(int search_obj);
-CEXPORT int bingoMaxCell(int search_obj);
+BINGO_NOSQL_EXPORT int bingoEstimateRemainingResultsCount(int search_obj);
+BINGO_NOSQL_EXPORT int bingoEstimateRemainingResultsCountError(int search_obj);
+BINGO_NOSQL_EXPORT int bingoEstimateRemainingTime(int search_obj, float* time_sec);
+BINGO_NOSQL_EXPORT int bingoContainersCount(int search_obj);
+BINGO_NOSQL_EXPORT int bingoCellsCount(int search_obj);
+BINGO_NOSQL_EXPORT int bingoCurrentCell(int search_obj);
+BINGO_NOSQL_EXPORT int bingoMinCell(int search_obj);
+BINGO_NOSQL_EXPORT int bingoMaxCell(int search_obj);
 
 // This method return IndigoObject that represents current object.
 // After calling bingoNext this object automatically points to the next found result
-CEXPORT int bingoGetObject(int search_obj);
+BINGO_NOSQL_EXPORT int bingoGetObject(int search_obj);
 
-CEXPORT int bingoEndSearch(int search_obj);
+BINGO_NOSQL_EXPORT int bingoEndSearch(int search_obj);
 
-CEXPORT const char* bingoProfilingGetStatistics(int for_session);
+BINGO_NOSQL_EXPORT const char* bingoProfilingGetStatistics(int for_session);
 
 #endif // __indigo_bingo__
Index: openbabel-src/openbabel/src/distgeom.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/distgeom.cpp b/openbabel-src/openbabel/src/distgeom.cpp
--- a/openbabel-src/openbabel/src/distgeom.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/distgeom.cpp	(date 1693030079045)
@@ -16,7 +16,7 @@
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 ***********************************************************************/
-
+#include <openbabel/babelconfig.h>
 #ifdef HAVE_EIGEN
 
 #include <openbabel/distgeom.h>
Index: indigo-src/indigo/api/c/bingo-nosql/src/bingo-nosql.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/bingo-nosql/src/bingo-nosql.cpp b/indigo-src/indigo/api/c/bingo-nosql/src/bingo-nosql.cpp
--- a/indigo-src/indigo/api/c/bingo-nosql/src/bingo-nosql.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/bingo-nosql/src/bingo-nosql.cpp	(date 1693030077030)
@@ -349,12 +349,12 @@
     auto matcher_ptr = sf::xlock_safe_ptr(searches_data->searches.at(id));                                                                                     \
     auto& matcher = **matcher_ptr;
 
-CEXPORT const char* bingoVersion()
+const char* bingoVersion()
 {
     return BINGO_VERSION;
 }
 
-CEXPORT int bingoCreateDatabaseFile(const char* location, const char* type, const char* options)
+int bingoCreateDatabaseFile(const char* location, const char* type, const char* options)
 {
     INDIGO_BEGIN
     {
@@ -363,7 +363,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int bingoLoadDatabaseFile(const char* location, const char* options)
+int bingoLoadDatabaseFile(const char* location, const char* options)
 {
     INDIGO_BEGIN
     {
@@ -372,7 +372,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int bingoCloseDatabase(int db)
+int bingoCloseDatabase(int db)
 {
 #ifdef INDIGO_DEBUG
     std::stringstream ss;
@@ -389,7 +389,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoInsertRecordObj(int db, int obj)
+int bingoInsertRecordObj(int db, int obj)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -414,7 +414,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoInsertIteratorObj(int db, int iterator_obj_id)
+int bingoInsertIteratorObj(int db, int iterator_obj_id)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -437,7 +437,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoInsertRecordObjWithId(int db, int obj, int id)
+int bingoInsertRecordObjWithId(int db, int obj, int id)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -447,7 +447,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoInsertRecordObjWithExtFP(int db, int obj, int fp)
+int bingoInsertRecordObjWithExtFP(int db, int obj, int fp)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -473,7 +473,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoInsertRecordObjWithIdAndExtFP(int db, int obj, int id, int fp)
+int bingoInsertRecordObjWithIdAndExtFP(int db, int obj, int id, int fp)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -484,7 +484,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoDeleteRecord(int db, int id)
+int bingoDeleteRecord(int db, int id)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -496,7 +496,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoGetRecordObj(int db, int id)
+int bingoGetRecordObj(int db, int id)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -538,7 +538,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoOptimize(int db)
+int bingoOptimize(int db)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -550,7 +550,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoSearchSub(int db, int query_obj, const char* options)
+int bingoSearchSub(int db, int query_obj, const char* options)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -601,7 +601,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoSearchExact(int db, int query_obj, const char* options)
+int bingoSearchExact(int db, int query_obj, const char* options)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -650,7 +650,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoSearchMolFormula(int db, const char* query, const char* options)
+int bingoSearchMolFormula(int db, const char* query, const char* options)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -674,7 +674,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoSearchSim(int db, int query_obj, float min, float max, const char* options)
+int bingoSearchSim(int db, int query_obj, float min, float max, const char* options)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -725,7 +725,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoSearchSimWithExtFP(int db, int query_obj, float min, float max, int fp, const char* options)
+int bingoSearchSimWithExtFP(int db, int query_obj, float min, float max, int fp, const char* options)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -777,7 +777,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoSearchSimTopN(int db, int query_obj, int limit, float min, const char* options)
+int bingoSearchSimTopN(int db, int query_obj, int limit, float min, const char* options)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -828,7 +828,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoSearchSimTopNWithExtFP(int db, int query_obj, int limit, float min, int fp, const char* options)
+int bingoSearchSimTopNWithExtFP(int db, int query_obj, int limit, float min, int fp, const char* options)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -880,7 +880,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoEnumerateId(int db)
+int bingoEnumerateId(int db)
 {
     BINGO_BEGIN_DB(db)
     {
@@ -900,7 +900,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoEndSearch(int search_obj)
+int bingoEndSearch(int search_obj)
 {
 #ifdef INDIGO_DEBUG
     std::stringstream ss;
@@ -916,7 +916,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoNext(int search_obj)
+int bingoNext(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -926,7 +926,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoGetCurrentId(int search_obj)
+int bingoGetCurrentId(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -936,7 +936,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT float bingoGetCurrentSimilarityValue(int search_obj)
+float bingoGetCurrentSimilarityValue(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -946,7 +946,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoEstimateRemainingResultsCount(int search_obj)
+int bingoEstimateRemainingResultsCount(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -957,7 +957,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoContainersCount(int search_obj)
+int bingoContainersCount(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -967,7 +967,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoCellsCount(int search_obj)
+int bingoCellsCount(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -977,7 +977,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoCurrentCell(int search_obj)
+int bingoCurrentCell(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -987,7 +987,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoMinCell(int search_obj)
+int bingoMinCell(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -997,7 +997,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoMaxCell(int search_obj)
+int bingoMaxCell(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -1007,7 +1007,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoEstimateRemainingResultsCountError(int search_obj)
+int bingoEstimateRemainingResultsCountError(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -1019,7 +1019,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoEstimateRemainingTime(int search_obj, float* time_sec)
+int bingoEstimateRemainingTime(int search_obj, float* time_sec)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -1031,7 +1031,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT int bingoGetObject(int search_obj)
+int bingoGetObject(int search_obj)
 {
     BINGO_BEGIN_SEARCH(search_obj)
     {
@@ -1042,7 +1042,7 @@
     BINGO_END(-1);
 }
 
-CEXPORT const char* bingoProfilingGetStatistics(int for_session)
+const char* bingoProfilingGetStatistics(int for_session)
 {
     INDIGO_BEGIN
     {
Index: openbabel-src/openbabel/src/alias.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/alias.cpp b/openbabel-src/openbabel/src/alias.cpp
--- a/openbabel-src/openbabel/src/alias.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/alias.cpp	(date 1693030078998)
@@ -222,7 +222,7 @@
 bool AliasData::LoadFile(SuperAtomTable& table)
 {
   //In table: key=alias left-form; value=pair<alias right-form, SMILES>
-  ifstream ifs;
+  istringstream ifs;
   if (OpenDatafile(ifs, "superatom.txt").length() == 0)
   {
     obErrorLog.ThrowError(__FUNCTION__, "Cannot open superatom.txt", obError);
@@ -250,7 +250,7 @@
 bool AliasData::LoadFile(SmartsTable& smtable)
 {
   //Re-parse the datafile. Seems simpler than trying to extract from the map.
-  ifstream ifs;
+  istringstream ifs;
   if (OpenDatafile(ifs, "superatom.txt").length() == 0)
   {
     obErrorLog.ThrowError(__FUNCTION__, "Cannot open superatom.txt", obError);
Index: openbabel-src/openbabel/src/locale.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/locale.cpp b/openbabel-src/openbabel/src/locale.cpp
--- a/openbabel-src/openbabel/src/locale.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/locale.cpp	(date 1693030079092)
@@ -16,33 +16,19 @@
 GNU General Public License for more details.
 ***********************************************************************/
 
-#include <stdlib.h>
-#include <string.h>
 #include <openbabel/locale.h>
-
-#if HAVE_XLOCALE_H
-#include <xlocale.h>
-#endif
-#if HAVE_LOCALE_H
-#include <locale.h>
-#endif
+#include <string>
+#include <clocale>
 
 namespace OpenBabel
 {
   class OBLocalePrivate {
   public:
-    char *old_locale_string;
-#if HAVE_USELOCALE
-    locale_t new_c_num_locale;
-    locale_t old_locale;
-#endif
+    std::string old_locale_string;
     unsigned int counter; // Reference counter -- ensures balance in SetLocale/RestoreLocale calls
 
     OBLocalePrivate(): counter(0)
     {
-#if HAVE_USELOCALE
-      new_c_num_locale = newlocale(LC_NUMERIC_MASK, NULL, NULL);
-#endif
     }
 
     ~OBLocalePrivate()
@@ -92,21 +78,8 @@
   void OBLocale::SetLocale()
   {
     if (d->counter == 0) {
-      // Set the locale for number parsing to avoid locale issues: PR#1785463
-#if HAVE_USELOCALE
-      // Extended per-thread interface
-      d->old_locale = uselocale(d->new_c_num_locale);
-#else
-#ifndef ANDROID
-      // Original global POSIX interface
-      // regular UNIX, no USELOCALE, no ANDROID
-      d->old_locale_string = strdup(setlocale(LC_NUMERIC, nullptr));
-#else
-      // ANDROID should stay as "C" -- Igor Filippov
-      d->old_locale_string = "C";
-#endif
+      d->old_locale_string = std::setlocale(LC_ALL, nullptr);
   	  setlocale(LC_NUMERIC, "C");
-#endif
     }
 
     ++d->counter;
@@ -117,15 +90,7 @@
     --d->counter;
     if(d->counter == 0) {
       // return the locale to the original one
-#ifdef HAVE_USELOCALE
-      uselocale(d->old_locale);
-#else
-      setlocale(LC_NUMERIC, d->old_locale_string);
-#ifndef ANDROID
-      // Don't free on Android because "C" is a static ctring constant
-      free (d->old_locale_string);
-#endif
-#endif
+      std::setlocale(LC_NUMERIC, d->old_locale_string.c_str());
     }
   }
 
Index: openbabel-src/openbabel/src/op.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/op.cpp b/openbabel-src/openbabel/src/op.cpp
--- a/openbabel-src/openbabel/src/op.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/op.cpp	(date 1693030079221)
@@ -22,10 +22,6 @@
 using namespace std;
 namespace OpenBabel
 {
-#if defined(__CYGWIN__) || defined(__MINGW32__)
-  // macro to implement static OBPlugin::PluginMapType& Map()
-  PLUGIN_CPP_FILE(OBOp)
-#endif
 }
 
 
Index: indigo-src/indigo/core/indigo-core/molecule/src/haworth_projection_finder.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/core/indigo-core/molecule/src/haworth_projection_finder.cpp b/indigo-src/indigo/core/indigo-core/molecule/src/haworth_projection_finder.cpp
--- a/indigo-src/indigo/core/indigo-core/molecule/src/haworth_projection_finder.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/core/indigo-core/molecule/src/haworth_projection_finder.cpp	(date 1693030077171)
@@ -12,6 +12,11 @@
 
 CP_DEF(HaworthProjectionFinder);
 
+template<typename T>
+inline auto indigo_get_sign(T a){
+    return (a > 0 ? 1 : (a < 0 ? -1 : 0));
+}
+
 const float COS10_THRESHOLD = 0.015f;
 
 HaworthProjectionFinder::HaworthProjectionFinder(BaseMolecule& mol)
@@ -147,8 +152,8 @@
 
         float s = _getAngleSin(vi, e1i, e2i);
         if (sign == 0)
-            sign = __sign(s);
-        else if (sign != __sign(s))
+            sign = indigo_get_sign(s);
+        else if (sign != indigo_get_sign(s))
             return false; // Rotation direction is different => non-convex
 
         bool is_corner = _isCornerVertex(vi, e1i, e2i);
@@ -219,8 +224,8 @@
             {
                 // Count only non-horizontal bonds
                 if (sub_sign == 0)
-                    sub_sign = __sign(c2);
-                else if (sub_sign == __sign(c2))
+                    sub_sign = indigo_get_sign(c2);
+                else if (sub_sign == indigo_get_sign(c2))
                     return false; // Substituents are in the same direction
             }
         }
@@ -329,7 +334,7 @@
     float yn = _mol.getAtomXyz(vertices[left_next]).y;
     float yp = _mol.getAtomXyz(vertices[left_prev]).y;
 
-    int parity = __sign(yn - yp);
+    int parity = indigo_get_sign(yn - yp);
 
     for (int j = 0; j < vertices.size(); j++)
     {
@@ -411,7 +416,7 @@
     Vec2f d1(pv1.x - pv.x, pv1.y - pv.y);
     Vec2f d2(pv2.x - pv.x, pv2.y - pv.y);
 
-    return __sign(d1.x * d2.x) == 1;
+    return indigo_get_sign(d1.x * d2.x) == 1;
 }
 
 bool HaworthProjectionFinder::_isHorizontalEdge(int e, float cos_threshold)
Index: openbabel-src/openbabel/src/descriptor.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/descriptor.cpp b/openbabel-src/openbabel/src/descriptor.cpp
--- a/openbabel-src/openbabel/src/descriptor.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/descriptor.cpp	(date 1693030079045)
@@ -25,11 +25,6 @@
 using namespace std;
 namespace OpenBabel
 {
-#if defined(__CYGWIN__) || defined(__MINGW32__)
-  // macro to implement static OBPlugin::PluginMapType& Map()
-  PLUGIN_CPP_FILE(OBDescriptor)
-#endif
-
 /**
      Compare() is a virtual function and can be overridden to allow different
      comparison behaviour.
Index: openbabel-src/openbabel/src/builder.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/builder.cpp b/openbabel-src/openbabel/src/builder.cpp
--- a/openbabel-src/openbabel/src/builder.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/builder.cpp	(date 1693030079014)
@@ -97,7 +97,7 @@
 
   void OBBuilder::LoadFragments()  {
     // open data/fragments.txt
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "rigid-fragments-index.txt").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open ring-fragments-index.txt", obError);
       return;
@@ -171,7 +171,7 @@
       return coords;
     }
 
-    ifstream ifs;
+    istringstream ifs;
     if (OpenDatafile(ifs, "rigid-fragments.txt").length() == 0) {
       obErrorLog.ThrowError(__FUNCTION__, "Cannot open rigid-fragments.txt", obError);
       return coords;
Index: openbabel-src/openbabel/src/rotor.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/rotor.cpp b/openbabel-src/openbabel/src/rotor.cpp
--- a/openbabel-src/openbabel/src/rotor.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/rotor.cpp	(date 1693030079237)
@@ -31,8 +31,6 @@
 #include <set>
 #include <assert.h>
 
-// private data headers with default parameters
-#include "torlib.h"
 
 #ifndef M_PI
 #define M_PI 3.14159265358979323846
@@ -806,7 +804,7 @@
     _envvar = "BABEL_DATADIR";
     _filename = "torlib.txt";
     _subdir = "data";
-    _dataptr = TorsionDefaults;
+    _dataptr = nullptr;
   }
 
   void OBRotorRules::ParseLine(const char *buffer)
Index: openbabel-src/openbabel/src/typer.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/typer.cpp b/openbabel-src/openbabel/src/typer.cpp
--- a/openbabel-src/openbabel/src/typer.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/typer.cpp	(date 1693030079252)
@@ -27,8 +27,6 @@
 #include <openbabel/typer.h>
 #include <openbabel/elements.h>
 
-// private data headers with default parameters
-#include "atomtyp.h"
 
 #ifdef WIN32
 #pragma warning (disable : 4786)
@@ -64,7 +62,7 @@
     _envvar = "BABEL_DATADIR";
     _filename = "atomtyp.txt";
     _subdir = "data";
-    _dataptr = AtomTypeData;
+    _dataptr = nullptr;
   }
 
   void OBAtomTyper::ParseLine(const char *buffer)
Index: ncnn-src/ncnn/src/datareader.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ncnn-src/ncnn/src/datareader.cpp b/ncnn-src/ncnn/src/datareader.cpp
--- a/ncnn-src/ncnn/src/datareader.cpp	(revision 903ec7c2c9417e1ee11cb667d2198cc3607458ed)
+++ b/ncnn-src/ncnn/src/datareader.cpp	(date 1693030077634)
@@ -38,11 +38,6 @@
     return 0;
 }
 
-size_t DataReader::reference(size_t /*size*/, const void** /*buf*/) const
-{
-    return 0;
-}
-
 #if NCNN_STDIO
 class DataReaderFromStdioPrivate
 {
@@ -141,13 +136,6 @@
     d->mem += size;
     return size;
 }
-
-size_t DataReaderFromMemory::reference(size_t size, const void** buf) const
-{
-    *buf = d->mem;
-    d->mem += size;
-    return size;
-}
 
 #if NCNN_PLATFORM_API
 #if __ANDROID_API__ >= 9
Index: openbabel-src/openbabel/src/obmolecformat.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/obmolecformat.cpp b/openbabel-src/openbabel/src/obmolecformat.cpp
--- a/openbabel-src/openbabel/src/obmolecformat.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/obmolecformat.cpp	(date 1693030079205)
@@ -500,12 +500,12 @@
 
     NameIndexType::iterator itr;
 
-    ifstream indexstream;
+    istringstream indexstream;
     OpenDatafile(indexstream, datafilename + ".obindx");
     if(!indexstream)
       {
         //Need to prepare the index
-        ifstream datastream;
+        istringstream datastream;
         string datafilepath = OpenDatafile(datastream, datafilename);
         if(!datastream)
           {
Index: rdkit-src/rdkit/Code/GraphMol/FMCS/MaximumCommonSubgraph.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/FMCS/MaximumCommonSubgraph.cpp b/rdkit-src/rdkit/Code/GraphMol/FMCS/MaximumCommonSubgraph.cpp
--- a/rdkit-src/rdkit/Code/GraphMol/FMCS/MaximumCommonSubgraph.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/FMCS/MaximumCommonSubgraph.cpp	(date 1693030079549)
@@ -348,7 +348,7 @@
          ms != matching_substructs.end(); ms++) {
       Seed seed;
       seed.ExcludedBonds = excludedBonds;
-      seed.MatchResult.resize(Targets.size());
+      seed.resizeMatchResult(Targets.size());
 #ifdef VERBOSE_STATISTICS_ON
       {
         ++VerboseStatistics.Seed;
@@ -417,7 +417,7 @@
       // if(excludedBonds[(*bi)->getIdx()])
       //    continue;
       Seed seed;
-      seed.MatchResult.resize(Targets.size());
+      seed.resizeMatchResult(Targets.size());
 
 #ifdef VERBOSE_STATISTICS_ON
       {
@@ -1266,7 +1266,7 @@
     { ++VerboseStatistics.MatchCall; }
 #endif
     bool target_matched = false;
-    if (!seed.MatchResult.empty() && !seed.MatchResult[itarget].empty()) {
+    if (!seed.MatchResult.empty() && !seed.MatchResult[itarget]->empty()) {
       target_matched = matchIncrementalFast(seed, itarget);
     }
     if (!target_matched) {  // slow full match
@@ -1277,11 +1277,11 @@
       // save current match info
       if (target_matched) {
         if (seed.MatchResult.empty()) {
-          seed.MatchResult.resize(Targets.size());
+          seed.resizeMatchResult(Targets.size());
         }
-        seed.MatchResult[itarget].init(seed, match, *QueryMolecule, *tag);
+        seed.MatchResult[itarget]->init(seed, match, *QueryMolecule, *tag);
       } else if (!seed.MatchResult.empty()) {
-        seed.MatchResult[itarget].clear();  //.Empty = true; // == fast clear();
+        seed.MatchResult[itarget]->clear();  //.Empty = true; // == fast clear();
       }
 #ifdef VERBOSE_STATISTICS_ON
       if (target_matched) {
@@ -1316,7 +1316,7 @@
   { ++VerboseStatistics.FastMatchCall; }
 #endif
   const Target& target = Targets[itarget];
-  TargetMatch& match = seed.MatchResult[itarget];
+  TargetMatch& match = *(seed.MatchResult[itarget]);
   if (match.empty()) {
     return false;
   }
Index: openbabel-src/openbabel/src/data.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/data.cpp b/openbabel-src/openbabel/src/data.cpp
--- a/openbabel-src/openbabel/src/data.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/data.cpp	(date 1693030079045)
@@ -31,9 +31,6 @@
 #include <openbabel/oberror.h>
 #include <openbabel/elements.h>
 
-// data headers with default parameters
-#include "types.h"
-#include "resdata.h"
 
 
 #if !HAVE_STRNCASECMP
@@ -250,7 +247,7 @@
     _envvar = "BABEL_DATADIR";
     _filename = "types.txt";
     _subdir = "data";
-    _dataptr = TypesData;
+    _dataptr = nullptr;
     _linecount = 0;
     _from = _to = -1;
   }
@@ -434,7 +431,7 @@
     _envvar = "BABEL_DATADIR";
     _filename = "resdata.txt";
     _subdir = "data";
-    _dataptr = ResidueData;
+    _dataptr = nullptr;
   }
 
   bool OBResidueData::AssignBonds(OBMol &mol)
@@ -669,7 +666,7 @@
       return;
     _init = true;
 
-    ifstream ifs;
+    istringstream ifs;
     char charBuffer[BUFF_SIZE];
 
     // Set the locale for number parsing to avoid locale issues: PR#1785463
@@ -716,8 +713,6 @@
     // return the locale to the original one
     obLocale.RestoreLocale();
 
-    if (ifs)
-      ifs.close();
 
     if (GetSize() == 0)
       {
Index: rdkit-src/rdkit/Code/GraphMol/FMCS/Seed.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/FMCS/Seed.h b/rdkit-src/rdkit/Code/GraphMol/FMCS/Seed.h
--- a/rdkit-src/rdkit/Code/GraphMol/FMCS/Seed.h	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/FMCS/Seed.h	(date 1693030079549)
@@ -77,12 +77,14 @@
 #ifdef DUP_SUBSTRUCT_CACHE
   DuplicatedSeedCache::TKey DupCacheKey;
 #endif
-  std::vector<TargetMatch> MatchResult;  // for each target
+  std::vector<std::shared_ptr<TargetMatch>> MatchResult;  // for each target
  public:
   Seed()
 
   {}
 
+  void resizeMatchResult(const std::size_t& size);
+
   void setMoleculeFragment(const Seed& src) {
     MoleculeFragment = src.MoleculeFragment;
   }
Index: rdkit-src/rdkit/Code/GraphMol/FMCS/Seed.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rdkit-src/rdkit/Code/GraphMol/FMCS/Seed.cpp b/rdkit-src/rdkit/Code/GraphMol/FMCS/Seed.cpp
--- a/rdkit-src/rdkit/Code/GraphMol/FMCS/Seed.cpp	(revision aaf837069b40b4429bba739df27531398822aeeb)
+++ b/rdkit-src/rdkit/Code/GraphMol/FMCS/Seed.cpp	(date 1693030079549)
@@ -19,6 +19,14 @@
 namespace RDKit {
 namespace FMCS {
 
+void Seed::resizeMatchResult(const std::size_t& size) {
+  MatchResult.clear();
+  MatchResult.resize(size);
+  for(auto&p : MatchResult) {
+    p = std::make_shared<TargetMatch>();
+  }
+}
+
 unsigned Seed::addAtom(const Atom* atom) {
   unsigned i = MoleculeFragment.AtomsIdx.size();
   unsigned aqi = atom->getIdx();
Index: openbabel-src/openbabel/src/phmodel.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/phmodel.cpp b/openbabel-src/openbabel/src/phmodel.cpp
--- a/openbabel-src/openbabel/src/phmodel.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/phmodel.cpp	(date 1693030079221)
@@ -28,8 +28,6 @@
 
 #include <cstdlib>
 
-// private data header with default parameters
-#include "phmodeldata.h"
 
 #ifdef WIN32
 #pragma warning (disable : 4786)
@@ -50,7 +48,7 @@
     _envvar = "BABEL_DATADIR";
     _filename = "phmodel.txt";
     _subdir = "data";
-    _dataptr = PhModelData;
+    _dataptr = nullptr;
   }
 
   OBPhModel::~OBPhModel()
Index: openbabel-src/openbabel/src/confsearch.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/confsearch.cpp b/openbabel-src/openbabel/src/confsearch.cpp
--- a/openbabel-src/openbabel/src/confsearch.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/confsearch.cpp	(date 1693030079030)
@@ -131,7 +131,7 @@
 
     const double arr[] = {3.0, 2.0, 1.5, 1.0, 0.5, 0.25};
     std::vector<double> vec (arr, arr + sizeof(arr) / sizeof(arr[0]) );
-    vec.erase(std::remove_if(vec.begin(), vec.end(), std::bind2nd(std::less<double>(), (cutoff + 0.1) )), vec.end());
+    vec.erase(std::remove_if(vec.begin(), vec.end(), std::bind(std::less<double>(), std::placeholders::_1, (cutoff + 0.1) )), vec.end());
     vec.push_back(cutoff);
 
     levels = vec;
@@ -293,7 +293,7 @@
   std::vector <OBDiversePoses::PosePair> confs, newconfs;
 
   // The leaf iterator will (in effect) iterate over the nodes just at the loweset level
-  for (OBDiversePoses::Tree::leaf_iterator node = poses->begin(); node != poses->end(); ++node)
+  for (auto node = poses->begin(); node != poses->end(); ++node)
     if (node->first.size() > 0) // Don't include the dummy head node
       confs.push_back(*node);
 
@@ -441,7 +441,7 @@
     UpdateConformersFromTree(&_mol, _energies, &divposes, verbose);
 
     // Add back the energy offset
-    transform(_energies.begin(), _energies.end(), _energies.begin(), bind2nd(std::plus<double>(), energy_offset));
+    transform(_energies.begin(), _energies.end(), _energies.begin(), std::bind(std::plus<double>(), std::placeholders::_1, energy_offset));
 
     // Clean up
     delete [] store_initial;
Index: openbabel-src/openbabel/src/plugin.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/plugin.cpp b/openbabel-src/openbabel/src/plugin.cpp
--- a/openbabel-src/openbabel/src/plugin.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/plugin.cpp	(date 1693030079237)
@@ -285,6 +285,8 @@
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theHINFormat)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theJaguarOutputFormat)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theJaguarInputFormat)->GetID());
+  plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theChemDoodleJSONFormat)->GetID());
+  plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&thePubChemJSONFormat)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theLMPDATFormat)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theMCDLFormat)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theMOLFormat)->GetID());
@@ -315,6 +317,7 @@
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&thePDBQTFormat)->GetID());
 #ifdef HAVE_LIBZ
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&thePNGFormat)->GetID());
+  plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&thePNG2Format)->GetID());
 #endif
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&thePointCloudFormat)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&thePovrayFormat)->GetID());
@@ -354,6 +357,8 @@
 #endif
 #ifdef HAVE_STATIC_INCHI
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theInChIFormat)->GetID());
+  plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theInChICompareFormat)->GetID());
+  plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theInChIKeyFormat)->GetID());
 #endif
 #ifdef HAVE_RPC_XDR_H
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theXTCFormat)->GetID());
@@ -413,6 +418,7 @@
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theOpFillUC)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theOpEnergy)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theOpMinimize)->GetID());
+  plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theOp2D)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theOpGen2D)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theOpGen3D)->GetID());
   plugin_ids.push_back(reinterpret_cast<OBPlugin*>(&theOpNewS)->GetID());
Index: openbabel-src/openbabel/src/patty.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/patty.cpp b/openbabel-src/openbabel/src/patty.cpp
--- a/openbabel-src/openbabel/src/patty.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/patty.cpp	(date 1693030079221)
@@ -25,6 +25,7 @@
 
 #include <cstring>
 #include <cstdlib>
+#include <fstream>
 
 // Simple programmable atom typer
 // WPW - 070199
Index: openbabel-src/openbabel/src/tokenst.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/tokenst.cpp b/openbabel-src/openbabel/src/tokenst.cpp
--- a/openbabel-src/openbabel/src/tokenst.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/tokenst.cpp	(date 1693030079252)
@@ -24,7 +24,7 @@
 #include <limits>
 #include <cstring>
 #include <openbabel/tokenst.h>
-
+#include "text_assets.hpp"
 using namespace std;
 
 namespace OpenBabel
@@ -180,7 +180,7 @@
      or "BABEL_DATADIR" if @p envvar is not specified, or the compiled-in
      macro BABEL_DATADIR if the environment variable is not set
 
-     \param ifs        Stream to load
+     \param iss        Stream to load
      \param filename   Name of the data file to load
      \param envvar     Name of the environment variable
 
@@ -188,51 +188,16 @@
      unless it is in current directory
 
   **/
-  std::string OpenDatafile(std::ifstream& ifs, const std::string& filename,
+  std::string OpenDatafile(std::istringstream& iss, const std::string& filename,
                            const std::string& envvar)
   {
-    ios_base::openmode imode = ios_base::in;
-    #ifdef ALL_READS_BINARY //Makes unix files compatible with VC++6
-      imode = ios_base::in|ios_base::binary;
-    #endif
-
-    // check the current directory
-    ifs.close();
-    ifs.clear();
-    ifs.open(filename.c_str(),imode);
-    if(ifs)
-      return filename;
-
-    string file;
-    const char* datadir = getenv(envvar.c_str());
-    if(!datadir)
-      datadir = BABEL_DATADIR;
-
-    // check the subdirectory for this version number
-    file = datadir;
-    file += FILE_SEP_CHAR;
-    file += BABEL_VERSION;
-    file += FILE_SEP_CHAR + filename;
-
-    ifs.clear();
-    ifs.open(file.c_str(),imode);
-    if(ifs)
-      return file;
-
-    // couldn't find it with the version built in, so try the parent
-    file = datadir;
-    file += FILE_SEP_CHAR;
-    file += filename;
-
-    ifs.clear();
-    ifs.open(file.c_str(),imode);
-
-    if (ifs)
-      return file;
-
-    ifs.clear();
-    ifs.close();
-    return(""); // error
+    auto it = openbabel::OPENBABEL_ASSET_MAP.find(filename);
+    if(it==openbabel::OPENBABEL_ASSET_MAP.end()) {
+        return "";
+    }
+    iss.clear();
+    iss.str(it->second);
+    return filename;
   }
 
 
Index: indigo-src/indigo/api/c/indigo-inchi/src/indigo_inchi_api.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo-inchi/src/indigo_inchi_api.cpp b/indigo-src/indigo/api/c/indigo-inchi/src/indigo_inchi_api.cpp
--- a/indigo-src/indigo/api/c/indigo-inchi/src/indigo_inchi_api.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo-inchi/src/indigo_inchi_api.cpp	(date 1693030077140)
@@ -29,7 +29,7 @@
 
 using namespace indigo;
 
-CEXPORT const char* indigoInchiVersion()
+const char* indigoInchiVersion()
 {
     return InchiWrapper::version();
 }
@@ -74,7 +74,7 @@
 // C interface functions
 //
 
-CEXPORT int indigoInchiInit(qword id)
+int indigoInchiInit(qword id)
 {
 #ifdef INDIGO_DEBUG
     std::stringstream ss;
@@ -89,7 +89,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoInchiDispose(qword id)
+int indigoInchiDispose(qword id)
 {
 #ifdef INDIGO_DEBUG
     std::stringstream ss;
@@ -104,14 +104,14 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoInchiResetOptions(void)
+int indigoInchiResetOptions(void)
 {
     IndigoInchiContext& inchi_context = indigoInchiGetInstance();
     inchi_context.init();
     return 0;
 }
 
-CEXPORT int indigoInchiLoadMolecule(const char* inchi_string)
+int indigoInchiLoadMolecule(const char* inchi_string)
 {
     INDIGO_BEGIN
     {
@@ -152,7 +152,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT const char* indigoInchiGetInchi(int molecule)
+const char* indigoInchiGetInchi(int molecule)
 {
     INDIGO_BEGIN
     {
@@ -166,7 +166,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoInchiGetInchiKey(const char* inchi_string)
+const char* indigoInchiGetInchiKey(const char* inchi_string)
 {
     INDIGO_BEGIN
     {
@@ -177,7 +177,7 @@
     INDIGO_END(0);
 }
 
-CEXPORT const char* indigoInchiGetWarning()
+const char* indigoInchiGetWarning()
 {
     InchiWrapper& inchi_wrapper = indigoInchiGetInstance().inchi;
     if (inchi_wrapper.warning.size() != 0)
@@ -185,7 +185,7 @@
     return "";
 }
 
-CEXPORT const char* indigoInchiGetLog()
+const char* indigoInchiGetLog()
 {
     InchiWrapper& inchi_wrapper = indigoInchiGetInstance().inchi;
     if (inchi_wrapper.log.size() != 0)
@@ -193,7 +193,7 @@
     return "";
 }
 
-CEXPORT const char* indigoInchiGetAuxInfo()
+const char* indigoInchiGetAuxInfo()
 {
     InchiWrapper& inchi_wrapper = indigoInchiGetInstance().inchi;
     if (inchi_wrapper.auxInfo.size() != 0)
Index: indigo-src/indigo/api/c/indigo-inchi/indigo-inchi.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo-inchi/indigo-inchi.h b/indigo-src/indigo/api/c/indigo-inchi/indigo-inchi.h
--- a/indigo-src/indigo/api/c/indigo-inchi/indigo-inchi.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo-inchi/indigo-inchi.h	(date 1693030077155)
@@ -20,24 +20,25 @@
 #define __indigo_inchi__
 
 #include "indigo.h"
+#include "indigo_inchi_export.h"
 
-CEXPORT const char* indigoInchiVersion();
+INDIGO_INCHI_EXPORT const char *indigoInchiVersion();
 
-CEXPORT int indigoInchiInit(qword id);
-CEXPORT int indigoInchiDispose(qword id);
+INDIGO_INCHI_EXPORT int indigoInchiInit(qword id);
+INDIGO_INCHI_EXPORT int indigoInchiDispose(qword id);
 
-CEXPORT int indigoInchiResetOptions();
+INDIGO_INCHI_EXPORT int indigoInchiResetOptions();
 
-CEXPORT int indigoInchiLoadMolecule(const char* inchi_string);
+INDIGO_INCHI_EXPORT int indigoInchiLoadMolecule(const char *inchi_string);
 
-CEXPORT const char* indigoInchiGetInchi(int molecule);
+INDIGO_INCHI_EXPORT const char *indigoInchiGetInchi(int molecule);
 
-CEXPORT const char* indigoInchiGetInchiKey(const char* inchi_string);
+INDIGO_INCHI_EXPORT const char *indigoInchiGetInchiKey(const char *inchi_string);
 
-CEXPORT const char* indigoInchiGetWarning();
+INDIGO_INCHI_EXPORT const char *indigoInchiGetWarning();
 
-CEXPORT const char* indigoInchiGetLog();
+INDIGO_INCHI_EXPORT const char *indigoInchiGetLog();
 
-CEXPORT const char* indigoInchiGetAuxInfo();
+INDIGO_INCHI_EXPORT const char *indigoInchiGetAuxInfo();
 
 #endif // __indigo_inchi__
Index: indigo-src/indigo/api/c/indigo-renderer/src/indigo_render2d.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo-renderer/src/indigo_render2d.cpp b/indigo-src/indigo/api/c/indigo-renderer/src/indigo_render2d.cpp
--- a/indigo-src/indigo/api/c/indigo-renderer/src/indigo_render2d.cpp	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo-renderer/src/indigo_render2d.cpp	(date 1693030077155)
@@ -442,7 +442,7 @@
         value.readString("right", true);
 }
 
-CEXPORT int indigoRendererInit(qword id)
+int indigoRendererInit(qword id)
 {
 #ifdef INDIGO_DEBUG
     std::stringstream ss;
@@ -458,7 +458,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoRendererDispose(const qword id)
+int indigoRendererDispose(const qword id)
 {
 #ifdef INDIGO_DEBUG
     std::stringstream ss;
@@ -473,7 +473,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoRender(int object, int output)
+int indigoRender(int object, int output)
 {
     INDIGO_BEGIN
     {
@@ -529,7 +529,7 @@
     INDIGO_END(-1);
 }
 
-CEXPORT int indigoRenderGrid(int objects, int* refAtoms, int nColumns, int output)
+int indigoRenderGrid(int objects, int* refAtoms, int nColumns, int output)
 {
     INDIGO_BEGIN
     {
@@ -653,7 +653,7 @@
     return indigoRenderMapOutputFormat(ext + 1);
 }
 
-CEXPORT int indigoRenderToFile(int object, const char* filename)
+int indigoRenderToFile(int object, const char* filename)
 {
     int f = indigoWriteFile(filename);
 
@@ -670,7 +670,7 @@
     return res;
 }
 
-CEXPORT int indigoRenderGridToFile(int objects, int* refAtoms, int nColumns, const char* filename)
+int indigoRenderGridToFile(int objects, int* refAtoms, int nColumns, const char* filename)
 {
     int f = indigoWriteFile(filename);
 
@@ -687,7 +687,7 @@
     return res;
 }
 
-CEXPORT int indigoRenderReset()
+int indigoRenderReset()
 {
     INDIGO_BEGIN
     {
@@ -698,13 +698,13 @@
     INDIGO_END(-1);
 }
 
-CEXPORT void indigoRenderResetOptions()
+void indigoRenderResetOptions()
 {
     indigoRendererGetInstance().init();
     getCdxmlContext().clear();
 }
 
-CEXPORT int indigoRenderWriteHDC(void* hdc, int printingHdc)
+int indigoRenderWriteHDC(void* hdc, int printingHdc)
 {
     INDIGO_BEGIN
     {
Index: freetype-src/freetype/include/freetype/config/ftoption.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/freetype-src/freetype/include/freetype/config/ftoption.h b/freetype-src/freetype/include/freetype/config/ftoption.h
--- a/freetype-src/freetype/include/freetype/config/ftoption.h	(revision de8b92dd7ec634e9e2b25ef534c54a3537555c11)
+++ b/freetype-src/freetype/include/freetype/config/ftoption.h	(date 1693030076952)
@@ -273,7 +273,7 @@
    *   options set by those programs have precedence, overwriting the value
    *   here with the configured one.
    */
-/* #define FT_CONFIG_OPTION_USE_PNG */
+#define FT_CONFIG_OPTION_USE_PNG
 
 
   /**************************************************************************
Index: openbabel-src/openbabel/src/chargemodel.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/chargemodel.cpp b/openbabel-src/openbabel/src/chargemodel.cpp
--- a/openbabel-src/openbabel/src/chargemodel.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/chargemodel.cpp	(date 1693030079030)
@@ -26,11 +26,6 @@
 using namespace std;
 namespace OpenBabel
 {
-#if defined(__CYGWIN__) || defined(__MINGW32__)
-  // macro to implement static OBPlugin::PluginMapType& Map()
-  PLUGIN_CPP_FILE(OBChargeModel)
-#endif
-
   void OBChargeModel::FillChargeVectors(OBMol &mol)
   {
     OBAtom *atom;
Index: openbabel-src/openbabel/src/forcefield.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/forcefield.cpp b/openbabel-src/openbabel/src/forcefield.cpp
--- a/openbabel-src/openbabel/src/forcefield.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/forcefield.cpp	(date 1693030079077)
@@ -40,11 +40,6 @@
 
 namespace OpenBabel
 {
-#if defined(__CYGWIN__) || defined(__MINGW32__)
-  // macro to implement static OBPlugin::PluginMapType& Map()
-  PLUGIN_CPP_FILE(OBForceField)
-#endif
-
   /** \class OBForceField forcefield.h <openbabel/forcefield.h>
       \brief Base class for molecular mechanics force fields
 
Index: libxml2-src/libxml2/include/libxml/xmlexports.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/libxml2-src/libxml2/include/libxml/xmlexports.h b/libxml2-src/libxml2/include/libxml/xmlexports.h
--- a/libxml2-src/libxml2/include/libxml/xmlexports.h	(revision 2e9f7860a9cb8be29eca90b7409ef0278d30ef10)
+++ b/libxml2-src/libxml2/include/libxml/xmlexports.h	(date 1693030077540)
@@ -8,18 +8,11 @@
 #ifndef __XML_EXPORTS_H__
 #define __XML_EXPORTS_H__
 
-/** DOC_DISABLE */
-#if defined(_WIN32) || defined(__CYGWIN__)
-  #ifdef LIBXML_STATIC
-    #define XMLPUBLIC
-  #elif defined(IN_LIBXML)
-    #define XMLPUBLIC __declspec(dllexport)
-  #else
-    #define XMLPUBLIC __declspec(dllimport)
-  #endif
-#else /* not Windows */
-  #define XMLPUBLIC
-#endif /* platform switch */
+#include "xml2_export.h"
+#ifndef XMLPUBLIC
+#define XMLPUBLIC XML2_EXPORT
+#endif
+
 /** DOC_ENABLE */
 
 /*
Index: indigo-src/indigo/api/c/indigo-renderer/indigo-renderer.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/indigo-src/indigo/api/c/indigo-renderer/indigo-renderer.h b/indigo-src/indigo/api/c/indigo-renderer/indigo-renderer.h
--- a/indigo-src/indigo/api/c/indigo-renderer/indigo-renderer.h	(revision 2d40433a1825f4c17a70628b7dbf38828a4e0716)
+++ b/indigo-src/indigo/api/c/indigo-renderer/indigo-renderer.h	(date 1693030077155)
@@ -20,34 +20,35 @@
 #define __indigo_render__
 
 #include "indigo.h"
+#include "indigo_renderer_export.h"
 
-CEXPORT int indigoRendererInit(qword id);
-CEXPORT int indigoRendererDispose(qword id);
+INDIGO_RENDERER_EXPORT int indigoRendererInit(qword id);
+INDIGO_RENDERER_EXPORT int indigoRendererDispose(qword id);
 
 /* Rendering */
 
 // Returns an 'output' object for the given HDC
-CEXPORT int indigoRenderWriteHDC(void* hdc, int printingHdc);
+INDIGO_RENDERER_EXPORT int indigoRenderWriteHDC(void* hdc, int printingHdc);
 
 // output is either a file output obtained via indigoWriteFile(), or
 //        a buffer obtained via indigoWriteBuffer(), or
 //        an HDC obtained via indigoRenderWriteHDC
-CEXPORT int indigoRender(int object, int output);
+INDIGO_RENDERER_EXPORT int indigoRender(int object, int output);
 
 // objects  is an array of molecules created with indigoCreateArray)
 // refAtoms is an array of integers, whose size must be equal to the number
 //          of molecules if the array
 // nColumns is the number of columns in the grid
 // output -- see the comment for indigoRender
-CEXPORT int indigoRenderGrid(int objects, int* refAtoms, int nColumns, int output);
+INDIGO_RENDERER_EXPORT int indigoRenderGrid(int objects, int* refAtoms, int nColumns, int output);
 
 // Works like indigoRender(), but renders directly to file
-CEXPORT int indigoRenderToFile(int object, const char* filename);
+INDIGO_RENDERER_EXPORT int indigoRenderToFile(int object, const char* filename);
 
 // Works like indigoRenderGrid(), but renders directly to file
-CEXPORT int indigoRenderGridToFile(int objects, int* refAtoms, int nColumns, const char* filename);
+INDIGO_RENDERER_EXPORT int indigoRenderGridToFile(int objects, int* refAtoms, int nColumns, const char* filename);
 
 // Resets all the rendering settings
-CEXPORT int indigoRenderReset();
+INDIGO_RENDERER_EXPORT int indigoRenderReset();
 
 #endif
Index: openbabel-src/openbabel/src/fingerprint.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/fingerprint.cpp b/openbabel-src/openbabel/src/fingerprint.cpp
--- a/openbabel-src/openbabel/src/fingerprint.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/fingerprint.cpp	(date 1693030079061)
@@ -30,11 +30,6 @@
 using namespace std;
 namespace OpenBabel
 {
-#if defined(__CYGWIN__) || defined(__MINGW32__)
-  // macro to implement static OBPlugin::PluginMapType& Map()
-  PLUGIN_CPP_FILE(OBFingerprint)
-#endif
-
   const unsigned int OBFingerprint::bitsperint = 8 * sizeof(unsigned int);
 
   void OBFingerprint::SetBit(vector<unsigned int>& vec, const unsigned int n)
Index: ncnn-src/ncnn/cmake/ncnn_generate_shader_comp_header.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ncnn-src/ncnn/cmake/ncnn_generate_shader_comp_header.cmake b/ncnn-src/ncnn/cmake/ncnn_generate_shader_comp_header.cmake
--- a/ncnn-src/ncnn/cmake/ncnn_generate_shader_comp_header.cmake	(revision 903ec7c2c9417e1ee11cb667d2198cc3607458ed)
+++ b/ncnn-src/ncnn/cmake/ncnn_generate_shader_comp_header.cmake	(date 1693030077618)
@@ -15,8 +15,8 @@
 get_filename_component(SHADER_SRC_NAME_WE ${SHADER_SRC} NAME_WE)
 
 # text to hex
-file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/${SHADER_SRC_NAME_WE}.text2hex.txt "${comp_data}")
-file(READ ${CMAKE_CURRENT_BINARY_DIR}/${SHADER_SRC_NAME_WE}.text2hex.txt comp_data_hex HEX)
+file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/generated/ncnn/tmp/${SHADER_SRC_NAME_WE}.text2hex.txt "${comp_data}")
+file(READ ${CMAKE_CURRENT_BINARY_DIR}/generated/ncnn/tmp/${SHADER_SRC_NAME_WE}.text2hex.txt comp_data_hex HEX)
 string(REGEX REPLACE "([0-9a-f][0-9a-f])" "0x\\1," comp_data_hex ${comp_data_hex})
 string(FIND "${comp_data_hex}" "," tail_comma REVERSE)
 string(SUBSTRING "${comp_data_hex}" 0 ${tail_comma} comp_data_hex)
Index: ncnn-src/ncnn/cmake/ncnn_add_shader.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ncnn-src/ncnn/cmake/ncnn_add_shader.cmake b/ncnn-src/ncnn/cmake/ncnn_add_shader.cmake
--- a/ncnn-src/ncnn/cmake/ncnn_add_shader.cmake	(revision 903ec7c2c9417e1ee11cb667d2198cc3607458ed)
+++ b/ncnn-src/ncnn/cmake/ncnn_add_shader.cmake	(date 1693030077571)
@@ -1,14 +1,14 @@
-
+set(_CURRENT_DIR ${CMAKE_CURRENT_LIST_DIR})
 macro(ncnn_add_shader NCNN_SHADER_SRC)
     get_filename_component(NCNN_SHADER_SRC_NAME_WE ${NCNN_SHADER_SRC} NAME_WE)
-    set(NCNN_SHADER_COMP_HEADER ${CMAKE_CURRENT_BINARY_DIR}/${NCNN_SHADER_SRC_NAME_WE}.comp.hex.h)
+    set(NCNN_SHADER_COMP_HEADER ${CMAKE_CURRENT_BINARY_DIR}/generated/ncnn/include/ncnn/layer/vulkan/shader/${NCNN_SHADER_SRC_NAME_WE}.comp.hex.h)
 
     add_custom_command(
-        OUTPUT ${NCNN_SHADER_COMP_HEADER}
-        COMMAND ${CMAKE_COMMAND} -DSHADER_SRC=${NCNN_SHADER_SRC} -DSHADER_COMP_HEADER=${NCNN_SHADER_COMP_HEADER} -P "${CMAKE_CURRENT_SOURCE_DIR}/../cmake/ncnn_generate_shader_comp_header.cmake"
-        DEPENDS ${NCNN_SHADER_SRC}
-        COMMENT "Preprocessing shader source ${NCNN_SHADER_SRC_NAME_WE}.comp"
-        VERBATIM
+            OUTPUT ${NCNN_SHADER_COMP_HEADER}
+            COMMAND ${CMAKE_COMMAND} -DSHADER_SRC=${NCNN_SHADER_SRC} -DSHADER_COMP_HEADER=${NCNN_SHADER_COMP_HEADER} -P "${_CURRENT_DIR}/ncnn_generate_shader_comp_header.cmake"
+            DEPENDS ${NCNN_SHADER_SRC}
+            COMMENT "Preprocessing shader source ${NCNN_SHADER_SRC_NAME_WE}.comp"
+            VERBATIM
     )
     set_source_files_properties(${NCNN_SHADER_COMP_HEADER} PROPERTIES GENERATED TRUE)
 
Index: coordgen-src/coordgen/CoordgenConfig.hpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/coordgen-src/coordgen/CoordgenConfig.hpp b/coordgen-src/coordgen/CoordgenConfig.hpp
--- a/coordgen-src/coordgen/CoordgenConfig.hpp	(revision c4dd5b0e1f1971c06c7ab85725c185e47211814e)
+++ b/coordgen-src/coordgen/CoordgenConfig.hpp	(date 1693030076936)
@@ -1,22 +1,7 @@
 #pragma once
 
-#ifndef STATIC_COORDGEN
-
-#ifdef WIN32
-#ifdef IN_COORDGEN
-#define EXPORT_COORDGEN __declspec(dllexport)
-#else
-#define EXPORT_COORDGEN __declspec(dllimport)
-#endif // IN_COORDGEN
-
-#else
-
-#define EXPORT_COORDGEN __attribute__((visibility("default")))
-
-#endif // WIN32
+#include <coordgenlibs_export.hpp>
 
-#else
-
-#define EXPORT_COORDGEN
-
-#endif // STATIC_COORDGEN
+#ifndef EXPORT_COORDGEN
+#define EXPORT_COORDGEN COORDGENLIBS_EXPORT
+#endif
Index: openbabel-src/openbabel/src/ops/unique.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/ops/unique.cpp b/openbabel-src/openbabel/src/ops/unique.cpp
--- a/openbabel-src/openbabel/src/ops/unique.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/ops/unique.cpp	(date 1693030078983)
@@ -39,7 +39,7 @@
   #ifdef _LIBCPP_VERSION
     using std::unordered_map;
   #else
-    using std::tr1::unordered_map;
+    using std::unordered_map;
   #endif
 #endif
 namespace OpenBabel
Index: ncnn-src/ncnn/cmake/ncnn_add_layer.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ncnn-src/ncnn/cmake/ncnn_add_layer.cmake b/ncnn-src/ncnn/cmake/ncnn_add_layer.cmake
--- a/ncnn-src/ncnn/cmake/ncnn_add_layer.cmake	(revision 903ec7c2c9417e1ee11cb667d2198cc3607458ed)
+++ b/ncnn-src/ncnn/cmake/ncnn_add_layer.cmake	(date 1693030077571)
@@ -1,28 +1,28 @@
-
+set(_CURRENT_DIR ${CMAKE_CURRENT_LIST_DIR})
 macro(ncnn_add_arch_opt_layer class NCNN_TARGET_ARCH_OPT NCNN_TARGET_ARCH_OPT_CFLAGS)
-    set(NCNN_${NCNN_TARGET_ARCH}_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}.h)
-    set(NCNN_${NCNN_TARGET_ARCH}_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}.cpp)
+    set(NCNN_${NCNN_TARGET_ARCH}_HEADER ${_CURRENT_DIR}/../src/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}.h)
+    set(NCNN_${NCNN_TARGET_ARCH}_SOURCE ${_CURRENT_DIR}/../src/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}.cpp)
 
-    if(WITH_LAYER_${name} AND EXISTS ${NCNN_${NCNN_TARGET_ARCH}_HEADER} AND EXISTS ${NCNN_${NCNN_TARGET_ARCH}_SOURCE})
+    if (WITH_LAYER_${name} AND EXISTS ${NCNN_${NCNN_TARGET_ARCH}_HEADER} AND EXISTS ${NCNN_${NCNN_TARGET_ARCH}_SOURCE})
 
-        set(NCNN_${NCNN_TARGET_ARCH_OPT}_HEADER ${CMAKE_CURRENT_BINARY_DIR}/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}_${NCNN_TARGET_ARCH_OPT}.h)
-        set(NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE ${CMAKE_CURRENT_BINARY_DIR}/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}_${NCNN_TARGET_ARCH_OPT}.cpp)
+        set(NCNN_${NCNN_TARGET_ARCH_OPT}_HEADER ${CMAKE_CURRENT_BINARY_DIR}/generated/ncnn/include/ncnn/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}_${NCNN_TARGET_ARCH_OPT}.h)
+        set(NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE ${CMAKE_CURRENT_BINARY_DIR}/generated/ncnn/src/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}_${NCNN_TARGET_ARCH_OPT}.cpp)
 
         add_custom_command(
-            OUTPUT ${NCNN_${NCNN_TARGET_ARCH_OPT}_HEADER}
-            COMMAND ${CMAKE_COMMAND} -DSRC=${NCNN_${NCNN_TARGET_ARCH}_HEADER} -DDST=${NCNN_${NCNN_TARGET_ARCH_OPT}_HEADER} -DCLASS=${class} -P "${CMAKE_CURRENT_SOURCE_DIR}/../cmake/ncnn_generate_${NCNN_TARGET_ARCH_OPT}_source.cmake"
-            DEPENDS ${NCNN_${NCNN_TARGET_ARCH}_HEADER}
-            COMMENT "Generating source ${name}_${NCNN_TARGET_ARCH}_${NCNN_TARGET_ARCH_OPT}.h"
-            VERBATIM
+                OUTPUT ${NCNN_${NCNN_TARGET_ARCH_OPT}_HEADER}
+                COMMAND ${CMAKE_COMMAND} -DSRC=${NCNN_${NCNN_TARGET_ARCH}_HEADER} -DDST=${NCNN_${NCNN_TARGET_ARCH_OPT}_HEADER} -DCLASS=${class} -P "${_CURRENT_DIR}/ncnn_generate_${NCNN_TARGET_ARCH_OPT}_source.cmake"
+                DEPENDS ${NCNN_${NCNN_TARGET_ARCH}_HEADER}
+                COMMENT "Generating source ${name}_${NCNN_TARGET_ARCH}_${NCNN_TARGET_ARCH_OPT}.h"
+                VERBATIM
         )
         set_source_files_properties(${NCNN_${NCNN_TARGET_ARCH_OPT}_HEADER} PROPERTIES GENERATED TRUE)
 
         add_custom_command(
-            OUTPUT ${NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE}
-            COMMAND ${CMAKE_COMMAND} -DSRC=${NCNN_${NCNN_TARGET_ARCH}_SOURCE} -DDST=${NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE} -DCLASS=${class} -P "${CMAKE_CURRENT_SOURCE_DIR}/../cmake/ncnn_generate_${NCNN_TARGET_ARCH_OPT}_source.cmake"
-            DEPENDS ${NCNN_${NCNN_TARGET_ARCH}_SOURCE}
-            COMMENT "Generating source ${name}_${NCNN_TARGET_ARCH}_${NCNN_TARGET_ARCH_OPT}.cpp"
-            VERBATIM
+                OUTPUT ${NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE}
+                COMMAND ${CMAKE_COMMAND} -DSRC=${NCNN_${NCNN_TARGET_ARCH}_SOURCE} -DDST=${NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE} -DCLASS=${class} -P "${_CURRENT_DIR}/ncnn_generate_${NCNN_TARGET_ARCH_OPT}_source.cmake"
+                DEPENDS ${NCNN_${NCNN_TARGET_ARCH}_SOURCE}
+                COMMENT "Generating source ${name}_${NCNN_TARGET_ARCH}_${NCNN_TARGET_ARCH_OPT}.cpp"
+                VERBATIM
         )
         set_source_files_properties(${NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE} PROPERTIES GENERATED TRUE)
 
@@ -67,7 +67,7 @@
 endmacro()
 
 macro(ncnn_add_arch_opt_source class NCNN_TARGET_ARCH_OPT NCNN_TARGET_ARCH_OPT_CFLAGS)
-    set(NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}_${NCNN_TARGET_ARCH_OPT}.cpp)
+    set(NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE ${_CURRENT_DIR}/../src/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}_${NCNN_TARGET_ARCH_OPT}.cpp)
 
     if(WITH_LAYER_${name} AND EXISTS ${NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE})
         set_source_files_properties(${NCNN_${NCNN_TARGET_ARCH_OPT}_SOURCE} PROPERTIES COMPILE_FLAGS ${NCNN_TARGET_ARCH_OPT_CFLAGS})
@@ -80,9 +80,9 @@
 
     # WITH_LAYER_xxx option
     if(${ARGC} EQUAL 2)
-        option(WITH_LAYER_${name} "build with layer ${name}" ${ARGV1})
+        set(WITH_LAYER_${name} ${ARGV1})
     else()
-        option(WITH_LAYER_${name} "build with layer ${name}" ON)
+        set(WITH_LAYER_${name} ON)
     endif()
 
     if(NCNN_CMAKE_VERBOSE)
@@ -90,17 +90,17 @@
     endif()
 
     if(WITH_LAYER_${name})
-        list(APPEND ncnn_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/layer/${name}.cpp)
+        list(APPEND ncnn_SRCS ${_CURRENT_DIR}/../src/layer/${name}.cpp)
 
         # look for arch specific implementation and append source
         # optimized implementation for armv7, aarch64 or x86
-        set(LAYER_ARCH_SRC ${CMAKE_CURRENT_SOURCE_DIR}/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}.cpp)
+        set(LAYER_ARCH_SRC ${_CURRENT_DIR}/../src/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}.cpp)
         if(EXISTS ${LAYER_ARCH_SRC})
             set(WITH_LAYER_${name}_${NCNN_TARGET_ARCH} 1)
             list(APPEND ncnn_SRCS ${LAYER_ARCH_SRC})
         endif()
 
-        set(LAYER_VULKAN_SRC ${CMAKE_CURRENT_SOURCE_DIR}/layer/vulkan/${name}_vulkan.cpp)
+        set(LAYER_VULKAN_SRC ${_CURRENT_DIR}/../src/layer/vulkan/${name}_vulkan.cpp)
         if(NCNN_VULKAN AND EXISTS ${LAYER_VULKAN_SRC})
             set(WITH_LAYER_${name}_vulkan 1)
             list(APPEND ncnn_SRCS ${LAYER_VULKAN_SRC})
@@ -114,7 +114,7 @@
         set(create_pipeline_content "        { int ret = ${class}::create_pipeline(opt); if (ret) return ret; }\n")
         set(destroy_pipeline_content "        { int ret = ${class}::destroy_pipeline(opt); if (ret) return ret; }\n")
 
-        source_group ("sources\\\\layers" FILES "${CMAKE_CURRENT_SOURCE_DIR}/layer/${name}.cpp")
+        source_group("sources\\\\layers" FILES "${_CURRENT_DIR}/../src/layer/${name}.cpp")
     endif()
 
     if(WITH_LAYER_${name}_vulkan)
@@ -123,14 +123,14 @@
         set(create_pipeline_content "${create_pipeline_content}        if (vkdev) { int ret = ${class}_vulkan::create_pipeline(opt); if (ret) return ret; }\n")
         set(destroy_pipeline_content "        if (vkdev) { int ret = ${class}_vulkan::destroy_pipeline(opt); if (ret) return ret; }\n${destroy_pipeline_content}")
 
-        file(GLOB_RECURSE NCNN_SHADER_SRCS "layer/vulkan/shader/${name}.comp")
-        file(GLOB_RECURSE NCNN_SHADER_SUBSRCS "layer/vulkan/shader/${name}_*.comp")
+        file(GLOB_RECURSE NCNN_SHADER_SRCS "${_CURRENT_DIR}/../src/layer/vulkan/shader/${name}.comp")
+        file(GLOB_RECURSE NCNN_SHADER_SUBSRCS "${_CURRENT_DIR}/../src/layer/vulkan/shader/${name}_*.comp")
         list(APPEND NCNN_SHADER_SRCS ${NCNN_SHADER_SUBSRCS})
-        foreach(NCNN_SHADER_SRC ${NCNN_SHADER_SRCS})
+        foreach (NCNN_SHADER_SRC ${NCNN_SHADER_SRCS})
             ncnn_add_shader(${NCNN_SHADER_SRC})
-        endforeach()
+        endforeach ()
 
-        source_group ("sources\\\\layers\\\\vulkan" FILES "${CMAKE_CURRENT_SOURCE_DIR}/layer/vulkan/${name}_vulkan.cpp")
+        source_group("sources\\\\layers\\\\vulkan" FILES "${_CURRENT_DIR}/../src/layer/vulkan/${name}_vulkan.cpp")
     endif()
 
     if(WITH_LAYER_${name}_${NCNN_TARGET_ARCH})
@@ -139,7 +139,7 @@
         set(create_pipeline_content "${create_pipeline_content}        { int ret = ${class}_${NCNN_TARGET_ARCH}::create_pipeline(opt); if (ret) return ret; }\n")
         set(destroy_pipeline_content "        { int ret = ${class}_${NCNN_TARGET_ARCH}::destroy_pipeline(opt); if (ret) return ret; }\n${destroy_pipeline_content}")
 
-        source_group ("sources\\\\layers\\\\${NCNN_TARGET_ARCH}" FILES "${CMAKE_CURRENT_SOURCE_DIR}/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}.cpp")
+        source_group("sources\\\\layers\\\\${NCNN_TARGET_ARCH}" FILES "${_CURRENT_DIR}/../src/layer/${NCNN_TARGET_ARCH}/${name}_${NCNN_TARGET_ARCH}.cpp")
     endif()
 
     if(WITH_LAYER_${name})
Index: openbabel-src/openbabel/src/ops/optransform.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/ops/optransform.cpp b/openbabel-src/openbabel/src/ops/optransform.cpp
--- a/openbabel-src/openbabel/src/ops/optransform.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/ops/optransform.cpp	(date 1693030078983)
@@ -40,9 +40,7 @@
 {
   _dataLoaded=true;
   _transforms.clear();
-  ifstream ifs;
-  if(ifs.is_open())
-    ifs.close();
+  istringstream ifs;
   char charBuffer[BUFF_SIZE];
 
   // Set the locale for number parsing to avoid locale issues: PR#1785463
Index: openbabel-src/openbabel/src/ops/op2d.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/ops/op2d.cpp b/openbabel-src/openbabel/src/ops/op2d.cpp
--- a/openbabel-src/openbabel/src/ops/op2d.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/ops/op2d.cpp	(date 1693030078967)
@@ -25,12 +25,13 @@
 #include <openbabel/babelconfig.h>
 #include <iostream>
 #include<openbabel/op.h>
+#include<openbabel/atom.h>
 #include<openbabel/mol.h>
+#include<openbabel/oberror.h>
 #include <RDKitConv.h>
 #include <GraphMol/Depictor/RDDepictor.h>
 #include <Geometry/point.h>
-#include <GraphMol/conformer.h>
-#include <GraphMol/molops.h>
+#include <GraphMol/MolOps.h>
 
 #ifndef OBERROR
  #define OBERROR
@@ -49,13 +50,13 @@
   }
   virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }
 
-  virtual bool Do(OBBase* pOb, OpMap*, const char* OptionText);
+  virtual bool Do(OBBase* pOb, const char*, OpMap*, OBConversion*);
 };
 
 Op2D theOp2D("2D"); //Global instance
 
 /////////////////////////////////////////////////////////////////
-bool Op2D::Do(OBBase* pOb, OpMap*, const char* OptionText)
+bool Op2D::Do(OBBase* pOb, const char*, OpMap*, OBConversion*)
 {
   OBMol* pmol = dynamic_cast<OBMol*>(pOb);
   if(!pmol)
Index: openbabel-src/openbabel/src/ops/gen3d.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/ops/gen3d.cpp b/openbabel-src/openbabel/src/ops/gen3d.cpp
--- a/openbabel-src/openbabel/src/ops/gen3d.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/ops/gen3d.cpp	(date 1693030078936)
@@ -70,8 +70,10 @@
   bool useDistGeom = false;
 
   // first try converting OptionText to an integer
-  char *endptr;
-  speed = strtol(OptionText, &endptr, 10);
+  char *endptr = nullptr;
+  if (OptionText) {
+    speed = strtol(OptionText, &endptr, 10);
+  }
   if (endptr == OptionText) { // not a number
     speed = 3; // we'll default to balanced
     // but let's also check if it's words like "fast" or "best"
@@ -131,12 +133,12 @@
       return true; // done
 
     // All other speed levels do some FF cleanup
-    // Try MMFF94 first and UFF if that doesn't work
-    OBForceField* pFF = OBForceField::FindForceField("MMFF94");
+    // Try UFF first and MMFF94 if that doesn't work
+    OBForceField* pFF = OBForceField::FindForceField("UFF");
     if (!pFF)
       return true;
     if (!pFF->Setup(molCopy)) {
-      pFF = OBForceField::FindForceField("UFF");
+      pFF = OBForceField::FindForceField("MMFF94");
       if (!pFF || !pFF->Setup(molCopy)) return true; // can't use either MMFF94 or UFF
     }
 
Index: openbabel-src/openbabel/src/ops/loader.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openbabel-src/openbabel/src/ops/loader.cpp b/openbabel-src/openbabel/src/ops/loader.cpp
--- a/openbabel-src/openbabel/src/ops/loader.cpp	(revision cbd4db43f8908b874864280fdc03bf92569eebc1)
+++ b/openbabel-src/openbabel/src/ops/loader.cpp	(date 1693030078936)
@@ -35,11 +35,6 @@
   const char* TypeID(){return "loaders";};
 };
 
-#if defined(__CYGWIN__) || defined(__MINGW32__)
-// macro to implement static OBPlugin::PluginMapType& Map()
-PLUGIN_CPP_FILE(OBLoader)
-#endif
-
 //*********************************************************
 ///Class which makes instances of plugin classes from information in text file.
 ///This allows the commandline and GUI interfaces to be extended without recompiling.
@@ -55,7 +50,7 @@
   OBDefine(const char* ID, const char* filename)
     : OBLoader(ID, false), _filename(filename)
   {
-    ifstream ifs;
+    istringstream ifs;
     bool filefound = !OpenDatafile(ifs, filename).empty();
     if(!ifs)
     {
diff --git a/nodeeditor-src/nodeeditor/src/ConnectionStyle.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/ConnectionStyle.cpp
rename from nodeeditor-src/nodeeditor/src/ConnectionStyle.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/ConnectionStyle.cpp
diff --git a/nodeeditor-src/nodeeditor/src/BasicGraphicsScene.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/BasicGraphicsScene.cpp
rename from nodeeditor-src/nodeeditor/src/BasicGraphicsScene.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/BasicGraphicsScene.cpp
diff --git a/nodeeditor-src/nodeeditor/src/GraphicsView.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/GraphicsView.cpp
rename from nodeeditor-src/nodeeditor/src/GraphicsView.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/GraphicsView.cpp
diff --git a/nodeeditor-src/nodeeditor/src/ConnectionPainter.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/ConnectionPainter.cpp
rename from nodeeditor-src/nodeeditor/src/ConnectionPainter.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/ConnectionPainter.cpp
diff --git a/nodeeditor-src/nodeeditor/src/ConnectionGraphicsObject.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/ConnectionGraphicsObject.cpp
rename from nodeeditor-src/nodeeditor/src/ConnectionGraphicsObject.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/ConnectionGraphicsObject.cpp
diff --git a/nodeeditor-src/nodeeditor/src/DefaultHorizontalNodeGeometry.hpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/DefaultHorizontalNodeGeometry.hpp
rename from nodeeditor-src/nodeeditor/src/DefaultHorizontalNodeGeometry.hpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/DefaultHorizontalNodeGeometry.hpp
diff --git a/nodeeditor-src/nodeeditor/src/GraphicsViewStyle.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/GraphicsViewStyle.cpp
rename from nodeeditor-src/nodeeditor/src/GraphicsViewStyle.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/GraphicsViewStyle.cpp
diff --git a/nodeeditor-src/nodeeditor/src/AbstractNodeGeometry.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/AbstractNodeGeometry.cpp
rename from nodeeditor-src/nodeeditor/src/AbstractNodeGeometry.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/AbstractNodeGeometry.cpp
diff --git a/nodeeditor-src/nodeeditor/src/StyleCollection.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/StyleCollection.cpp
rename from nodeeditor-src/nodeeditor/src/StyleCollection.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/StyleCollection.cpp
diff --git a/nodeeditor-src/nodeeditor/src/NodeGraphicsObject.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeGraphicsObject.cpp
rename from nodeeditor-src/nodeeditor/src/NodeGraphicsObject.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeGraphicsObject.cpp
diff --git a/nodeeditor-src/nodeeditor/src/locateNode.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/locateNode.cpp
rename from nodeeditor-src/nodeeditor/src/locateNode.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/locateNode.cpp
diff --git a/nodeeditor-src/nodeeditor/src/DataFlowGraphModel.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/DataFlowGraphModel.cpp
rename from nodeeditor-src/nodeeditor/src/DataFlowGraphModel.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/DataFlowGraphModel.cpp
diff --git a/nodeeditor-src/nodeeditor/src/DataFlowGraphicsScene.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/DataFlowGraphicsScene.cpp
rename from nodeeditor-src/nodeeditor/src/DataFlowGraphicsScene.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/DataFlowGraphicsScene.cpp
diff --git a/nodeeditor-src/nodeeditor/src/DefaultVerticalNodeGeometry.hpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/DefaultVerticalNodeGeometry.hpp
rename from nodeeditor-src/nodeeditor/src/DefaultVerticalNodeGeometry.hpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/DefaultVerticalNodeGeometry.hpp
diff --git a/nodeeditor-src/nodeeditor/src/DefaultVerticalNodeGeometry.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/DefaultVerticalNodeGeometry.cpp
rename from nodeeditor-src/nodeeditor/src/DefaultVerticalNodeGeometry.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/DefaultVerticalNodeGeometry.cpp
diff --git a/nodeeditor-src/nodeeditor/src/DefaultNodePainter.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/DefaultNodePainter.cpp
rename from nodeeditor-src/nodeeditor/src/DefaultNodePainter.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/DefaultNodePainter.cpp
diff --git a/nodeeditor-src/nodeeditor/src/ConnectionState.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/ConnectionState.cpp
rename from nodeeditor-src/nodeeditor/src/ConnectionState.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/ConnectionState.cpp
diff --git a/nodeeditor-src/nodeeditor/src/UndoCommands.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/UndoCommands.cpp
rename from nodeeditor-src/nodeeditor/src/UndoCommands.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/UndoCommands.cpp
diff --git a/nodeeditor-src/nodeeditor/src/NodeStyle.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeStyle.cpp
rename from nodeeditor-src/nodeeditor/src/NodeStyle.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeStyle.cpp
diff --git a/nodeeditor-src/nodeeditor/src/NodeDelegateModel.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeDelegateModel.cpp
rename from nodeeditor-src/nodeeditor/src/NodeDelegateModel.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeDelegateModel.cpp
diff --git a/nodeeditor-src/nodeeditor/src/NodeConnectionInteraction.hpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeConnectionInteraction.hpp
rename from nodeeditor-src/nodeeditor/src/NodeConnectionInteraction.hpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeConnectionInteraction.hpp
diff --git a/nodeeditor-src/nodeeditor/src/AbstractGraphModel.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/AbstractGraphModel.cpp
rename from nodeeditor-src/nodeeditor/src/AbstractGraphModel.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/AbstractGraphModel.cpp
diff --git a/nodeeditor-src/nodeeditor/src/NodeDelegateModelRegistry.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeDelegateModelRegistry.cpp
rename from nodeeditor-src/nodeeditor/src/NodeDelegateModelRegistry.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeDelegateModelRegistry.cpp
diff --git a/nodeeditor-src/nodeeditor/src/Definitions.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/Definitions.cpp
rename from nodeeditor-src/nodeeditor/src/Definitions.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/Definitions.cpp
diff --git a/nodeeditor-src/nodeeditor/src/ConnectionPainter.hpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/ConnectionPainter.hpp
rename from nodeeditor-src/nodeeditor/src/ConnectionPainter.hpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/ConnectionPainter.hpp
diff --git a/nodeeditor-src/nodeeditor/src/NodeState.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeState.cpp
rename from nodeeditor-src/nodeeditor/src/NodeState.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeState.cpp
diff --git a/nodeeditor-src/nodeeditor/src/NodeConnectionInteraction.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeConnectionInteraction.cpp
rename from nodeeditor-src/nodeeditor/src/NodeConnectionInteraction.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/NodeConnectionInteraction.cpp
diff --git a/nodeeditor-src/nodeeditor/src/UndoCommands.hpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/UndoCommands.hpp
rename from nodeeditor-src/nodeeditor/src/UndoCommands.hpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/UndoCommands.hpp
diff --git a/nodeeditor-src/nodeeditor/src/DefaultHorizontalNodeGeometry.cpp b/nodeeditor-src/nodeeditor/include/QtNodes/internal/DefaultHorizontalNodeGeometry.cpp
rename from nodeeditor-src/nodeeditor/src/DefaultHorizontalNodeGeometry.cpp
rename to nodeeditor-src/nodeeditor/include/QtNodes/internal/DefaultHorizontalNodeGeometry.cpp
