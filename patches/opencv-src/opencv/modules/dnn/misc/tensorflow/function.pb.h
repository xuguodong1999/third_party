// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: function.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_function_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_function_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "attr_value.pb.h"
#include "op_def.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_function_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_function_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_function_2eproto;
namespace opencv_tensorflow {
class FunctionDef;
struct FunctionDefDefaultTypeInternal;
extern FunctionDefDefaultTypeInternal _FunctionDef_default_instance_;
class FunctionDefLibrary;
struct FunctionDefLibraryDefaultTypeInternal;
extern FunctionDefLibraryDefaultTypeInternal _FunctionDefLibrary_default_instance_;
class FunctionDef_Node;
struct FunctionDef_NodeDefaultTypeInternal;
extern FunctionDef_NodeDefaultTypeInternal _FunctionDef_Node_default_instance_;
class FunctionDef_Node_AttrEntry_DoNotUse;
struct FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal;
extern FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal _FunctionDef_Node_AttrEntry_DoNotUse_default_instance_;
class GradientDef;
struct GradientDefDefaultTypeInternal;
extern GradientDefDefaultTypeInternal _GradientDef_default_instance_;
}  // namespace opencv_tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace opencv_tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class GradientDef final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.GradientDef) */ {
 public:
  inline GradientDef() : GradientDef(nullptr) {}
  ~GradientDef() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GradientDef(::google::protobuf::internal::ConstantInitialized);

  inline GradientDef(const GradientDef& from)
      : GradientDef(nullptr, from) {}
  GradientDef(GradientDef&& from) noexcept
    : GradientDef() {
    *this = ::std::move(from);
  }

  inline GradientDef& operator=(const GradientDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline GradientDef& operator=(GradientDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GradientDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const GradientDef* internal_default_instance() {
    return reinterpret_cast<const GradientDef*>(
               &_GradientDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GradientDef& a, GradientDef& b) {
    a.Swap(&b);
  }
  inline void Swap(GradientDef* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GradientDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GradientDef* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GradientDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GradientDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GradientDef& from) {
    GradientDef::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GradientDef* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "opencv_tensorflow.GradientDef";
  }
  protected:
  explicit GradientDef(::google::protobuf::Arena* arena);
  GradientDef(::google::protobuf::Arena* arena, const GradientDef& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFunctionNameFieldNumber = 1,
    kGradientFuncFieldNumber = 2,
  };
  // string function_name = 1;
  void clear_function_name() ;
  const std::string& function_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_function_name(Arg_&& arg, Args_... args);
  std::string* mutable_function_name();
  PROTOBUF_NODISCARD std::string* release_function_name();
  void set_allocated_function_name(std::string* value);

  private:
  const std::string& _internal_function_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_function_name(
      const std::string& value);
  std::string* _internal_mutable_function_name();

  public:
  // string gradient_func = 2;
  void clear_gradient_func() ;
  const std::string& gradient_func() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_gradient_func(Arg_&& arg, Args_... args);
  std::string* mutable_gradient_func();
  PROTOBUF_NODISCARD std::string* release_gradient_func();
  void set_allocated_gradient_func(std::string* value);

  private:
  const std::string& _internal_gradient_func() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_gradient_func(
      const std::string& value);
  std::string* _internal_mutable_gradient_func();

  public:
  // @@protoc_insertion_point(class_scope:opencv_tensorflow.GradientDef)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr function_name_;
    ::google::protobuf::internal::ArenaStringPtr gradient_func_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_function_2eproto;
};// -------------------------------------------------------------------

class FunctionDef_Node_AttrEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          FunctionDef_Node_AttrEntry_DoNotUse, std::string, ::opencv_tensorflow::AttrValue,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      FunctionDef_Node_AttrEntry_DoNotUse, std::string, ::opencv_tensorflow::AttrValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  FunctionDef_Node_AttrEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionDef_Node_AttrEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit FunctionDef_Node_AttrEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const FunctionDef_Node_AttrEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const FunctionDef_Node_AttrEntry_DoNotUse*>(
        &_FunctionDef_Node_AttrEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "opencv_tensorflow.FunctionDef.Node.AttrEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_function_2eproto;
};
// -------------------------------------------------------------------

class FunctionDef_Node final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.FunctionDef.Node) */ {
 public:
  inline FunctionDef_Node() : FunctionDef_Node(nullptr) {}
  ~FunctionDef_Node() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionDef_Node(::google::protobuf::internal::ConstantInitialized);

  inline FunctionDef_Node(const FunctionDef_Node& from)
      : FunctionDef_Node(nullptr, from) {}
  FunctionDef_Node(FunctionDef_Node&& from) noexcept
    : FunctionDef_Node() {
    *this = ::std::move(from);
  }

  inline FunctionDef_Node& operator=(const FunctionDef_Node& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionDef_Node& operator=(FunctionDef_Node&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionDef_Node& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionDef_Node* internal_default_instance() {
    return reinterpret_cast<const FunctionDef_Node*>(
               &_FunctionDef_Node_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FunctionDef_Node& a, FunctionDef_Node& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionDef_Node* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionDef_Node* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionDef_Node* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionDef_Node>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionDef_Node& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionDef_Node& from) {
    FunctionDef_Node::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionDef_Node* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "opencv_tensorflow.FunctionDef.Node";
  }
  protected:
  explicit FunctionDef_Node(::google::protobuf::Arena* arena);
  FunctionDef_Node(::google::protobuf::Arena* arena, const FunctionDef_Node& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kRetFieldNumber = 1,
    kArgFieldNumber = 3,
    kDepFieldNumber = 4,
    kAttrFieldNumber = 5,
    kOpFieldNumber = 2,
  };
  // repeated string ret = 1;
  int ret_size() const;
  private:
  int _internal_ret_size() const;

  public:
  void clear_ret() ;
  const std::string& ret(int index) const;
  std::string* mutable_ret(int index);
  void set_ret(int index, const std::string& value);
  void set_ret(int index, std::string&& value);
  void set_ret(int index, const char* value);
  void set_ret(int index, const char* value, std::size_t size);
  void set_ret(int index, absl::string_view value);
  std::string* add_ret();
  void add_ret(const std::string& value);
  void add_ret(std::string&& value);
  void add_ret(const char* value);
  void add_ret(const char* value, std::size_t size);
  void add_ret(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& ret() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_ret();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_ret() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_ret();

  public:
  // repeated string arg = 3;
  int arg_size() const;
  private:
  int _internal_arg_size() const;

  public:
  void clear_arg() ;
  const std::string& arg(int index) const;
  std::string* mutable_arg(int index);
  void set_arg(int index, const std::string& value);
  void set_arg(int index, std::string&& value);
  void set_arg(int index, const char* value);
  void set_arg(int index, const char* value, std::size_t size);
  void set_arg(int index, absl::string_view value);
  std::string* add_arg();
  void add_arg(const std::string& value);
  void add_arg(std::string&& value);
  void add_arg(const char* value);
  void add_arg(const char* value, std::size_t size);
  void add_arg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& arg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_arg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_arg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_arg();

  public:
  // repeated string dep = 4;
  int dep_size() const;
  private:
  int _internal_dep_size() const;

  public:
  void clear_dep() ;
  const std::string& dep(int index) const;
  std::string* mutable_dep(int index);
  void set_dep(int index, const std::string& value);
  void set_dep(int index, std::string&& value);
  void set_dep(int index, const char* value);
  void set_dep(int index, const char* value, std::size_t size);
  void set_dep(int index, absl::string_view value);
  std::string* add_dep();
  void add_dep(const std::string& value);
  void add_dep(std::string&& value);
  void add_dep(const char* value);
  void add_dep(const char* value, std::size_t size);
  void add_dep(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& dep() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dep();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dep() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dep();

  public:
  // map<string, .opencv_tensorflow.AttrValue> attr = 5;
  int attr_size() const;
  private:
  int _internal_attr_size() const;

  public:
  void clear_attr() ;
  const ::google::protobuf::Map<std::string, ::opencv_tensorflow::AttrValue>& attr() const;
  ::google::protobuf::Map<std::string, ::opencv_tensorflow::AttrValue>* mutable_attr();

  private:
  const ::google::protobuf::Map<std::string, ::opencv_tensorflow::AttrValue>& _internal_attr() const;
  ::google::protobuf::Map<std::string, ::opencv_tensorflow::AttrValue>* _internal_mutable_attr();

  public:
  // string op = 2;
  void clear_op() ;
  const std::string& op() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_op(Arg_&& arg, Args_... args);
  std::string* mutable_op();
  PROTOBUF_NODISCARD std::string* release_op();
  void set_allocated_op(std::string* value);

  private:
  const std::string& _internal_op() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_op(
      const std::string& value);
  std::string* _internal_mutable_op();

  public:
  // @@protoc_insertion_point(class_scope:opencv_tensorflow.FunctionDef.Node)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 2,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> ret_;
    ::google::protobuf::RepeatedPtrField<std::string> arg_;
    ::google::protobuf::RepeatedPtrField<std::string> dep_;
    ::google::protobuf::internal::MapField<FunctionDef_Node_AttrEntry_DoNotUse, std::string, ::opencv_tensorflow::AttrValue,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        attr_;
    ::google::protobuf::internal::ArenaStringPtr op_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_function_2eproto;
};// -------------------------------------------------------------------

class FunctionDef final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.FunctionDef) */ {
 public:
  inline FunctionDef() : FunctionDef(nullptr) {}
  ~FunctionDef() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionDef(::google::protobuf::internal::ConstantInitialized);

  inline FunctionDef(const FunctionDef& from)
      : FunctionDef(nullptr, from) {}
  FunctionDef(FunctionDef&& from) noexcept
    : FunctionDef() {
    *this = ::std::move(from);
  }

  inline FunctionDef& operator=(const FunctionDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionDef& operator=(FunctionDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionDef* internal_default_instance() {
    return reinterpret_cast<const FunctionDef*>(
               &_FunctionDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(FunctionDef& a, FunctionDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionDef* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionDef* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionDef& from) {
    FunctionDef::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionDef* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "opencv_tensorflow.FunctionDef";
  }
  protected:
  explicit FunctionDef(::google::protobuf::Arena* arena);
  FunctionDef(::google::protobuf::Arena* arena, const FunctionDef& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Node = FunctionDef_Node;

  // accessors -------------------------------------------------------

  enum : int {
    kNodeFieldNumber = 2,
    kSignatureFieldNumber = 1,
  };
  // repeated .opencv_tensorflow.FunctionDef.Node node = 2;
  int node_size() const;
  private:
  int _internal_node_size() const;

  public:
  void clear_node() ;
  ::opencv_tensorflow::FunctionDef_Node* mutable_node(int index);
  ::google::protobuf::RepeatedPtrField< ::opencv_tensorflow::FunctionDef_Node >*
      mutable_node();
  private:
  const ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef_Node>& _internal_node() const;
  ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef_Node>* _internal_mutable_node();
  public:
  const ::opencv_tensorflow::FunctionDef_Node& node(int index) const;
  ::opencv_tensorflow::FunctionDef_Node* add_node();
  const ::google::protobuf::RepeatedPtrField< ::opencv_tensorflow::FunctionDef_Node >&
      node() const;
  // .opencv_tensorflow.OpDef signature = 1;
  bool has_signature() const;
  void clear_signature() ;
  const ::opencv_tensorflow::OpDef& signature() const;
  PROTOBUF_NODISCARD ::opencv_tensorflow::OpDef* release_signature();
  ::opencv_tensorflow::OpDef* mutable_signature();
  void set_allocated_signature(::opencv_tensorflow::OpDef* value);
  void unsafe_arena_set_allocated_signature(::opencv_tensorflow::OpDef* value);
  ::opencv_tensorflow::OpDef* unsafe_arena_release_signature();

  private:
  const ::opencv_tensorflow::OpDef& _internal_signature() const;
  ::opencv_tensorflow::OpDef* _internal_mutable_signature();

  public:
  // @@protoc_insertion_point(class_scope:opencv_tensorflow.FunctionDef)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::opencv_tensorflow::FunctionDef_Node > node_;
    ::opencv_tensorflow::OpDef* signature_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_function_2eproto;
};// -------------------------------------------------------------------

class FunctionDefLibrary final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.FunctionDefLibrary) */ {
 public:
  inline FunctionDefLibrary() : FunctionDefLibrary(nullptr) {}
  ~FunctionDefLibrary() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionDefLibrary(::google::protobuf::internal::ConstantInitialized);

  inline FunctionDefLibrary(const FunctionDefLibrary& from)
      : FunctionDefLibrary(nullptr, from) {}
  FunctionDefLibrary(FunctionDefLibrary&& from) noexcept
    : FunctionDefLibrary() {
    *this = ::std::move(from);
  }

  inline FunctionDefLibrary& operator=(const FunctionDefLibrary& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionDefLibrary& operator=(FunctionDefLibrary&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionDefLibrary& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionDefLibrary* internal_default_instance() {
    return reinterpret_cast<const FunctionDefLibrary*>(
               &_FunctionDefLibrary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FunctionDefLibrary& a, FunctionDefLibrary& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionDefLibrary* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionDefLibrary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionDefLibrary* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionDefLibrary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionDefLibrary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionDefLibrary& from) {
    FunctionDefLibrary::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionDefLibrary* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "opencv_tensorflow.FunctionDefLibrary";
  }
  protected:
  explicit FunctionDefLibrary(::google::protobuf::Arena* arena);
  FunctionDefLibrary(::google::protobuf::Arena* arena, const FunctionDefLibrary& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFunctionFieldNumber = 1,
    kGradientFieldNumber = 2,
  };
  // repeated .opencv_tensorflow.FunctionDef function = 1;
  int function_size() const;
  private:
  int _internal_function_size() const;

  public:
  void clear_function() ;
  ::opencv_tensorflow::FunctionDef* mutable_function(int index);
  ::google::protobuf::RepeatedPtrField< ::opencv_tensorflow::FunctionDef >*
      mutable_function();
  private:
  const ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef>& _internal_function() const;
  ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef>* _internal_mutable_function();
  public:
  const ::opencv_tensorflow::FunctionDef& function(int index) const;
  ::opencv_tensorflow::FunctionDef* add_function();
  const ::google::protobuf::RepeatedPtrField< ::opencv_tensorflow::FunctionDef >&
      function() const;
  // repeated .opencv_tensorflow.GradientDef gradient = 2;
  int gradient_size() const;
  private:
  int _internal_gradient_size() const;

  public:
  void clear_gradient() ;
  ::opencv_tensorflow::GradientDef* mutable_gradient(int index);
  ::google::protobuf::RepeatedPtrField< ::opencv_tensorflow::GradientDef >*
      mutable_gradient();
  private:
  const ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::GradientDef>& _internal_gradient() const;
  ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::GradientDef>* _internal_mutable_gradient();
  public:
  const ::opencv_tensorflow::GradientDef& gradient(int index) const;
  ::opencv_tensorflow::GradientDef* add_gradient();
  const ::google::protobuf::RepeatedPtrField< ::opencv_tensorflow::GradientDef >&
      gradient() const;
  // @@protoc_insertion_point(class_scope:opencv_tensorflow.FunctionDefLibrary)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::opencv_tensorflow::FunctionDef > function_;
    ::google::protobuf::RepeatedPtrField< ::opencv_tensorflow::GradientDef > gradient_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_function_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FunctionDefLibrary

// repeated .opencv_tensorflow.FunctionDef function = 1;
inline int FunctionDefLibrary::_internal_function_size() const {
  return _internal_function().size();
}
inline int FunctionDefLibrary::function_size() const {
  return _internal_function_size();
}
inline void FunctionDefLibrary::clear_function() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.function_.Clear();
}
inline ::opencv_tensorflow::FunctionDef* FunctionDefLibrary::mutable_function(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:opencv_tensorflow.FunctionDefLibrary.function)
  return _internal_mutable_function()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef>* FunctionDefLibrary::mutable_function()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:opencv_tensorflow.FunctionDefLibrary.function)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_function();
}
inline const ::opencv_tensorflow::FunctionDef& FunctionDefLibrary::function(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opencv_tensorflow.FunctionDefLibrary.function)
  return _internal_function().Get(index);
}
inline ::opencv_tensorflow::FunctionDef* FunctionDefLibrary::add_function() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::opencv_tensorflow::FunctionDef* _add = _internal_mutable_function()->Add();
  // @@protoc_insertion_point(field_add:opencv_tensorflow.FunctionDefLibrary.function)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef>& FunctionDefLibrary::function() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:opencv_tensorflow.FunctionDefLibrary.function)
  return _internal_function();
}
inline const ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef>&
FunctionDefLibrary::_internal_function() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.function_;
}
inline ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef>*
FunctionDefLibrary::_internal_mutable_function() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.function_;
}

// repeated .opencv_tensorflow.GradientDef gradient = 2;
inline int FunctionDefLibrary::_internal_gradient_size() const {
  return _internal_gradient().size();
}
inline int FunctionDefLibrary::gradient_size() const {
  return _internal_gradient_size();
}
inline void FunctionDefLibrary::clear_gradient() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gradient_.Clear();
}
inline ::opencv_tensorflow::GradientDef* FunctionDefLibrary::mutable_gradient(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:opencv_tensorflow.FunctionDefLibrary.gradient)
  return _internal_mutable_gradient()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::GradientDef>* FunctionDefLibrary::mutable_gradient()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:opencv_tensorflow.FunctionDefLibrary.gradient)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gradient();
}
inline const ::opencv_tensorflow::GradientDef& FunctionDefLibrary::gradient(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opencv_tensorflow.FunctionDefLibrary.gradient)
  return _internal_gradient().Get(index);
}
inline ::opencv_tensorflow::GradientDef* FunctionDefLibrary::add_gradient() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::opencv_tensorflow::GradientDef* _add = _internal_mutable_gradient()->Add();
  // @@protoc_insertion_point(field_add:opencv_tensorflow.FunctionDefLibrary.gradient)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::GradientDef>& FunctionDefLibrary::gradient() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:opencv_tensorflow.FunctionDefLibrary.gradient)
  return _internal_gradient();
}
inline const ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::GradientDef>&
FunctionDefLibrary::_internal_gradient() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gradient_;
}
inline ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::GradientDef>*
FunctionDefLibrary::_internal_mutable_gradient() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gradient_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FunctionDef_Node

// repeated string ret = 1;
inline int FunctionDef_Node::_internal_ret_size() const {
  return _internal_ret().size();
}
inline int FunctionDef_Node::ret_size() const {
  return _internal_ret_size();
}
inline void FunctionDef_Node::clear_ret() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ret_.Clear();
}
inline std::string* FunctionDef_Node::add_ret()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_ret()->Add();
  // @@protoc_insertion_point(field_add_mutable:opencv_tensorflow.FunctionDef.Node.ret)
  return _s;
}
inline const std::string& FunctionDef_Node::ret(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opencv_tensorflow.FunctionDef.Node.ret)
  return _internal_ret().Get(index);
}
inline std::string* FunctionDef_Node::mutable_ret(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:opencv_tensorflow.FunctionDef.Node.ret)
  return _internal_mutable_ret()->Mutable(index);
}
inline void FunctionDef_Node::set_ret(int index, const std::string& value) {
  _internal_mutable_ret()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:opencv_tensorflow.FunctionDef.Node.ret)
}
inline void FunctionDef_Node::set_ret(int index, std::string&& value) {
  _internal_mutable_ret()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:opencv_tensorflow.FunctionDef.Node.ret)
}
inline void FunctionDef_Node::set_ret(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_ret()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:opencv_tensorflow.FunctionDef.Node.ret)
}
inline void FunctionDef_Node::set_ret(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_ret()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:opencv_tensorflow.FunctionDef.Node.ret)
}
inline void FunctionDef_Node::set_ret(int index, absl::string_view value) {
  _internal_mutable_ret()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:opencv_tensorflow.FunctionDef.Node.ret)
}
inline void FunctionDef_Node::add_ret(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ret()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:opencv_tensorflow.FunctionDef.Node.ret)
}
inline void FunctionDef_Node::add_ret(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ret()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:opencv_tensorflow.FunctionDef.Node.ret)
}
inline void FunctionDef_Node::add_ret(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ret()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:opencv_tensorflow.FunctionDef.Node.ret)
}
inline void FunctionDef_Node::add_ret(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ret()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:opencv_tensorflow.FunctionDef.Node.ret)
}
inline void FunctionDef_Node::add_ret(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ret()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:opencv_tensorflow.FunctionDef.Node.ret)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionDef_Node::ret() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:opencv_tensorflow.FunctionDef.Node.ret)
  return _internal_ret();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionDef_Node::mutable_ret() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:opencv_tensorflow.FunctionDef.Node.ret)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ret();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionDef_Node::_internal_ret() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ret_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionDef_Node::_internal_mutable_ret() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ret_;
}

// string op = 2;
inline void FunctionDef_Node::clear_op() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.op_.ClearToEmpty();
}
inline const std::string& FunctionDef_Node::op() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opencv_tensorflow.FunctionDef.Node.op)
  return _internal_op();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FunctionDef_Node::set_op(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.op_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:opencv_tensorflow.FunctionDef.Node.op)
}
inline std::string* FunctionDef_Node::mutable_op() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_op();
  // @@protoc_insertion_point(field_mutable:opencv_tensorflow.FunctionDef.Node.op)
  return _s;
}
inline const std::string& FunctionDef_Node::_internal_op() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.op_.Get();
}
inline void FunctionDef_Node::_internal_set_op(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.op_.Set(value, GetArena());
}
inline std::string* FunctionDef_Node::_internal_mutable_op() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.op_.Mutable( GetArena());
}
inline std::string* FunctionDef_Node::release_op() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:opencv_tensorflow.FunctionDef.Node.op)
  return _impl_.op_.Release();
}
inline void FunctionDef_Node::set_allocated_op(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.op_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.op_.IsDefault()) {
          _impl_.op_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:opencv_tensorflow.FunctionDef.Node.op)
}

// repeated string arg = 3;
inline int FunctionDef_Node::_internal_arg_size() const {
  return _internal_arg().size();
}
inline int FunctionDef_Node::arg_size() const {
  return _internal_arg_size();
}
inline void FunctionDef_Node::clear_arg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arg_.Clear();
}
inline std::string* FunctionDef_Node::add_arg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_arg()->Add();
  // @@protoc_insertion_point(field_add_mutable:opencv_tensorflow.FunctionDef.Node.arg)
  return _s;
}
inline const std::string& FunctionDef_Node::arg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opencv_tensorflow.FunctionDef.Node.arg)
  return _internal_arg().Get(index);
}
inline std::string* FunctionDef_Node::mutable_arg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:opencv_tensorflow.FunctionDef.Node.arg)
  return _internal_mutable_arg()->Mutable(index);
}
inline void FunctionDef_Node::set_arg(int index, const std::string& value) {
  _internal_mutable_arg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:opencv_tensorflow.FunctionDef.Node.arg)
}
inline void FunctionDef_Node::set_arg(int index, std::string&& value) {
  _internal_mutable_arg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:opencv_tensorflow.FunctionDef.Node.arg)
}
inline void FunctionDef_Node::set_arg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_arg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:opencv_tensorflow.FunctionDef.Node.arg)
}
inline void FunctionDef_Node::set_arg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_arg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:opencv_tensorflow.FunctionDef.Node.arg)
}
inline void FunctionDef_Node::set_arg(int index, absl::string_view value) {
  _internal_mutable_arg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:opencv_tensorflow.FunctionDef.Node.arg)
}
inline void FunctionDef_Node::add_arg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_arg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:opencv_tensorflow.FunctionDef.Node.arg)
}
inline void FunctionDef_Node::add_arg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_arg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:opencv_tensorflow.FunctionDef.Node.arg)
}
inline void FunctionDef_Node::add_arg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_arg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:opencv_tensorflow.FunctionDef.Node.arg)
}
inline void FunctionDef_Node::add_arg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_arg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:opencv_tensorflow.FunctionDef.Node.arg)
}
inline void FunctionDef_Node::add_arg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_arg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:opencv_tensorflow.FunctionDef.Node.arg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionDef_Node::arg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:opencv_tensorflow.FunctionDef.Node.arg)
  return _internal_arg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionDef_Node::mutable_arg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:opencv_tensorflow.FunctionDef.Node.arg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_arg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionDef_Node::_internal_arg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.arg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionDef_Node::_internal_mutable_arg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.arg_;
}

// repeated string dep = 4;
inline int FunctionDef_Node::_internal_dep_size() const {
  return _internal_dep().size();
}
inline int FunctionDef_Node::dep_size() const {
  return _internal_dep_size();
}
inline void FunctionDef_Node::clear_dep() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dep_.Clear();
}
inline std::string* FunctionDef_Node::add_dep()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_dep()->Add();
  // @@protoc_insertion_point(field_add_mutable:opencv_tensorflow.FunctionDef.Node.dep)
  return _s;
}
inline const std::string& FunctionDef_Node::dep(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opencv_tensorflow.FunctionDef.Node.dep)
  return _internal_dep().Get(index);
}
inline std::string* FunctionDef_Node::mutable_dep(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:opencv_tensorflow.FunctionDef.Node.dep)
  return _internal_mutable_dep()->Mutable(index);
}
inline void FunctionDef_Node::set_dep(int index, const std::string& value) {
  _internal_mutable_dep()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:opencv_tensorflow.FunctionDef.Node.dep)
}
inline void FunctionDef_Node::set_dep(int index, std::string&& value) {
  _internal_mutable_dep()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:opencv_tensorflow.FunctionDef.Node.dep)
}
inline void FunctionDef_Node::set_dep(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_dep()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:opencv_tensorflow.FunctionDef.Node.dep)
}
inline void FunctionDef_Node::set_dep(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_dep()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:opencv_tensorflow.FunctionDef.Node.dep)
}
inline void FunctionDef_Node::set_dep(int index, absl::string_view value) {
  _internal_mutable_dep()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:opencv_tensorflow.FunctionDef.Node.dep)
}
inline void FunctionDef_Node::add_dep(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dep()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:opencv_tensorflow.FunctionDef.Node.dep)
}
inline void FunctionDef_Node::add_dep(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dep()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:opencv_tensorflow.FunctionDef.Node.dep)
}
inline void FunctionDef_Node::add_dep(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dep()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:opencv_tensorflow.FunctionDef.Node.dep)
}
inline void FunctionDef_Node::add_dep(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dep()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:opencv_tensorflow.FunctionDef.Node.dep)
}
inline void FunctionDef_Node::add_dep(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dep()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:opencv_tensorflow.FunctionDef.Node.dep)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionDef_Node::dep() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:opencv_tensorflow.FunctionDef.Node.dep)
  return _internal_dep();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionDef_Node::mutable_dep() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:opencv_tensorflow.FunctionDef.Node.dep)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_dep();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionDef_Node::_internal_dep() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dep_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionDef_Node::_internal_mutable_dep() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.dep_;
}

// map<string, .opencv_tensorflow.AttrValue> attr = 5;
inline int FunctionDef_Node::_internal_attr_size() const {
  return _internal_attr().size();
}
inline int FunctionDef_Node::attr_size() const {
  return _internal_attr_size();
}
inline const ::google::protobuf::Map<std::string, ::opencv_tensorflow::AttrValue>& FunctionDef_Node::_internal_attr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.attr_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::opencv_tensorflow::AttrValue>& FunctionDef_Node::attr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:opencv_tensorflow.FunctionDef.Node.attr)
  return _internal_attr();
}
inline ::google::protobuf::Map<std::string, ::opencv_tensorflow::AttrValue>* FunctionDef_Node::_internal_mutable_attr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.attr_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::opencv_tensorflow::AttrValue>* FunctionDef_Node::mutable_attr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:opencv_tensorflow.FunctionDef.Node.attr)
  return _internal_mutable_attr();
}

// -------------------------------------------------------------------

// FunctionDef

// .opencv_tensorflow.OpDef signature = 1;
inline bool FunctionDef::has_signature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.signature_ != nullptr);
  return value;
}
inline const ::opencv_tensorflow::OpDef& FunctionDef::_internal_signature() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::opencv_tensorflow::OpDef* p = _impl_.signature_;
  return p != nullptr ? *p : reinterpret_cast<const ::opencv_tensorflow::OpDef&>(::opencv_tensorflow::_OpDef_default_instance_);
}
inline const ::opencv_tensorflow::OpDef& FunctionDef::signature() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opencv_tensorflow.FunctionDef.signature)
  return _internal_signature();
}
inline void FunctionDef::unsafe_arena_set_allocated_signature(::opencv_tensorflow::OpDef* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.signature_);
  }
  _impl_.signature_ = reinterpret_cast<::opencv_tensorflow::OpDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:opencv_tensorflow.FunctionDef.signature)
}
inline ::opencv_tensorflow::OpDef* FunctionDef::release_signature() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::opencv_tensorflow::OpDef* released = _impl_.signature_;
  _impl_.signature_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::opencv_tensorflow::OpDef* FunctionDef::unsafe_arena_release_signature() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:opencv_tensorflow.FunctionDef.signature)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::opencv_tensorflow::OpDef* temp = _impl_.signature_;
  _impl_.signature_ = nullptr;
  return temp;
}
inline ::opencv_tensorflow::OpDef* FunctionDef::_internal_mutable_signature() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.signature_ == nullptr) {
    auto* p = CreateMaybeMessage<::opencv_tensorflow::OpDef>(GetArena());
    _impl_.signature_ = reinterpret_cast<::opencv_tensorflow::OpDef*>(p);
  }
  return _impl_.signature_;
}
inline ::opencv_tensorflow::OpDef* FunctionDef::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::opencv_tensorflow::OpDef* _msg = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:opencv_tensorflow.FunctionDef.signature)
  return _msg;
}
inline void FunctionDef::set_allocated_signature(::opencv_tensorflow::OpDef* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.signature_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.signature_ = reinterpret_cast<::opencv_tensorflow::OpDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:opencv_tensorflow.FunctionDef.signature)
}

// repeated .opencv_tensorflow.FunctionDef.Node node = 2;
inline int FunctionDef::_internal_node_size() const {
  return _internal_node().size();
}
inline int FunctionDef::node_size() const {
  return _internal_node_size();
}
inline void FunctionDef::clear_node() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.node_.Clear();
}
inline ::opencv_tensorflow::FunctionDef_Node* FunctionDef::mutable_node(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:opencv_tensorflow.FunctionDef.node)
  return _internal_mutable_node()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef_Node>* FunctionDef::mutable_node()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:opencv_tensorflow.FunctionDef.node)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_node();
}
inline const ::opencv_tensorflow::FunctionDef_Node& FunctionDef::node(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opencv_tensorflow.FunctionDef.node)
  return _internal_node().Get(index);
}
inline ::opencv_tensorflow::FunctionDef_Node* FunctionDef::add_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::opencv_tensorflow::FunctionDef_Node* _add = _internal_mutable_node()->Add();
  // @@protoc_insertion_point(field_add:opencv_tensorflow.FunctionDef.node)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef_Node>& FunctionDef::node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:opencv_tensorflow.FunctionDef.node)
  return _internal_node();
}
inline const ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef_Node>&
FunctionDef::_internal_node() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.node_;
}
inline ::google::protobuf::RepeatedPtrField<::opencv_tensorflow::FunctionDef_Node>*
FunctionDef::_internal_mutable_node() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.node_;
}

// -------------------------------------------------------------------

// GradientDef

// string function_name = 1;
inline void GradientDef::clear_function_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.function_name_.ClearToEmpty();
}
inline const std::string& GradientDef::function_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opencv_tensorflow.GradientDef.function_name)
  return _internal_function_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GradientDef::set_function_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.function_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:opencv_tensorflow.GradientDef.function_name)
}
inline std::string* GradientDef::mutable_function_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_function_name();
  // @@protoc_insertion_point(field_mutable:opencv_tensorflow.GradientDef.function_name)
  return _s;
}
inline const std::string& GradientDef::_internal_function_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.function_name_.Get();
}
inline void GradientDef::_internal_set_function_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.function_name_.Set(value, GetArena());
}
inline std::string* GradientDef::_internal_mutable_function_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.function_name_.Mutable( GetArena());
}
inline std::string* GradientDef::release_function_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:opencv_tensorflow.GradientDef.function_name)
  return _impl_.function_name_.Release();
}
inline void GradientDef::set_allocated_function_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.function_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.function_name_.IsDefault()) {
          _impl_.function_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:opencv_tensorflow.GradientDef.function_name)
}

// string gradient_func = 2;
inline void GradientDef::clear_gradient_func() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gradient_func_.ClearToEmpty();
}
inline const std::string& GradientDef::gradient_func() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opencv_tensorflow.GradientDef.gradient_func)
  return _internal_gradient_func();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GradientDef::set_gradient_func(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gradient_func_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:opencv_tensorflow.GradientDef.gradient_func)
}
inline std::string* GradientDef::mutable_gradient_func() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_gradient_func();
  // @@protoc_insertion_point(field_mutable:opencv_tensorflow.GradientDef.gradient_func)
  return _s;
}
inline const std::string& GradientDef::_internal_gradient_func() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gradient_func_.Get();
}
inline void GradientDef::_internal_set_gradient_func(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gradient_func_.Set(value, GetArena());
}
inline std::string* GradientDef::_internal_mutable_gradient_func() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.gradient_func_.Mutable( GetArena());
}
inline std::string* GradientDef::release_gradient_func() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:opencv_tensorflow.GradientDef.gradient_func)
  return _impl_.gradient_func_.Release();
}
inline void GradientDef::set_allocated_gradient_func(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gradient_func_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.gradient_func_.IsDefault()) {
          _impl_.gradient_func_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:opencv_tensorflow.GradientDef.gradient_func)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace opencv_tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_function_2eproto_2epb_2eh
