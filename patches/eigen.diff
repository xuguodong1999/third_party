diff --git a/cpp/eigen-src/eigen/Eigen/Core b/cpp/eigen-src/eigen/Eigen/Core
index 5921e15f9..a76521c81 100644
--- a/cpp/eigen-src/eigen/Eigen/Core
+++ b/cpp/eigen-src/eigen/Eigen/Core
@@ -67,8 +67,12 @@
 #endif
 
 #ifdef EIGEN_HAS_OPENMP
+#ifdef NCNN_SIMPLEOMP
+#include <simpleomp.h>
+#else
 #include <omp.h>
 #endif
+#endif
 
 // MSVC for windows mobile does not have the errno.h file
 #if !(EIGEN_COMP_MSVC && EIGEN_OS_WINCE) && !EIGEN_COMP_ARM
diff --git a/cpp/eigen-src/eigen/Eigen/src/Core/products/Parallelizer.h b/cpp/eigen-src/eigen/Eigen/src/Core/products/Parallelizer.h
index 8f91879e4..d0caa89a0 100644
--- a/cpp/eigen-src/eigen/Eigen/src/Core/products/Parallelizer.h
+++ b/cpp/eigen-src/eigen/Eigen/src/Core/products/Parallelizer.h
@@ -136,8 +136,12 @@ void parallelize_gemm(const Functor& func, Index rows, Index cols, Index depth,
 
   // if multi-threading is explicitly disabled, not useful, or if we already are in a parallel session,
   // then abort multi-threading
+#ifdef NCNN_SIMPLEOMP
+  if((!Condition) || (threads==1))
+#else
   // FIXME omp_get_num_threads()>1 only works for openmp, what if the user does not use openmp?
   if((!Condition) || (threads==1) || (omp_get_num_threads()>1))
+#endif
     return func(0,rows, 0,cols);
 
   Eigen::initParallel();
diff --git a/cpp/eigen-src/eigen/Eigen/src/Core/util/ConfigureVectorization.h b/cpp/eigen-src/eigen/Eigen/src/Core/util/ConfigureVectorization.h
index af4e69623..3677cabc0 100644
--- a/cpp/eigen-src/eigen/Eigen/src/Core/util/ConfigureVectorization.h
+++ b/cpp/eigen-src/eigen/Eigen/src/Core/util/ConfigureVectorization.h
@@ -339,7 +339,7 @@
     extern "C" {
       // In theory we should only include immintrin.h and not the other *mmintrin.h header files directly.
       // Doing so triggers some issues with ICC. However old gcc versions seems to not have this file, thus:
-      #if EIGEN_COMP_ICC >= 1110
+      #if EIGEN_COMP_ICC >= 1110 || EIGEN_COMP_EMSCRIPTEN
         #include <immintrin.h>
       #else
         #include <mmintrin.h>
diff --git a/cpp/eigen-src/eigen/Eigen/src/Core/util/DisableStupidWarnings.h b/cpp/eigen-src/eigen/Eigen/src/Core/util/DisableStupidWarnings.h
index fe0cfec0b..66a688f20 100755
--- a/cpp/eigen-src/eigen/Eigen/src/Core/util/DisableStupidWarnings.h
+++ b/cpp/eigen-src/eigen/Eigen/src/Core/util/DisableStupidWarnings.h
@@ -74,25 +74,25 @@
 #endif
 
 #if defined __NVCC__
-  #pragma diag_suppress boolean_controlling_expr_is_constant
+  #pragma nv_diag_suppress boolean_controlling_expr_is_constant
   // Disable the "statement is unreachable" message
-  #pragma diag_suppress code_is_unreachable
+  #pragma nv_diag_suppress code_is_unreachable
   // Disable the "dynamic initialization in unreachable code" message
-  #pragma diag_suppress initialization_not_reachable
+  #pragma nv_diag_suppress initialization_not_reachable
   // Disable the "invalid error number" message that we get with older versions of nvcc
-  #pragma diag_suppress 1222
+  #pragma nv_diag_suppress 1222
   // Disable the "calling a __host__ function from a __host__ __device__ function is not allowed" messages (yes, there are many of them and they seem to change with every version of the compiler)
-  #pragma diag_suppress 2527
-  #pragma diag_suppress 2529
-  #pragma diag_suppress 2651
-  #pragma diag_suppress 2653
-  #pragma diag_suppress 2668
-  #pragma diag_suppress 2669
-  #pragma diag_suppress 2670
-  #pragma diag_suppress 2671
-  #pragma diag_suppress 2735
-  #pragma diag_suppress 2737
-  #pragma diag_suppress 2739
+  #pragma nv_diag_suppress 2527
+  #pragma nv_diag_suppress 2529
+  #pragma nv_diag_suppress 2651
+  #pragma nv_diag_suppress 2653
+  #pragma nv_diag_suppress 2668
+  #pragma nv_diag_suppress 2669
+  #pragma nv_diag_suppress 2670
+  #pragma nv_diag_suppress 2671
+  #pragma nv_diag_suppress 2735
+  #pragma nv_diag_suppress 2737
+  #pragma nv_diag_suppress 2739
 #endif
 
 #else
diff --git a/cpp/eigen-src/eigen/Eigen/src/Core/util/Macros.h b/cpp/eigen-src/eigen/Eigen/src/Core/util/Macros.h
index 986c3d44d..bc2e72739 100644
--- a/cpp/eigen-src/eigen/Eigen/src/Core/util/Macros.h
+++ b/cpp/eigen-src/eigen/Eigen/src/Core/util/Macros.h
@@ -59,7 +59,7 @@
 //------------------------------------------------------------------------------------------
 
 /// \internal EIGEN_COMP_GNUC set to 1 for all compilers compatible with GCC
-#ifdef __GNUC__
+#if defined(__GNUC__) && !defined(EMSCRIPTEN)
   #define EIGEN_COMP_GNUC (__GNUC__*10+__GNUC_MINOR__)
 #else
   #define EIGEN_COMP_GNUC 0
