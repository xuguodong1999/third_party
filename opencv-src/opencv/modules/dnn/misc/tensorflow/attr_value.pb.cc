// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: attr_value.proto

#include "attr_value.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace opencv_tensorflow {

inline constexpr AttrValue_ListValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : s_{},
        i_{},
        _i_cached_byte_size_{0},
        f_{},
        b_{},
        type_{},
        _type_cached_byte_size_{0},
        shape_{},
        tensor_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AttrValue_ListValue::AttrValue_ListValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AttrValue_ListValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttrValue_ListValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttrValue_ListValueDefaultTypeInternal() {}
  union {
    AttrValue_ListValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttrValue_ListValueDefaultTypeInternal _AttrValue_ListValue_default_instance_;

inline constexpr AttrValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR AttrValue::AttrValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AttrValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttrValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttrValueDefaultTypeInternal() {}
  union {
    AttrValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttrValueDefaultTypeInternal _AttrValue_default_instance_;

inline constexpr NameAttrList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : attr_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NameAttrList::NameAttrList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NameAttrListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NameAttrListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NameAttrListDefaultTypeInternal() {}
  union {
    NameAttrList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NameAttrListDefaultTypeInternal _NameAttrList_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NameAttrList_AttrEntry_DoNotUse::NameAttrList_AttrEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NameAttrList_AttrEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal _NameAttrList_AttrEntry_DoNotUse_default_instance_;
}  // namespace opencv_tensorflow
static ::_pb::Metadata file_level_metadata_attr_5fvalue_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_attr_5fvalue_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_attr_5fvalue_2eproto = nullptr;
const ::uint32_t TableStruct_attr_5fvalue_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue_ListValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue_ListValue, _impl_.s_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue_ListValue, _impl_.i_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue_ListValue, _impl_.f_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue_ListValue, _impl_.b_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue_ListValue, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue_ListValue, _impl_.shape_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue_ListValue, _impl_.tensor_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::NameAttrList_AttrEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::NameAttrList_AttrEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::NameAttrList_AttrEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::NameAttrList_AttrEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::NameAttrList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::NameAttrList, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::NameAttrList, _impl_.attr_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::opencv_tensorflow::AttrValue_ListValue)},
        {15, -1, -1, sizeof(::opencv_tensorflow::AttrValue)},
        {34, 44, -1, sizeof(::opencv_tensorflow::NameAttrList_AttrEntry_DoNotUse)},
        {46, -1, -1, sizeof(::opencv_tensorflow::NameAttrList)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::opencv_tensorflow::_AttrValue_ListValue_default_instance_._instance,
    &::opencv_tensorflow::_AttrValue_default_instance_._instance,
    &::opencv_tensorflow::_NameAttrList_AttrEntry_DoNotUse_default_instance_._instance,
    &::opencv_tensorflow::_NameAttrList_default_instance_._instance,
};
const char descriptor_table_protodef_attr_5fvalue_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020attr_value.proto\022\021opencv_tensorflow\032\014t"
    "ensor.proto\032\022tensor_shape.proto\032\013types.p"
    "roto\"\266\004\n\tAttrValue\022\013\n\001s\030\002 \001(\014H\000\022\013\n\001i\030\003 \001"
    "(\003H\000\022\013\n\001f\030\004 \001(\002H\000\022\013\n\001b\030\005 \001(\010H\000\022+\n\004type\030\006"
    " \001(\0162\033.opencv_tensorflow.DataTypeH\000\0224\n\005s"
    "hape\030\007 \001(\0132#.opencv_tensorflow.TensorSha"
    "peProtoH\000\0220\n\006tensor\030\010 \001(\0132\036.opencv_tenso"
    "rflow.TensorProtoH\000\0226\n\004list\030\001 \001(\0132&.open"
    "cv_tensorflow.AttrValue.ListValueH\000\022/\n\004f"
    "unc\030\n \001(\0132\037.opencv_tensorflow.NameAttrLi"
    "stH\000\022\025\n\013placeholder\030\t \001(\tH\000\032\326\001\n\tListValu"
    "e\022\t\n\001s\030\002 \003(\014\022\r\n\001i\030\003 \003(\003B\002\020\001\022\r\n\001f\030\004 \003(\002B\002"
    "\020\001\022\r\n\001b\030\005 \003(\010B\002\020\001\022-\n\004type\030\006 \003(\0162\033.opencv"
    "_tensorflow.DataTypeB\002\020\001\0222\n\005shape\030\007 \003(\0132"
    "#.opencv_tensorflow.TensorShapeProto\022.\n\006"
    "tensor\030\010 \003(\0132\036.opencv_tensorflow.TensorP"
    "rotoB\007\n\005value\"\240\001\n\014NameAttrList\022\014\n\004name\030\001"
    " \001(\t\0227\n\004attr\030\002 \003(\0132).opencv_tensorflow.N"
    "ameAttrList.AttrEntry\032I\n\tAttrEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022+\n\005value\030\002 \001(\0132\034.opencv_tensorfl"
    "ow.AttrValue:\0028\001B0\n\030org.tensorflow.frame"
    "workB\017AttrValueProtosP\001\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_attr_5fvalue_2eproto_deps[3] =
    {
        &::descriptor_table_tensor_2eproto,
        &::descriptor_table_tensor_5fshape_2eproto,
        &::descriptor_table_types_2eproto,
};
static ::absl::once_flag descriptor_table_attr_5fvalue_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_attr_5fvalue_2eproto = {
    false,
    false,
    874,
    descriptor_table_protodef_attr_5fvalue_2eproto,
    "attr_value.proto",
    &descriptor_table_attr_5fvalue_2eproto_once,
    descriptor_table_attr_5fvalue_2eproto_deps,
    3,
    4,
    schemas,
    file_default_instances,
    TableStruct_attr_5fvalue_2eproto::offsets,
    file_level_metadata_attr_5fvalue_2eproto,
    file_level_enum_descriptors_attr_5fvalue_2eproto,
    file_level_service_descriptors_attr_5fvalue_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_attr_5fvalue_2eproto_getter() {
  return &descriptor_table_attr_5fvalue_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_attr_5fvalue_2eproto(&descriptor_table_attr_5fvalue_2eproto);
namespace opencv_tensorflow {
// ===================================================================

class AttrValue_ListValue::_Internal {
 public:
};

void AttrValue_ListValue::clear_shape() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.shape_.Clear();
}
void AttrValue_ListValue::clear_tensor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tensor_.Clear();
}
AttrValue_ListValue::AttrValue_ListValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opencv_tensorflow.AttrValue.ListValue)
}
inline PROTOBUF_NDEBUG_INLINE AttrValue_ListValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : s_{visibility, arena, from.s_},
        i_{visibility, arena, from.i_},
        _i_cached_byte_size_{0},
        f_{visibility, arena, from.f_},
        b_{visibility, arena, from.b_},
        type_{visibility, arena, from.type_},
        _type_cached_byte_size_{0},
        shape_{visibility, arena, from.shape_},
        tensor_{visibility, arena, from.tensor_},
        _cached_size_{0} {}

AttrValue_ListValue::AttrValue_ListValue(
    ::google::protobuf::Arena* arena,
    const AttrValue_ListValue& from)
    : ::google::protobuf::Message(arena) {
  AttrValue_ListValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:opencv_tensorflow.AttrValue.ListValue)
}
inline PROTOBUF_NDEBUG_INLINE AttrValue_ListValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : s_{visibility, arena},
        i_{visibility, arena},
        _i_cached_byte_size_{0},
        f_{visibility, arena},
        b_{visibility, arena},
        type_{visibility, arena},
        _type_cached_byte_size_{0},
        shape_{visibility, arena},
        tensor_{visibility, arena},
        _cached_size_{0} {}

inline void AttrValue_ListValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AttrValue_ListValue::~AttrValue_ListValue() {
  // @@protoc_insertion_point(destructor:opencv_tensorflow.AttrValue.ListValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AttrValue_ListValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AttrValue_ListValue::Clear() {
// @@protoc_insertion_point(message_clear_start:opencv_tensorflow.AttrValue.ListValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.s_.Clear();
  _impl_.i_.Clear();
  _impl_.f_.Clear();
  _impl_.b_.Clear();
  _impl_.type_.Clear();
  _impl_.shape_.Clear();
  _impl_.tensor_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AttrValue_ListValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 0, 2> AttrValue_ListValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967041,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AttrValue_ListValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .opencv_tensorflow.TensorProto tensor = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 1, PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.tensor_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated bytes s = 2;
    {::_pbi::TcParser::FastBR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.s_)}},
    // repeated int64 i = 3 [packed = true];
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.i_)}},
    // repeated float f = 4 [packed = true];
    {::_pbi::TcParser::FastF32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.f_)}},
    // repeated bool b = 5 [packed = true];
    {::_pbi::TcParser::FastV8P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.b_)}},
    // repeated .opencv_tensorflow.DataType type = 6 [packed = true];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.type_)}},
    // repeated .opencv_tensorflow.TensorShapeProto shape = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.shape_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes s = 2;
    {PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.s_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated int64 i = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.i_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated float f = 4 [packed = true];
    {PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.f_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated bool b = 5 [packed = true];
    {PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.b_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // repeated .opencv_tensorflow.DataType type = 6 [packed = true];
    {PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .opencv_tensorflow.TensorShapeProto shape = 7;
    {PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.shape_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .opencv_tensorflow.TensorProto tensor = 8;
    {PROTOBUF_FIELD_OFFSET(AttrValue_ListValue, _impl_.tensor_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::TensorShapeProto>()},
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::TensorProto>()},
  }}, {{
  }},
};

::uint8_t* AttrValue_ListValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencv_tensorflow.AttrValue.ListValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes s = 2;
  for (int i = 0, n = this->_internal_s_size(); i < n; ++i) {
    const auto& s = this->_internal_s().Get(i);
    target = stream->WriteBytes(2, s, target);
  }

  // repeated int64 i = 3 [packed = true];
  {
    int byte_size = _impl_._i_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_i(), byte_size, target);
    }
  }

  // repeated float f = 4 [packed = true];
  if (this->_internal_f_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_f(), target);
  }

  // repeated bool b = 5 [packed = true];
  if (this->_internal_b_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_b(), target);
  }

  // repeated .opencv_tensorflow.DataType type = 6 [packed = true];
  {
    std::size_t byte_size = _impl_._type_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(6, _internal_type(),
                                       byte_size, target);
    }
  }

  // repeated .opencv_tensorflow.TensorShapeProto shape = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_shape_size()); i < n; i++) {
    const auto& repfield = this->_internal_shape().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .opencv_tensorflow.TensorProto tensor = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tensor_size()); i < n; i++) {
    const auto& repfield = this->_internal_tensor().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencv_tensorflow.AttrValue.ListValue)
  return target;
}

::size_t AttrValue_ListValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencv_tensorflow.AttrValue.ListValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes s = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_s().size());
  for (int i = 0, n = _internal_s().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_s().Get(i));
  }
  // repeated int64 i = 3 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_i())
    ;
    _impl_._i_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float f = 4 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_f_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool b = 5 [packed = true];
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_b_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .opencv_tensorflow.DataType type = 6 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_type_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_type().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._type_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .opencv_tensorflow.TensorShapeProto shape = 7;
  total_size += 1UL * this->_internal_shape_size();
  for (const auto& msg : this->_internal_shape()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .opencv_tensorflow.TensorProto tensor = 8;
  total_size += 1UL * this->_internal_tensor_size();
  for (const auto& msg : this->_internal_tensor()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AttrValue_ListValue::_class_data_ = {
    AttrValue_ListValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AttrValue_ListValue::GetClassData() const {
  return &_class_data_;
}

void AttrValue_ListValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AttrValue_ListValue*>(&to_msg);
  auto& from = static_cast<const AttrValue_ListValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opencv_tensorflow.AttrValue.ListValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_s()->MergeFrom(from._internal_s());
  _this->_internal_mutable_i()->MergeFrom(from._internal_i());
  _this->_internal_mutable_f()->MergeFrom(from._internal_f());
  _this->_internal_mutable_b()->MergeFrom(from._internal_b());
  _this->_internal_mutable_type()->MergeFrom(from._internal_type());
  _this->_internal_mutable_shape()->MergeFrom(
      from._internal_shape());
  _this->_internal_mutable_tensor()->MergeFrom(
      from._internal_tensor());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttrValue_ListValue::CopyFrom(const AttrValue_ListValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencv_tensorflow.AttrValue.ListValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AttrValue_ListValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AttrValue_ListValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AttrValue_ListValue::InternalSwap(AttrValue_ListValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.s_.InternalSwap(&other->_impl_.s_);
  _impl_.i_.InternalSwap(&other->_impl_.i_);
  _impl_.f_.InternalSwap(&other->_impl_.f_);
  _impl_.b_.InternalSwap(&other->_impl_.b_);
  _impl_.type_.InternalSwap(&other->_impl_.type_);
  _impl_.shape_.InternalSwap(&other->_impl_.shape_);
  _impl_.tensor_.InternalSwap(&other->_impl_.tensor_);
}

::google::protobuf::Metadata AttrValue_ListValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_attr_5fvalue_2eproto_getter, &descriptor_table_attr_5fvalue_2eproto_once,
      file_level_metadata_attr_5fvalue_2eproto[0]);
}
// ===================================================================

class AttrValue::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::AttrValue, _impl_._oneof_case_);
  static const ::opencv_tensorflow::TensorShapeProto& shape(const AttrValue* msg);
  static const ::opencv_tensorflow::TensorProto& tensor(const AttrValue* msg);
  static const ::opencv_tensorflow::AttrValue_ListValue& list(const AttrValue* msg);
  static const ::opencv_tensorflow::NameAttrList& func(const AttrValue* msg);
};

const ::opencv_tensorflow::TensorShapeProto& AttrValue::_Internal::shape(const AttrValue* msg) {
  return *msg->_impl_.value_.shape_;
}
const ::opencv_tensorflow::TensorProto& AttrValue::_Internal::tensor(const AttrValue* msg) {
  return *msg->_impl_.value_.tensor_;
}
const ::opencv_tensorflow::AttrValue_ListValue& AttrValue::_Internal::list(const AttrValue* msg) {
  return *msg->_impl_.value_.list_;
}
const ::opencv_tensorflow::NameAttrList& AttrValue::_Internal::func(const AttrValue* msg) {
  return *msg->_impl_.value_.func_;
}
void AttrValue::set_allocated_shape(::opencv_tensorflow::TensorShapeProto* shape) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (shape) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(shape)->GetArena();
    if (message_arena != submessage_arena) {
      shape = ::google::protobuf::internal::GetOwnedMessage(message_arena, shape, submessage_arena);
    }
    set_has_shape();
    _impl_.value_.shape_ = shape;
  }
  // @@protoc_insertion_point(field_set_allocated:opencv_tensorflow.AttrValue.shape)
}
void AttrValue::clear_shape() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() == kShape) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.shape_;
    }
    clear_has_value();
  }
}
void AttrValue::set_allocated_tensor(::opencv_tensorflow::TensorProto* tensor) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (tensor) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(tensor)->GetArena();
    if (message_arena != submessage_arena) {
      tensor = ::google::protobuf::internal::GetOwnedMessage(message_arena, tensor, submessage_arena);
    }
    set_has_tensor();
    _impl_.value_.tensor_ = tensor;
  }
  // @@protoc_insertion_point(field_set_allocated:opencv_tensorflow.AttrValue.tensor)
}
void AttrValue::clear_tensor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() == kTensor) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.tensor_;
    }
    clear_has_value();
  }
}
void AttrValue::set_allocated_list(::opencv_tensorflow::AttrValue_ListValue* list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (list) {
    ::google::protobuf::Arena* submessage_arena = list->GetArena();
    if (message_arena != submessage_arena) {
      list = ::google::protobuf::internal::GetOwnedMessage(message_arena, list, submessage_arena);
    }
    set_has_list();
    _impl_.value_.list_ = list;
  }
  // @@protoc_insertion_point(field_set_allocated:opencv_tensorflow.AttrValue.list)
}
void AttrValue::set_allocated_func(::opencv_tensorflow::NameAttrList* func) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (func) {
    ::google::protobuf::Arena* submessage_arena = func->GetArena();
    if (message_arena != submessage_arena) {
      func = ::google::protobuf::internal::GetOwnedMessage(message_arena, func, submessage_arena);
    }
    set_has_func();
    _impl_.value_.func_ = func;
  }
  // @@protoc_insertion_point(field_set_allocated:opencv_tensorflow.AttrValue.func)
}
AttrValue::AttrValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opencv_tensorflow.AttrValue)
}
inline PROTOBUF_NDEBUG_INLINE AttrValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

AttrValue::AttrValue(
    ::google::protobuf::Arena* arena,
    const AttrValue& from)
    : ::google::protobuf::Message(arena) {
  AttrValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kS:
        new (&_impl_.value_.s_) decltype(_impl_.value_.s_){arena, from._impl_.value_.s_};
        break;
      case kI:
        _impl_.value_.i_ = from._impl_.value_.i_;
        break;
      case kF:
        _impl_.value_.f_ = from._impl_.value_.f_;
        break;
      case kB:
        _impl_.value_.b_ = from._impl_.value_.b_;
        break;
      case kType:
        _impl_.value_.type_ = from._impl_.value_.type_;
        break;
      case kShape:
        _impl_.value_.shape_ = CreateMaybeMessage<::opencv_tensorflow::TensorShapeProto>(arena, *from._impl_.value_.shape_);
        break;
      case kTensor:
        _impl_.value_.tensor_ = CreateMaybeMessage<::opencv_tensorflow::TensorProto>(arena, *from._impl_.value_.tensor_);
        break;
      case kList:
        _impl_.value_.list_ = CreateMaybeMessage<::opencv_tensorflow::AttrValue_ListValue>(arena, *from._impl_.value_.list_);
        break;
      case kFunc:
        _impl_.value_.func_ = CreateMaybeMessage<::opencv_tensorflow::NameAttrList>(arena, *from._impl_.value_.func_);
        break;
      case kPlaceholder:
        new (&_impl_.value_.placeholder_) decltype(_impl_.value_.placeholder_){arena, from._impl_.value_.placeholder_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:opencv_tensorflow.AttrValue)
}
inline PROTOBUF_NDEBUG_INLINE AttrValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void AttrValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AttrValue::~AttrValue() {
  // @@protoc_insertion_point(destructor:opencv_tensorflow.AttrValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AttrValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
  _impl_.~Impl_();
}

void AttrValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:opencv_tensorflow.AttrValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (value_case()) {
    case kS: {
      _impl_.value_.s_.Destroy();
      break;
    }
    case kI: {
      // No need to clear
      break;
    }
    case kF: {
      // No need to clear
      break;
    }
    case kB: {
      // No need to clear
      break;
    }
    case kType: {
      // No need to clear
      break;
    }
    case kShape: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.shape_;
      }
      break;
    }
    case kTensor: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.tensor_;
      }
      break;
    }
    case kList: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.list_;
      }
      break;
    }
    case kFunc: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.func_;
      }
      break;
    }
    case kPlaceholder: {
      _impl_.value_.placeholder_.Destroy();
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


PROTOBUF_NOINLINE void AttrValue::Clear() {
// @@protoc_insertion_point(message_clear_start:opencv_tensorflow.AttrValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AttrValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 10, 4, 55, 2> AttrValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AttrValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .opencv_tensorflow.AttrValue.ListValue list = 1;
    {PROTOBUF_FIELD_OFFSET(AttrValue, _impl_.value_.list_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes s = 2;
    {PROTOBUF_FIELD_OFFSET(AttrValue, _impl_.value_.s_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 i = 3;
    {PROTOBUF_FIELD_OFFSET(AttrValue, _impl_.value_.i_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // float f = 4;
    {PROTOBUF_FIELD_OFFSET(AttrValue, _impl_.value_.f_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // bool b = 5;
    {PROTOBUF_FIELD_OFFSET(AttrValue, _impl_.value_.b_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .opencv_tensorflow.DataType type = 6;
    {PROTOBUF_FIELD_OFFSET(AttrValue, _impl_.value_.type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .opencv_tensorflow.TensorShapeProto shape = 7;
    {PROTOBUF_FIELD_OFFSET(AttrValue, _impl_.value_.shape_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .opencv_tensorflow.TensorProto tensor = 8;
    {PROTOBUF_FIELD_OFFSET(AttrValue, _impl_.value_.tensor_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string placeholder = 9;
    {PROTOBUF_FIELD_OFFSET(AttrValue, _impl_.value_.placeholder_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .opencv_tensorflow.NameAttrList func = 10;
    {PROTOBUF_FIELD_OFFSET(AttrValue, _impl_.value_.func_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::AttrValue_ListValue>()},
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::TensorShapeProto>()},
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::TensorProto>()},
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::NameAttrList>()},
  }}, {{
    "\33\0\0\0\0\0\0\0\0\13\0\0\0\0\0\0"
    "opencv_tensorflow.AttrValue"
    "placeholder"
  }},
};

::uint8_t* AttrValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencv_tensorflow.AttrValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (value_case()) {
    case kList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::list(this),
          _Internal::list(this).GetCachedSize(), target, stream);
      break;
    }
    case kS: {
      const std::string& _s = this->_internal_s();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
      break;
    }
    case kI: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt64ToArrayWithField<3>(
              stream, this->_internal_i(), target);
      break;
    }
    case kF: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          4, this->_internal_f(), target);
      break;
    }
    case kB: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this->_internal_b(), target);
      break;
    }
    case kType: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this->_internal_type(), target);
      break;
    }
    case kShape: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::shape(this),
          _Internal::shape(this).GetCachedSize(), target, stream);
      break;
    }
    case kTensor: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, _Internal::tensor(this),
          _Internal::tensor(this).GetCachedSize(), target, stream);
      break;
    }
    case kPlaceholder: {
      const std::string& _s = this->_internal_placeholder();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.AttrValue.placeholder");
      target = stream->WriteStringMaybeAliased(9, _s, target);
      break;
    }
    case kFunc: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, _Internal::func(this),
          _Internal::func(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencv_tensorflow.AttrValue)
  return target;
}

::size_t AttrValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencv_tensorflow.AttrValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // bytes s = 2;
    case kS: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_s());
      break;
    }
    // int64 i = 3;
    case kI: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_i());
      break;
    }
    // float f = 4;
    case kF: {
      total_size += 5;
      break;
    }
    // bool b = 5;
    case kB: {
      total_size += 2;
      break;
    }
    // .opencv_tensorflow.DataType type = 6;
    case kType: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
      break;
    }
    // .opencv_tensorflow.TensorShapeProto shape = 7;
    case kShape: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.shape_);
      break;
    }
    // .opencv_tensorflow.TensorProto tensor = 8;
    case kTensor: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.tensor_);
      break;
    }
    // .opencv_tensorflow.AttrValue.ListValue list = 1;
    case kList: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.list_);
      break;
    }
    // .opencv_tensorflow.NameAttrList func = 10;
    case kFunc: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.func_);
      break;
    }
    // string placeholder = 9;
    case kPlaceholder: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_placeholder());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AttrValue::_class_data_ = {
    AttrValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AttrValue::GetClassData() const {
  return &_class_data_;
}

void AttrValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AttrValue*>(&to_msg);
  auto& from = static_cast<const AttrValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opencv_tensorflow.AttrValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kS: {
      _this->_internal_set_s(from._internal_s());
      break;
    }
    case kI: {
      _this->_internal_set_i(from._internal_i());
      break;
    }
    case kF: {
      _this->_internal_set_f(from._internal_f());
      break;
    }
    case kB: {
      _this->_internal_set_b(from._internal_b());
      break;
    }
    case kType: {
      _this->_internal_set_type(from._internal_type());
      break;
    }
    case kShape: {
      _this->_internal_mutable_shape()->::opencv_tensorflow::TensorShapeProto::MergeFrom(
          from._internal_shape());
      break;
    }
    case kTensor: {
      _this->_internal_mutable_tensor()->::opencv_tensorflow::TensorProto::MergeFrom(
          from._internal_tensor());
      break;
    }
    case kList: {
      _this->_internal_mutable_list()->::opencv_tensorflow::AttrValue_ListValue::MergeFrom(
          from._internal_list());
      break;
    }
    case kFunc: {
      _this->_internal_mutable_func()->::opencv_tensorflow::NameAttrList::MergeFrom(
          from._internal_func());
      break;
    }
    case kPlaceholder: {
      _this->_internal_set_placeholder(from._internal_placeholder());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttrValue::CopyFrom(const AttrValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencv_tensorflow.AttrValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AttrValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AttrValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AttrValue::InternalSwap(AttrValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata AttrValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_attr_5fvalue_2eproto_getter, &descriptor_table_attr_5fvalue_2eproto_once,
      file_level_metadata_attr_5fvalue_2eproto[1]);
}
// ===================================================================

NameAttrList_AttrEntry_DoNotUse::NameAttrList_AttrEntry_DoNotUse() {}
NameAttrList_AttrEntry_DoNotUse::NameAttrList_AttrEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata NameAttrList_AttrEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_attr_5fvalue_2eproto_getter, &descriptor_table_attr_5fvalue_2eproto_once,
      file_level_metadata_attr_5fvalue_2eproto[2]);
}
// ===================================================================

class NameAttrList::_Internal {
 public:
};

NameAttrList::NameAttrList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opencv_tensorflow.NameAttrList)
}
inline PROTOBUF_NDEBUG_INLINE NameAttrList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : attr_{visibility, arena, from.attr_},
        name_(arena, from.name_),
        _cached_size_{0} {}

NameAttrList::NameAttrList(
    ::google::protobuf::Arena* arena,
    const NameAttrList& from)
    : ::google::protobuf::Message(arena) {
  NameAttrList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:opencv_tensorflow.NameAttrList)
}
inline PROTOBUF_NDEBUG_INLINE NameAttrList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : attr_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void NameAttrList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NameAttrList::~NameAttrList() {
  // @@protoc_insertion_point(destructor:opencv_tensorflow.NameAttrList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NameAttrList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NameAttrList::Clear() {
// @@protoc_insertion_point(message_clear_start:opencv_tensorflow.NameAttrList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attr_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NameAttrList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 47, 2> NameAttrList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NameAttrList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NameAttrList, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NameAttrList, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, .opencv_tensorflow.AttrValue> attr = 2;
    {PROTOBUF_FIELD_OFFSET(NameAttrList, _impl_.attr_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NameAttrList()._impl_.attr_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::opencv_tensorflow::AttrValue>},
  }}, {{
    "\36\4\4\0\0\0\0\0"
    "opencv_tensorflow.NameAttrList"
    "name"
    "attr"
  }},
};

::uint8_t* NameAttrList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencv_tensorflow.NameAttrList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.NameAttrList.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // map<string, .opencv_tensorflow.AttrValue> attr = 2;
  if (!_internal_attr().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::opencv_tensorflow::AttrValue>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::opencv_tensorflow::AttrValue,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = _internal_attr();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.NameAttrList.attr");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.NameAttrList.attr");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencv_tensorflow.NameAttrList)
  return target;
}

::size_t NameAttrList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencv_tensorflow.NameAttrList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .opencv_tensorflow.AttrValue> attr = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_attr_size());
  for (const auto& entry : _internal_attr()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::opencv_tensorflow::AttrValue,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NameAttrList::_class_data_ = {
    NameAttrList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NameAttrList::GetClassData() const {
  return &_class_data_;
}

void NameAttrList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NameAttrList*>(&to_msg);
  auto& from = static_cast<const NameAttrList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opencv_tensorflow.NameAttrList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.attr_.MergeFrom(from._impl_.attr_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NameAttrList::CopyFrom(const NameAttrList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencv_tensorflow.NameAttrList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NameAttrList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NameAttrList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NameAttrList::InternalSwap(NameAttrList* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.attr_.InternalSwap(&other->_impl_.attr_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata NameAttrList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_attr_5fvalue_2eproto_getter, &descriptor_table_attr_5fvalue_2eproto_once,
      file_level_metadata_attr_5fvalue_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace opencv_tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
