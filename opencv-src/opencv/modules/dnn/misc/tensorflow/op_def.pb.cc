// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: op_def.proto

#include "op_def.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace opencv_tensorflow {

inline constexpr OpDeprecation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : explanation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OpDeprecation::OpDeprecation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OpDeprecationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpDeprecationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpDeprecationDefaultTypeInternal() {}
  union {
    OpDeprecation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpDeprecationDefaultTypeInternal _OpDeprecation_default_instance_;

inline constexpr OpDef_ArgDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_attr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        number_attr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_list_attr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::opencv_tensorflow::DataType >(0)},
        is_ref_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OpDef_ArgDef::OpDef_ArgDef(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OpDef_ArgDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpDef_ArgDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpDef_ArgDefDefaultTypeInternal() {}
  union {
    OpDef_ArgDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpDef_ArgDefDefaultTypeInternal _OpDef_ArgDef_default_instance_;

inline constexpr OpDef_AttrDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        default_value_{nullptr},
        allowed_values_{nullptr},
        minimum_{::int64_t{0}},
        has_minimum_{false} {}

template <typename>
PROTOBUF_CONSTEXPR OpDef_AttrDef::OpDef_AttrDef(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OpDef_AttrDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpDef_AttrDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpDef_AttrDefDefaultTypeInternal() {}
  union {
    OpDef_AttrDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpDef_AttrDefDefaultTypeInternal _OpDef_AttrDef_default_instance_;

inline constexpr OpDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_arg_{},
        output_arg_{},
        attr_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        summary_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        deprecation_{nullptr},
        is_commutative_{false},
        is_aggregate_{false},
        is_stateful_{false},
        allows_uninitialized_input_{false} {}

template <typename>
PROTOBUF_CONSTEXPR OpDef::OpDef(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OpDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpDefDefaultTypeInternal() {}
  union {
    OpDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpDefDefaultTypeInternal _OpDef_default_instance_;

inline constexpr OpList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : op_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OpList::OpList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OpListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpListDefaultTypeInternal() {}
  union {
    OpList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpListDefaultTypeInternal _OpList_default_instance_;
}  // namespace opencv_tensorflow
static ::_pb::Metadata file_level_metadata_op_5fdef_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_op_5fdef_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_op_5fdef_2eproto = nullptr;
const ::uint32_t TableStruct_op_5fdef_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_ArgDef, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_ArgDef, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_ArgDef, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_ArgDef, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_ArgDef, _impl_.type_attr_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_ArgDef, _impl_.number_attr_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_ArgDef, _impl_.type_list_attr_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_ArgDef, _impl_.is_ref_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_AttrDef, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_AttrDef, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_AttrDef, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_AttrDef, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_AttrDef, _impl_.default_value_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_AttrDef, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_AttrDef, _impl_.has_minimum_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_AttrDef, _impl_.minimum_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef_AttrDef, _impl_.allowed_values_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.input_arg_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.output_arg_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.attr_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.deprecation_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.summary_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.is_commutative_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.is_aggregate_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.is_stateful_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDef, _impl_.allows_uninitialized_input_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDeprecation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDeprecation, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpDeprecation, _impl_.explanation_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::opencv_tensorflow::OpList, _impl_.op_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::opencv_tensorflow::OpDef_ArgDef)},
        {15, 30, -1, sizeof(::opencv_tensorflow::OpDef_AttrDef)},
        {37, 56, -1, sizeof(::opencv_tensorflow::OpDef)},
        {67, -1, -1, sizeof(::opencv_tensorflow::OpDeprecation)},
        {77, -1, -1, sizeof(::opencv_tensorflow::OpList)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::opencv_tensorflow::_OpDef_ArgDef_default_instance_._instance,
    &::opencv_tensorflow::_OpDef_AttrDef_default_instance_._instance,
    &::opencv_tensorflow::_OpDef_default_instance_._instance,
    &::opencv_tensorflow::_OpDeprecation_default_instance_._instance,
    &::opencv_tensorflow::_OpList_default_instance_._instance,
};
const char descriptor_table_protodef_op_5fdef_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014op_def.proto\022\021opencv_tensorflow\032\020attr_"
    "value.proto\032\013types.proto\"\351\005\n\005OpDef\022\014\n\004na"
    "me\030\001 \001(\t\0222\n\tinput_arg\030\002 \003(\0132\037.opencv_ten"
    "sorflow.OpDef.ArgDef\0223\n\noutput_arg\030\003 \003(\013"
    "2\037.opencv_tensorflow.OpDef.ArgDef\022.\n\004att"
    "r\030\004 \003(\0132 .opencv_tensorflow.OpDef.AttrDe"
    "f\0225\n\013deprecation\030\010 \001(\0132 .opencv_tensorfl"
    "ow.OpDeprecation\022\017\n\007summary\030\005 \001(\t\022\023\n\013des"
    "cription\030\006 \001(\t\022\026\n\016is_commutative\030\022 \001(\010\022\024"
    "\n\014is_aggregate\030\020 \001(\010\022\023\n\013is_stateful\030\021 \001("
    "\010\022\"\n\032allows_uninitialized_input\030\023 \001(\010\032\246\001"
    "\n\006ArgDef\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 "
    "\001(\t\022)\n\004type\030\003 \001(\0162\033.opencv_tensorflow.Da"
    "taType\022\021\n\ttype_attr\030\004 \001(\t\022\023\n\013number_attr"
    "\030\005 \001(\t\022\026\n\016type_list_attr\030\006 \001(\t\022\016\n\006is_ref"
    "\030\020 \001(\010\032\313\001\n\007AttrDef\022\014\n\004name\030\001 \001(\t\022\014\n\004type"
    "\030\002 \001(\t\0223\n\rdefault_value\030\003 \001(\0132\034.opencv_t"
    "ensorflow.AttrValue\022\023\n\013description\030\004 \001(\t"
    "\022\023\n\013has_minimum\030\005 \001(\010\022\017\n\007minimum\030\006 \001(\003\0224"
    "\n\016allowed_values\030\007 \001(\0132\034.opencv_tensorfl"
    "ow.AttrValue\"5\n\rOpDeprecation\022\017\n\007version"
    "\030\001 \001(\005\022\023\n\013explanation\030\002 \001(\t\".\n\006OpList\022$\n"
    "\002op\030\001 \003(\0132\030.opencv_tensorflow.OpDefB,\n\030o"
    "rg.tensorflow.frameworkB\013OpDefProtosP\001\370\001"
    "\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_op_5fdef_2eproto_deps[2] =
    {
        &::descriptor_table_attr_5fvalue_2eproto,
        &::descriptor_table_types_2eproto,
};
static ::absl::once_flag descriptor_table_op_5fdef_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_op_5fdef_2eproto = {
    false,
    false,
    969,
    descriptor_table_protodef_op_5fdef_2eproto,
    "op_def.proto",
    &descriptor_table_op_5fdef_2eproto_once,
    descriptor_table_op_5fdef_2eproto_deps,
    2,
    5,
    schemas,
    file_default_instances,
    TableStruct_op_5fdef_2eproto::offsets,
    file_level_metadata_op_5fdef_2eproto,
    file_level_enum_descriptors_op_5fdef_2eproto,
    file_level_service_descriptors_op_5fdef_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_op_5fdef_2eproto_getter() {
  return &descriptor_table_op_5fdef_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_op_5fdef_2eproto(&descriptor_table_op_5fdef_2eproto);
namespace opencv_tensorflow {
// ===================================================================

class OpDef_ArgDef::_Internal {
 public:
};

OpDef_ArgDef::OpDef_ArgDef(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opencv_tensorflow.OpDef.ArgDef)
}
inline PROTOBUF_NDEBUG_INLINE OpDef_ArgDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        description_(arena, from.description_),
        type_attr_(arena, from.type_attr_),
        number_attr_(arena, from.number_attr_),
        type_list_attr_(arena, from.type_list_attr_),
        _cached_size_{0} {}

OpDef_ArgDef::OpDef_ArgDef(
    ::google::protobuf::Arena* arena,
    const OpDef_ArgDef& from)
    : ::google::protobuf::Message(arena) {
  OpDef_ArgDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, is_ref_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::is_ref_));

  // @@protoc_insertion_point(copy_constructor:opencv_tensorflow.OpDef.ArgDef)
}
inline PROTOBUF_NDEBUG_INLINE OpDef_ArgDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        description_(arena),
        type_attr_(arena),
        number_attr_(arena),
        type_list_attr_(arena),
        _cached_size_{0} {}

inline void OpDef_ArgDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, is_ref_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::is_ref_));
}
OpDef_ArgDef::~OpDef_ArgDef() {
  // @@protoc_insertion_point(destructor:opencv_tensorflow.OpDef.ArgDef)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OpDef_ArgDef::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.type_attr_.Destroy();
  _impl_.number_attr_.Destroy();
  _impl_.type_list_attr_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OpDef_ArgDef::Clear() {
// @@protoc_insertion_point(message_clear_start:opencv_tensorflow.OpDef.ArgDef)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.type_attr_.ClearToEmpty();
  _impl_.number_attr_.ClearToEmpty();
  _impl_.type_list_attr_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_ref_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.is_ref_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OpDef_ArgDef::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 88, 2> OpDef_ArgDef::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    16, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934464,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OpDef_ArgDef_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool is_ref = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.is_ref_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.name_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.description_)}},
    // .opencv_tensorflow.DataType type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OpDef_ArgDef, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.type_)}},
    // string type_attr = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.type_attr_)}},
    // string number_attr = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.number_attr_)}},
    // string type_list_attr = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.type_list_attr_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .opencv_tensorflow.DataType type = 3;
    {PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string type_attr = 4;
    {PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.type_attr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string number_attr = 5;
    {PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.number_attr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type_list_attr = 6;
    {PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.type_list_attr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_ref = 16;
    {PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.is_ref_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\36\4\13\0\11\13\16\0"
    "opencv_tensorflow.OpDef.ArgDef"
    "name"
    "description"
    "type_attr"
    "number_attr"
    "type_list_attr"
  }},
};

::uint8_t* OpDef_ArgDef::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencv_tensorflow.OpDef.ArgDef)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.ArgDef.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.ArgDef.description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .opencv_tensorflow.DataType type = 3;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_type(), target);
  }

  // string type_attr = 4;
  if (!this->_internal_type_attr().empty()) {
    const std::string& _s = this->_internal_type_attr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.ArgDef.type_attr");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string number_attr = 5;
  if (!this->_internal_number_attr().empty()) {
    const std::string& _s = this->_internal_number_attr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.ArgDef.number_attr");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string type_list_attr = 6;
  if (!this->_internal_type_list_attr().empty()) {
    const std::string& _s = this->_internal_type_list_attr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.ArgDef.type_list_attr");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // bool is_ref = 16;
  if (this->_internal_is_ref() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        16, this->_internal_is_ref(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencv_tensorflow.OpDef.ArgDef)
  return target;
}

::size_t OpDef_ArgDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencv_tensorflow.OpDef.ArgDef)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // string type_attr = 4;
  if (!this->_internal_type_attr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type_attr());
  }

  // string number_attr = 5;
  if (!this->_internal_number_attr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_number_attr());
  }

  // string type_list_attr = 6;
  if (!this->_internal_type_list_attr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type_list_attr());
  }

  // .opencv_tensorflow.DataType type = 3;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // bool is_ref = 16;
  if (this->_internal_is_ref() != 0) {
    total_size += 3;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OpDef_ArgDef::_class_data_ = {
    OpDef_ArgDef::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OpDef_ArgDef::GetClassData() const {
  return &_class_data_;
}

void OpDef_ArgDef::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OpDef_ArgDef*>(&to_msg);
  auto& from = static_cast<const OpDef_ArgDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opencv_tensorflow.OpDef.ArgDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_type_attr().empty()) {
    _this->_internal_set_type_attr(from._internal_type_attr());
  }
  if (!from._internal_number_attr().empty()) {
    _this->_internal_set_number_attr(from._internal_number_attr());
  }
  if (!from._internal_type_list_attr().empty()) {
    _this->_internal_set_type_list_attr(from._internal_type_list_attr());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_is_ref() != 0) {
    _this->_internal_set_is_ref(from._internal_is_ref());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpDef_ArgDef::CopyFrom(const OpDef_ArgDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencv_tensorflow.OpDef.ArgDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OpDef_ArgDef::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OpDef_ArgDef::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OpDef_ArgDef::InternalSwap(OpDef_ArgDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_attr_, &other->_impl_.type_attr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.number_attr_, &other->_impl_.number_attr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_list_attr_, &other->_impl_.type_list_attr_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.is_ref_)
      + sizeof(OpDef_ArgDef::_impl_.is_ref_)
      - PROTOBUF_FIELD_OFFSET(OpDef_ArgDef, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata OpDef_ArgDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_op_5fdef_2eproto_getter, &descriptor_table_op_5fdef_2eproto_once,
      file_level_metadata_op_5fdef_2eproto[0]);
}
// ===================================================================

class OpDef_AttrDef::_Internal {
 public:
  using HasBits = decltype(std::declval<OpDef_AttrDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_._has_bits_);
  static const ::opencv_tensorflow::AttrValue& default_value(const OpDef_AttrDef* msg);
  static void set_has_default_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::opencv_tensorflow::AttrValue& allowed_values(const OpDef_AttrDef* msg);
  static void set_has_allowed_values(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::opencv_tensorflow::AttrValue& OpDef_AttrDef::_Internal::default_value(const OpDef_AttrDef* msg) {
  return *msg->_impl_.default_value_;
}
const ::opencv_tensorflow::AttrValue& OpDef_AttrDef::_Internal::allowed_values(const OpDef_AttrDef* msg) {
  return *msg->_impl_.allowed_values_;
}
void OpDef_AttrDef::clear_default_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.default_value_ != nullptr) _impl_.default_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OpDef_AttrDef::clear_allowed_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.allowed_values_ != nullptr) _impl_.allowed_values_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
OpDef_AttrDef::OpDef_AttrDef(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opencv_tensorflow.OpDef.AttrDef)
}
inline PROTOBUF_NDEBUG_INLINE OpDef_AttrDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        type_(arena, from.type_),
        description_(arena, from.description_) {}

OpDef_AttrDef::OpDef_AttrDef(
    ::google::protobuf::Arena* arena,
    const OpDef_AttrDef& from)
    : ::google::protobuf::Message(arena) {
  OpDef_AttrDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.default_value_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::opencv_tensorflow::AttrValue>(arena, *from._impl_.default_value_)
                : nullptr;
  _impl_.allowed_values_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::opencv_tensorflow::AttrValue>(arena, *from._impl_.allowed_values_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, minimum_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, minimum_),
           offsetof(Impl_, has_minimum_) -
               offsetof(Impl_, minimum_) +
               sizeof(Impl_::has_minimum_));

  // @@protoc_insertion_point(copy_constructor:opencv_tensorflow.OpDef.AttrDef)
}
inline PROTOBUF_NDEBUG_INLINE OpDef_AttrDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        type_(arena),
        description_(arena) {}

inline void OpDef_AttrDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, default_value_),
           0,
           offsetof(Impl_, has_minimum_) -
               offsetof(Impl_, default_value_) +
               sizeof(Impl_::has_minimum_));
}
OpDef_AttrDef::~OpDef_AttrDef() {
  // @@protoc_insertion_point(destructor:opencv_tensorflow.OpDef.AttrDef)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OpDef_AttrDef::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.type_.Destroy();
  _impl_.description_.Destroy();
  delete _impl_.default_value_;
  delete _impl_.allowed_values_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OpDef_AttrDef::Clear() {
// @@protoc_insertion_point(message_clear_start:opencv_tensorflow.OpDef.AttrDef)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.default_value_ != nullptr);
      _impl_.default_value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.allowed_values_ != nullptr);
      _impl_.allowed_values_->Clear();
    }
  }
  ::memset(&_impl_.minimum_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.has_minimum_) -
      reinterpret_cast<char*>(&_impl_.minimum_)) + sizeof(_impl_.has_minimum_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OpDef_AttrDef::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 59, 2> OpDef_AttrDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OpDef_AttrDef_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.name_)}},
    // string type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.type_)}},
    // .opencv_tensorflow.AttrValue default_value = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.default_value_)}},
    // string description = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.description_)}},
    // bool has_minimum = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OpDef_AttrDef, _impl_.has_minimum_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.has_minimum_)}},
    // int64 minimum = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OpDef_AttrDef, _impl_.minimum_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.minimum_)}},
    // .opencv_tensorflow.AttrValue allowed_values = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.allowed_values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2;
    {PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .opencv_tensorflow.AttrValue default_value = 3;
    {PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.default_value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string description = 4;
    {PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool has_minimum = 5;
    {PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.has_minimum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 minimum = 6;
    {PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.minimum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .opencv_tensorflow.AttrValue allowed_values = 7;
    {PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.allowed_values_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::AttrValue>()},
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::AttrValue>()},
  }}, {{
    "\37\4\4\0\13\0\0\0"
    "opencv_tensorflow.OpDef.AttrDef"
    "name"
    "type"
    "description"
  }},
};

::uint8_t* OpDef_AttrDef::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencv_tensorflow.OpDef.AttrDef)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.AttrDef.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.AttrDef.type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .opencv_tensorflow.AttrValue default_value = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::default_value(this),
        _Internal::default_value(this).GetCachedSize(), target, stream);
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.AttrDef.description");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // bool has_minimum = 5;
  if (this->_internal_has_minimum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_has_minimum(), target);
  }

  // int64 minimum = 6;
  if (this->_internal_minimum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_minimum(), target);
  }

  // .opencv_tensorflow.AttrValue allowed_values = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::allowed_values(this),
        _Internal::allowed_values(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencv_tensorflow.OpDef.AttrDef)
  return target;
}

::size_t OpDef_AttrDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencv_tensorflow.OpDef.AttrDef)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .opencv_tensorflow.AttrValue default_value = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.default_value_);
    }

    // .opencv_tensorflow.AttrValue allowed_values = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.allowed_values_);
    }

  }
  // int64 minimum = 6;
  if (this->_internal_minimum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_minimum());
  }

  // bool has_minimum = 5;
  if (this->_internal_has_minimum() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OpDef_AttrDef::_class_data_ = {
    OpDef_AttrDef::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OpDef_AttrDef::GetClassData() const {
  return &_class_data_;
}

void OpDef_AttrDef::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OpDef_AttrDef*>(&to_msg);
  auto& from = static_cast<const OpDef_AttrDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opencv_tensorflow.OpDef.AttrDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default_value()->::opencv_tensorflow::AttrValue::MergeFrom(
          from._internal_default_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_allowed_values()->::opencv_tensorflow::AttrValue::MergeFrom(
          from._internal_allowed_values());
    }
  }
  if (from._internal_minimum() != 0) {
    _this->_internal_set_minimum(from._internal_minimum());
  }
  if (from._internal_has_minimum() != 0) {
    _this->_internal_set_has_minimum(from._internal_has_minimum());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpDef_AttrDef::CopyFrom(const OpDef_AttrDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencv_tensorflow.OpDef.AttrDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OpDef_AttrDef::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OpDef_AttrDef::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OpDef_AttrDef::InternalSwap(OpDef_AttrDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.has_minimum_)
      + sizeof(OpDef_AttrDef::_impl_.has_minimum_)
      - PROTOBUF_FIELD_OFFSET(OpDef_AttrDef, _impl_.default_value_)>(
          reinterpret_cast<char*>(&_impl_.default_value_),
          reinterpret_cast<char*>(&other->_impl_.default_value_));
}

::google::protobuf::Metadata OpDef_AttrDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_op_5fdef_2eproto_getter, &descriptor_table_op_5fdef_2eproto_once,
      file_level_metadata_op_5fdef_2eproto[1]);
}
// ===================================================================

class OpDef::_Internal {
 public:
  using HasBits = decltype(std::declval<OpDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OpDef, _impl_._has_bits_);
  static const ::opencv_tensorflow::OpDeprecation& deprecation(const OpDef* msg);
  static void set_has_deprecation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::opencv_tensorflow::OpDeprecation& OpDef::_Internal::deprecation(const OpDef* msg) {
  return *msg->_impl_.deprecation_;
}
OpDef::OpDef(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opencv_tensorflow.OpDef)
}
inline PROTOBUF_NDEBUG_INLINE OpDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_arg_{visibility, arena, from.input_arg_},
        output_arg_{visibility, arena, from.output_arg_},
        attr_{visibility, arena, from.attr_},
        name_(arena, from.name_),
        summary_(arena, from.summary_),
        description_(arena, from.description_) {}

OpDef::OpDef(
    ::google::protobuf::Arena* arena,
    const OpDef& from)
    : ::google::protobuf::Message(arena) {
  OpDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.deprecation_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::opencv_tensorflow::OpDeprecation>(arena, *from._impl_.deprecation_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_commutative_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_commutative_),
           offsetof(Impl_, allows_uninitialized_input_) -
               offsetof(Impl_, is_commutative_) +
               sizeof(Impl_::allows_uninitialized_input_));

  // @@protoc_insertion_point(copy_constructor:opencv_tensorflow.OpDef)
}
inline PROTOBUF_NDEBUG_INLINE OpDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        input_arg_{visibility, arena},
        output_arg_{visibility, arena},
        attr_{visibility, arena},
        name_(arena),
        summary_(arena),
        description_(arena) {}

inline void OpDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, deprecation_),
           0,
           offsetof(Impl_, allows_uninitialized_input_) -
               offsetof(Impl_, deprecation_) +
               sizeof(Impl_::allows_uninitialized_input_));
}
OpDef::~OpDef() {
  // @@protoc_insertion_point(destructor:opencv_tensorflow.OpDef)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OpDef::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.summary_.Destroy();
  _impl_.description_.Destroy();
  delete _impl_.deprecation_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OpDef::Clear() {
// @@protoc_insertion_point(message_clear_start:opencv_tensorflow.OpDef)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_arg_.Clear();
  _impl_.output_arg_.Clear();
  _impl_.attr_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.summary_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.deprecation_ != nullptr);
    _impl_.deprecation_->Clear();
  }
  ::memset(&_impl_.is_commutative_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.allows_uninitialized_input_) -
      reinterpret_cast<char*>(&_impl_.is_commutative_)) + sizeof(_impl_.allows_uninitialized_input_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OpDef::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 4, 62, 2> OpDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OpDef, _impl_._has_bits_),
    0, // no _extensions_
    19, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294475584,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OpDef_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool is_aggregate = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef, _impl_.is_aggregate_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef, _impl_.name_)}},
    // repeated .opencv_tensorflow.OpDef.ArgDef input_arg = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef, _impl_.input_arg_)}},
    // repeated .opencv_tensorflow.OpDef.ArgDef output_arg = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(OpDef, _impl_.output_arg_)}},
    // repeated .opencv_tensorflow.OpDef.AttrDef attr = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(OpDef, _impl_.attr_)}},
    // string summary = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef, _impl_.summary_)}},
    // string description = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OpDef, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .opencv_tensorflow.OpDeprecation deprecation = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 3, PROTOBUF_FIELD_OFFSET(OpDef, _impl_.deprecation_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .opencv_tensorflow.OpDef.ArgDef input_arg = 2;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.input_arg_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .opencv_tensorflow.OpDef.ArgDef output_arg = 3;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.output_arg_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .opencv_tensorflow.OpDef.AttrDef attr = 4;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.attr_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string summary = 5;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.summary_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 6;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .opencv_tensorflow.OpDeprecation deprecation = 8;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.deprecation_), _Internal::kHasBitsOffset + 0, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_aggregate = 16;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.is_aggregate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_stateful = 17;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.is_stateful_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_commutative = 18;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.is_commutative_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool allows_uninitialized_input = 19;
    {PROTOBUF_FIELD_OFFSET(OpDef, _impl_.allows_uninitialized_input_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::OpDef_ArgDef>()},
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::OpDef_ArgDef>()},
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::OpDef_AttrDef>()},
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::OpDeprecation>()},
  }}, {{
    "\27\4\0\0\0\7\13\0\0\0\0\0\0\0\0\0"
    "opencv_tensorflow.OpDef"
    "name"
    "summary"
    "description"
  }},
};

::uint8_t* OpDef::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencv_tensorflow.OpDef)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .opencv_tensorflow.OpDef.ArgDef input_arg = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_input_arg_size()); i < n; i++) {
    const auto& repfield = this->_internal_input_arg().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .opencv_tensorflow.OpDef.ArgDef output_arg = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_output_arg_size()); i < n; i++) {
    const auto& repfield = this->_internal_output_arg().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .opencv_tensorflow.OpDef.AttrDef attr = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attr_size()); i < n; i++) {
    const auto& repfield = this->_internal_attr().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string summary = 5;
  if (!this->_internal_summary().empty()) {
    const std::string& _s = this->_internal_summary();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.summary");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string description = 6;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDef.description");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .opencv_tensorflow.OpDeprecation deprecation = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::deprecation(this),
        _Internal::deprecation(this).GetCachedSize(), target, stream);
  }

  // bool is_aggregate = 16;
  if (this->_internal_is_aggregate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        16, this->_internal_is_aggregate(), target);
  }

  // bool is_stateful = 17;
  if (this->_internal_is_stateful() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        17, this->_internal_is_stateful(), target);
  }

  // bool is_commutative = 18;
  if (this->_internal_is_commutative() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        18, this->_internal_is_commutative(), target);
  }

  // bool allows_uninitialized_input = 19;
  if (this->_internal_allows_uninitialized_input() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        19, this->_internal_allows_uninitialized_input(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencv_tensorflow.OpDef)
  return target;
}

::size_t OpDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencv_tensorflow.OpDef)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opencv_tensorflow.OpDef.ArgDef input_arg = 2;
  total_size += 1UL * this->_internal_input_arg_size();
  for (const auto& msg : this->_internal_input_arg()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .opencv_tensorflow.OpDef.ArgDef output_arg = 3;
  total_size += 1UL * this->_internal_output_arg_size();
  for (const auto& msg : this->_internal_output_arg()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .opencv_tensorflow.OpDef.AttrDef attr = 4;
  total_size += 1UL * this->_internal_attr_size();
  for (const auto& msg : this->_internal_attr()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string summary = 5;
  if (!this->_internal_summary().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_summary());
  }

  // string description = 6;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // .opencv_tensorflow.OpDeprecation deprecation = 8;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.deprecation_);
  }

  // bool is_commutative = 18;
  if (this->_internal_is_commutative() != 0) {
    total_size += 3;
  }

  // bool is_aggregate = 16;
  if (this->_internal_is_aggregate() != 0) {
    total_size += 3;
  }

  // bool is_stateful = 17;
  if (this->_internal_is_stateful() != 0) {
    total_size += 3;
  }

  // bool allows_uninitialized_input = 19;
  if (this->_internal_allows_uninitialized_input() != 0) {
    total_size += 3;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OpDef::_class_data_ = {
    OpDef::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OpDef::GetClassData() const {
  return &_class_data_;
}

void OpDef::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OpDef*>(&to_msg);
  auto& from = static_cast<const OpDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opencv_tensorflow.OpDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_arg()->MergeFrom(
      from._internal_input_arg());
  _this->_internal_mutable_output_arg()->MergeFrom(
      from._internal_output_arg());
  _this->_internal_mutable_attr()->MergeFrom(
      from._internal_attr());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_summary().empty()) {
    _this->_internal_set_summary(from._internal_summary());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_deprecation()->::opencv_tensorflow::OpDeprecation::MergeFrom(
        from._internal_deprecation());
  }
  if (from._internal_is_commutative() != 0) {
    _this->_internal_set_is_commutative(from._internal_is_commutative());
  }
  if (from._internal_is_aggregate() != 0) {
    _this->_internal_set_is_aggregate(from._internal_is_aggregate());
  }
  if (from._internal_is_stateful() != 0) {
    _this->_internal_set_is_stateful(from._internal_is_stateful());
  }
  if (from._internal_allows_uninitialized_input() != 0) {
    _this->_internal_set_allows_uninitialized_input(from._internal_allows_uninitialized_input());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpDef::CopyFrom(const OpDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencv_tensorflow.OpDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OpDef::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OpDef::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OpDef::InternalSwap(OpDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.input_arg_.InternalSwap(&other->_impl_.input_arg_);
  _impl_.output_arg_.InternalSwap(&other->_impl_.output_arg_);
  _impl_.attr_.InternalSwap(&other->_impl_.attr_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_, &other->_impl_.summary_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OpDef, _impl_.allows_uninitialized_input_)
      + sizeof(OpDef::_impl_.allows_uninitialized_input_)
      - PROTOBUF_FIELD_OFFSET(OpDef, _impl_.deprecation_)>(
          reinterpret_cast<char*>(&_impl_.deprecation_),
          reinterpret_cast<char*>(&other->_impl_.deprecation_));
}

::google::protobuf::Metadata OpDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_op_5fdef_2eproto_getter, &descriptor_table_op_5fdef_2eproto_once,
      file_level_metadata_op_5fdef_2eproto[2]);
}
// ===================================================================

class OpDeprecation::_Internal {
 public:
};

OpDeprecation::OpDeprecation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opencv_tensorflow.OpDeprecation)
}
inline PROTOBUF_NDEBUG_INLINE OpDeprecation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : explanation_(arena, from.explanation_),
        _cached_size_{0} {}

OpDeprecation::OpDeprecation(
    ::google::protobuf::Arena* arena,
    const OpDeprecation& from)
    : ::google::protobuf::Message(arena) {
  OpDeprecation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:opencv_tensorflow.OpDeprecation)
}
inline PROTOBUF_NDEBUG_INLINE OpDeprecation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : explanation_(arena),
        _cached_size_{0} {}

inline void OpDeprecation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
OpDeprecation::~OpDeprecation() {
  // @@protoc_insertion_point(destructor:opencv_tensorflow.OpDeprecation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OpDeprecation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.explanation_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OpDeprecation::Clear() {
// @@protoc_insertion_point(message_clear_start:opencv_tensorflow.OpDeprecation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.explanation_.ClearToEmpty();
  _impl_.version_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OpDeprecation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> OpDeprecation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OpDeprecation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string explanation = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OpDeprecation, _impl_.explanation_)}},
    // int32 version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OpDeprecation, _impl_.version_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OpDeprecation, _impl_.version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 version = 1;
    {PROTOBUF_FIELD_OFFSET(OpDeprecation, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string explanation = 2;
    {PROTOBUF_FIELD_OFFSET(OpDeprecation, _impl_.explanation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\13\0\0\0\0\0"
    "opencv_tensorflow.OpDeprecation"
    "explanation"
  }},
};

::uint8_t* OpDeprecation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencv_tensorflow.OpDeprecation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 version = 1;
  if (this->_internal_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_version(), target);
  }

  // string explanation = 2;
  if (!this->_internal_explanation().empty()) {
    const std::string& _s = this->_internal_explanation();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opencv_tensorflow.OpDeprecation.explanation");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencv_tensorflow.OpDeprecation)
  return target;
}

::size_t OpDeprecation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencv_tensorflow.OpDeprecation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string explanation = 2;
  if (!this->_internal_explanation().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_explanation());
  }

  // int32 version = 1;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OpDeprecation::_class_data_ = {
    OpDeprecation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OpDeprecation::GetClassData() const {
  return &_class_data_;
}

void OpDeprecation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OpDeprecation*>(&to_msg);
  auto& from = static_cast<const OpDeprecation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opencv_tensorflow.OpDeprecation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_explanation().empty()) {
    _this->_internal_set_explanation(from._internal_explanation());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpDeprecation::CopyFrom(const OpDeprecation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencv_tensorflow.OpDeprecation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OpDeprecation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OpDeprecation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OpDeprecation::InternalSwap(OpDeprecation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.explanation_, &other->_impl_.explanation_, arena);
        swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata OpDeprecation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_op_5fdef_2eproto_getter, &descriptor_table_op_5fdef_2eproto_once,
      file_level_metadata_op_5fdef_2eproto[3]);
}
// ===================================================================

class OpList::_Internal {
 public:
};

OpList::OpList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opencv_tensorflow.OpList)
}
inline PROTOBUF_NDEBUG_INLINE OpList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : op_{visibility, arena, from.op_},
        _cached_size_{0} {}

OpList::OpList(
    ::google::protobuf::Arena* arena,
    const OpList& from)
    : ::google::protobuf::Message(arena) {
  OpList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:opencv_tensorflow.OpList)
}
inline PROTOBUF_NDEBUG_INLINE OpList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : op_{visibility, arena},
        _cached_size_{0} {}

inline void OpList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OpList::~OpList() {
  // @@protoc_insertion_point(destructor:opencv_tensorflow.OpList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OpList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OpList::Clear() {
// @@protoc_insertion_point(message_clear_start:opencv_tensorflow.OpList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.op_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OpList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> OpList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OpList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .opencv_tensorflow.OpDef op = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OpList, _impl_.op_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .opencv_tensorflow.OpDef op = 1;
    {PROTOBUF_FIELD_OFFSET(OpList, _impl_.op_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::opencv_tensorflow::OpDef>()},
  }}, {{
  }},
};

::uint8_t* OpList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencv_tensorflow.OpList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .opencv_tensorflow.OpDef op = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_op_size()); i < n; i++) {
    const auto& repfield = this->_internal_op().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencv_tensorflow.OpList)
  return target;
}

::size_t OpList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencv_tensorflow.OpList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opencv_tensorflow.OpDef op = 1;
  total_size += 1UL * this->_internal_op_size();
  for (const auto& msg : this->_internal_op()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OpList::_class_data_ = {
    OpList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OpList::GetClassData() const {
  return &_class_data_;
}

void OpList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OpList*>(&to_msg);
  auto& from = static_cast<const OpList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opencv_tensorflow.OpList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_op()->MergeFrom(
      from._internal_op());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpList::CopyFrom(const OpList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencv_tensorflow.OpList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OpList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OpList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OpList::InternalSwap(OpList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.op_.InternalSwap(&other->_impl_.op_);
}

::google::protobuf::Metadata OpList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_op_5fdef_2eproto_getter, &descriptor_table_op_5fdef_2eproto_once,
      file_level_metadata_op_5fdef_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace opencv_tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
